{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///AgoraRTC-production.js","webpack:///webpack/bootstrap 604b90e491f3c8ca8ff0","webpack:///./src/utils/Logger.js","webpack:///./src/Helper.js","webpack:///./src/Events.js","webpack:///./src/utils/Browser.js","webpack:///./src/Config.js","webpack:///./src/views/View.js","webpack:///./src/Report2.js","webpack:///./src/Stream.js","webpack:///./src/utils/ErrorCodes.js","webpack:///./src/views/Bar.js","webpack:///./src/Connection.js","webpack:///./src/utils/AgoraCall.js","webpack:///./src/utils/Request.js","webpack:///./src/Server.js","webpack:///./src/utils/Time.js","webpack:///./src/views/VideoPlayer.js","webpack:///./src/views/Speaker.js","webpack:///./node_modules/css-element-queries/src/ResizeSensor.js","webpack:///./src/vendor/adapter.js","webpack:///./src/views/AudioPlayer.js","webpack:///./src/webrtc-stacks/ChromeCanaryStack.js","webpack:///./src/webrtc-stacks/ChromeStableStack.js","webpack:///./src/webrtc-stacks/SafariStableStack.js","webpack:///./src/webrtc-stacks/FcStack.js","webpack:///./src/webrtc-stacks/FirefoxStack.js","webpack:///./src/Stats.js","webpack:///./src/Client.js","webpack:///./src/GatewayClient.js","webpack:///./src/Websocket.js","webpack:///./src/Signal.js","webpack:///./src/SimMap.js","webpack:///./src/Entry.production.js","webpack:///../node_modules/uuid/v4.js","webpack:///../node_modules/uuid/lib/rng-browser.js","webpack:///(webpack)/buildin/global.js","webpack:///../node_modules/uuid/lib/bytesToUuid.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","_Time","Logger","setLogLevel","log","debug","info","warning","error","logLevel","level","arguments","args","getTimestamp","console","apply","warn","length","push","DEBUG","INFO","WARNING","ERROR","NONE","default","_interopRequireDefault","obj","generateSessionId","_v2","replace","toUpperCase","safeCall","vsResHack","CSCrashRecord","audioLevelHelper","checkSystemRequirements","undefined","_Browser","Browser","newObj","key","_Logger","_Logger2","_v","PC","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","getUserMedia","navigator","webkitGetUserMedia","msGetUserMedia","mozGetUserMedia","mediaDevices","webSocket","WebSocket","isAPISupport","isVendorAndVersionSupport","getBrowserInfo","isChrome","getBrowserVersion","getBrowserOS","isFireFox","isOpera","isSafari","isSupportedPC","isSupportedMobile","callback","Array","slice","audioContext","AudioContext","webkitAudioContext","stream","sourceNode","otWebkitAudioSource","createMediaStreamSource","analyser","createAnalyser","timeDomainData","Uint8Array","frequencyBinCount","connect","getAudioLevel","getByteTimeDomainData","max","idx","Math","abs","shouldBlock","localStorage","record","JSON","parse","getItem","Date","getTime","date","setItem","stringify","onSuccess","onFailure","video","document","createElement","setAttribute","body","appendChild","addEventListener","ev","videoWidth","videoHeight","removeChild","srcObject","EventDispatcher","that","dispatcher","eventListeners","eventType","listener","on","removeEventListener","index","indexOf","splice","dispatchEvent","event","type","dispatchSocketEvent","msg","LicodeEvent","spec","StreamEvent","reason","ClientEvent","uid","attr","MediaEvent","LiveStreamingEvent","url","isQQBrowser","isWeChatBrowser","os","version","_getBrowserInfo","tem","ua","userAgent","M","match","test","exec","clientStrings","r","id","cs","WEBCS_DOMAIN","WEBCS_DOMAIN_BACKUP_LIST","GIT_VERSION","VERSION","EVENT_REPORT_DOMAIN","EVENT_REPORT_BACKUP_DOMAIN","WEBCS_BACKUP_CONNECT_TIMEOUT","HTTP_CONNECT_TIMEOUT","_Events","View","SUBSCRIBE","PUBLISH","JOIN_GATEWAY","JOIN_CHOOSE_SERVER","SESSION_INIT","report","_Config","config","_Request","base","sid","lts","succ","cname","peerid","cid","elaps","extend","vid","list","shouldUseHttps","urlBackup","sessionInit","param","head","assign","startTime","si","appid","mode","ver","browser","send","joinChooseServer","coverHead","jcs","endTime","ev_elaps","serverList","joinGateway","jg","publish","pu","subscribe","sub","firstRemoteFrame","frf","streamSwitch","ss","isdual","audioSendingStopped","ass","videoSendingStopped","vss","data","post","e","timeout","getDevices","createStream","Stream","_typeof","Symbol","iterator","constructor","_VideoPlayer","_VideoPlayer2","_AudioPlayer","_AudioPlayer2","_Connection","_Stats","_Helper","_Report","isLegacyChrome","appVersion","isFirefox","getReso","w","h","width","ideal","height","deviceId","cameraId","exact","params","aux_stream","onClose","local","audio","screen","screenAttributes","maxFr","minFr","videoSize","player","attributes","videoEnabled","audioEnabled","lowStream","mirror","Error","initialized","supportedVideoList","true","unspecified","90p_1","120p_1","120p_3","120p_4","180p_1","180p_3","180p_4","240p_1","240p_3","240p_4","360p_1","360p_3","360p_4","360p_6","360p_7","360p_8","360p_9","360p_10","360p_11","480p_1","480p_2","480p_3","480p_4","480p_6","480p_8","480p_9","480p_10","720p_1","720p_2","720p_3","720p_5","720p_6","1080p_1","1080p_2","1080p_3","1080p_5","1440p_1","1440p_2","4k_1","4k_3","unmuteAudio","muteAudio","unmuteVideo","muteVideo","setVideoResolution","resolution","setVideoFrameRate","framerate","minFrameRate","maxFrameRate","setVideoBitRate","bitrate","minVideoBW","maxVideoBW","setScreenProfile","profile","setVideoProfileCustom","setVideoProfile","getId","streamID","getAttributes","hasAudio","hasVideo","hasScreen","isVideoOn","isAudioOn","init","init_retry","videoOpt","constraints","extensionId","fake","frameRate","microphoneId","constraints_copy","GetUserMedia","getVideoTracks","onended","err","setTimeout","theConfig","message","close","tracks","getTracks","t","stop","enableAudio","getAudioTracks","enabled","disableAudio","enableVideo","disableVideo","play","elementID","assetsURL","showing","options","destroy","getStats","cb","pc","stats","isSubscriber","filterStats","subscribeStatsFilter","videoReceivedResolutionHeight","videoReceivedResolutionWidth","publishStatsFilter","videoSendResolutionHeight","videoSendResolutionWidth","uplinkStats","videoSendBandwidth","uplink_available_bandwidth","videoSendPacketsLost","uplink_cumulative_lost","enumerateDevices","then","devices","catch","ErrorCodes","FAILED","INVALID_KEY","INVALID_OPERATION","INVALID_PARAMETER","INVALID_LOCAL_STREAM","INVALID_REMOTE_STREAM","INVALID_DYNAMIC_KEY","DYNAMIC_KEY_TIMEOUT","NO_VOCS_AVAILABLE","NO_VOS_AVAILABLE","JOIN_CHANNEL_TIMEOUT","NO_AVAILABLE_CHANNEL","LOOKUP_CHANNEL_TIMEOUT","LOOKUP_CHANNEL_REJECTED","OPEN_CHANNEL_TIMEOUT","OPEN_CHANNEL_REJECTED","REQUEST_DEFERRED","SOCKET_ERROR","SOCKET_DISCONNECTED","PEERCONNECTION_FAILED","CONNECT_GATEWAY_ERROR","SERVICE_NOT_AVAILABLE","JOIN_CHANNEL_FAILED","PUBLISH_STREAM_FAILED","UNPUBLISH_STREAM_FAILED","SUBSCRIBE_STREAM_FAILED","UNSUBSCRIBE_STREAM_FAILED","NO_SUCH_REMOTE_STREAM","ERR_FAILED","ERR_INVALID_VENDOR_KEY","ERR_INVALID_CHANNEL_NAME","WARN_NO_AVAILABLE_CHANNEL","WARN_LOOKUP_CHANNEL_TIMEOUT","WARN_LOOKUP_CHANNEL_REJECTED","WARN_OPEN_CHANNEL_TIMEOUT","WARN_OPEN_CHANNEL_REJECTED","WARN_REQUEST_DEFERRED","ERR_DYNAMIC_KEY_TIMEOUT","ERR_INVALID_DYNAMIC_KEY","ERR_NO_VOCS_AVAILABLE","ERR_NO_VOS_AVAILABLE","ERR_JOIN_CHANNEL_TIMEOUT","IOS_NOT_SUPPORT","SHARING_SCREEN_NOT_SUPPORT","STILL_ON_PUBLISHING","_View","_View2","_Speaker","_Speaker2","Bar","waiting","show","div","bar","link","logo","displaying","clearTimeout","display","hide","getElementById","speaker","media","Connection","_ChromeCanaryStack","_ChromeCanaryStack2","_ChromeStableStack","_ChromeStableStack2","_SafariStableStack","_SafariStableStack2","_FcStack","_FcStack2","_FirefoxStack","_FirefoxStack2","sessionId","session_id","toLowerCase","getMedia","mandatory","mediaSource","code","chrome","runtime","sendMessage","getStream","response","theId","streamId","mWidth","mHeight","chromeMediaSource","chromeMediaSourceId","maxHeight","maxWidth","theError","AgoraCall","success","failure","xhr","XMLHttpRequest","open","setRequestHeader","onload","responseText","onerror","ontimeout","location","protocol","getGatewayList","_ErrorCodes","requestChooseServer","option","csOption","appId","res","csAddr","ec","requestGatewayList","joinInfo","connected","gateway_addr","st","failed","domainlist","csURL","backupList","isSuccess","timer","times","request","gatewayAddr","toTimeString","split","getMilliseconds","_Bar","_ResizeSensor","_ResizeSensor2","_adapter","VideoPlayer","pause","resizer","parentNode","resize","container","offsetWidth","offsetHeight","style","top","left","containerWidth","containerHeight","volume","evt","attachMediaStream","Speaker","mute","unmute","lastVolume","icon","muted","onclick","picker","min","step","oninput","onmouseover","onmouseout","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","forEachElement","elements","elementsType","toString","isCollectionTyped","jQuery","Elements","j","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","ResizeSensor","element","EventQueue","q","add","remove","newQueue","getComputedStyle","prop","currentStyle","getPropertyValue","attachResizeEvent","resized","resizedAttached","resizeSensor","className","styleChild","cssText","innerHTML","position","dirty","rafId","newWidth","newHeight","expand","childNodes","expandChild","shrink","lastWidth","lastHeight","reset","scrollLeft","scrollTop","onResized","onScroll","addEvent","el","attachEvent","elem","detach","contains","requestUserMedia","Promise","resolve","reject","reattachMediaStream","webrtcDetectedBrowser","webrtcDetectedVersion","webrtcMinimumVersion","webrtcUtils","extractVersion","uastring","expr","pos","parseInt","HTMLMediaElement","mozSrcObject","_srcObject","set","src","URL","createObjectURL","to","from","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","newServer","username","credential","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","onError","constraintsToFF37","require","keys","forEach","advanced","oc","kind","label","groupId","orgEnumerateDevices","bind","iceTransportPolicy","iceTransports","origGetStats","selector","successCallback","errorCallback","self","fixChromeStats","standardReport","result","standardStats","timestamp","names","stat","successCallbackWrapper","method","nativeMethod","opts","constraintsToChrome","optional","cc","oldname","prefix","charAt","mix","concat","kinds","MediaStreamTrack","getSources","map","device","origGetUserMedia","webrtcTesting","_Bar2","AudioPlayer","myURL","webkitURL","stream_url","ChromeCanaryStack","WebkitRTCPeerConnection","pc_config","con","DtlsSrtpKeyAgreement","stunServerUrl","turnServer","turn","password","mediaConstraints","OfferToReceiveVideo","OfferToReceiveAudio","roapSessionId","peerConnection","onicecandidate","candidate","iceCandidateCount","iceGatheringState","ices","moreIceComing","markActionNeeded","setMaxBW","sdp","a","maxAudioBW","processSignalingMessage","msgstring","sd","incomingMessage","state","messageType","setRemoteDescription","sendOK","addStream","removeStream","actionNeeded","doLater","onstablestate","what","mySDP","createOffer","sessionDescription","prevOffer","setLocalDescription","localDescription","createAnswer","iceStarted","now","operation","roapMessage","offererSessionId","answererSessionId","otherSessionId","seq","sequenceNumber","tiebreaker","floor","random","onsignalingmessage","text","onopen","onaddstream","onremovestream","oniceconnectionstatechange","currentTarget","iceConnectionState","ChromeStableStack","filterSdp","getStatsRate","filterList","originList","timeStamp","connectedTime","ontrack","SafariStableStack","bundlePolicy","outbound_rtp_audio","mediaType","googCodecName","aecDivergentFilterFraction","audioInputLevel","bytesSent","packetsSent","googEchoCancellationReturnLoss","googEchoCancellationReturnLossEnhancement","outbound_rtp_video","codec","packetsLost","googAdaptationChanges","googAvgEncodeMs","googEncodeUsagePercent","googFirsReceived","googFrameHeightSent","googFrameHeightInput","googFrameRateInput","googFrameRateSent","googFrameWidthSent","googFrameWidthInput","googNacksReceived","googPlisReceived","googRtt","googFramesEncoded","inbound_rtp_audio","audioOutputLevel","bytesReceived","packetsReceived","googAccelerateRate","googCurrentDelayMs","googDecodingCNG","googDecodingCTN","googDecodingCTSG","googDecodingNormal","googDecodingPLC","googDecodingPLCCNG","googExpandRate","googJitterBufferMs","googJitterReceived","googPreemptiveExpandRate","googPreferredJitterBufferMs","googSecondaryDecodedRate","googSpeechExpandRate","inbound_rtp_video","googTargetDelayMs","googDecodeMs","googMaxDecodeMs","googRenderDelayMs","googFrameWidthReceived","googFrameHeightReceived","googFrameRateReceived","googFrameRateDecoded","googFrameRateOutput","googFramesDecoded","googFrameReceived","googMinPlayoutDelayMs","googNacksSent","googPlisSent","googFirsSent","bweforvideo","googAvailableSendBandwidth","googAvailableReceiveBandwidth","googActualEncBitrate","googRetransmitBitrate","googTargetEncBitrate","googBucketDelay","googTransmitBitrate","lastFramesEncoded","lastFramesDecoded","lastFramesReceived","pliCount","nackCount","firCount","framesEncoded","jitter","frameWidth","frameHeight","framesReceived","framesDecoded","audioLevel","availableIncomingBitrate","availableOutgoingBitrate","track","addTrack","audioReceiver","addTransceiver","videoReceiver","setDirection","FcStack","FirefoxStack","hasStream","offerToReceiveAudio","offerToReceiveVideo","mozDontOfferDataChannel","framerateMean","isRemote","detection","audioSendBytes","audioSendPackets","videoSendBytes","videoSendPackets","videoSendFrameRate","audioCodecName","videoCodecName","duration","audioReceiveBytes","audioReceivePackets","audioReceivePacketsLost","videoReceiveBytes","videoReceivePackets","videoReceivePacketsLost","videoReceiveFrameRate","videoReceiveDecodeFrameRate","videoReceiveBandwidth","LiveTranscoding","TranscodingUser","VIDEO_CODEC_PROFILE_HIGH","VIDEO_CODEC_PROFILE_MAIN","VIDEO_CODEC_PROFILE_BASELINE","AUDIO_SAMPLE_RATE_48000","AUDIO_SAMPLE_RATE_44100","AUDIO_SAMPLE_RATE_32000","createLiveClient","createRtcClient","createClient","_GatewayClient","_GatewayClient2","_ErrorCodes2","_Server","_SimMap","_Stream","Client","highStream","isDualStream","highStreamState","lowStreamState","_getVideoCameraIdByLabel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","return","configPublisher","gatewayClient","enableDualStream","_publishLowStream","disableDualStream","_unpublishLowStream","_createLowStream","videoTrack","simMap","_getLowStream","unpublish","join","channelKey","channel","renewChannelKey","leave","unsubscribe","setRemoteVideoStreamType","streamType","startLiveStreaming","transcodingEnabled","stopLiveStreaming","setLiveTranscoding","transcoding","preState","x","y","zOrder","alpha","videoBitrate","videoFramerate","lowLatency","audioSampleRate","audioBitrate","audioChannels","videoGop","videoCodecProfile","userCount","userConfigExtraInfo","backgroundColor","transcodingUsers","role","_Websocket","_Websocket2","_AgoraCall","_AgoraCall2","GatewayClient","removeRemoteStreams","remoteStreams","isBanned","Ping","_type","Join","Leave","Control","Token","P2PLost","Unpublish","Unsubscribe","SwitchVideoStream","Publish","PublishStats","PublishStatsLow","Subscribe","SubscribeStats","StartLiveStreaming","StopLiveStreaming","SetLiveTranscoding","socket","timers","timer_counter","localStreams","attemps","p2p_attemps","activeSpeaker","firstFrameTimer","Map","liveStreams","remoteVideoStreamTypes","REMOTE_VIDEO_STREAM_HIGH","REMOTE_VIDEO_STREAM_LOW","REMOTE_VIDEO_STREAM_MEDIUM","addr","connectSocket","pingTimer","setInterval","getURL","clearInterval","publishLTS","sendSimpleSdp","answer","getUserId","offer","localSDP","ok","action","disconnect","subscribeLTS","nop2p","streams","subscribeEvt","unsortedKeys","sortedUids","sort","uid1","uid2","delete","generateInterval","k","pow","recover","size","time","createSocket","host","reconnect","arg","errcode","emitSimpleMessage","respType","respCallback","_Signal","_Signal2","Socket","signal","onEvent","creatConnection","sendSignalCommand","Signal","needReconnect","isTimeout","isInit","hostIndex","requestID","Reconnection","connection","timeoutCheck","onmessage","_id","onclose","readyState","OPEN","_result","_Client","v4","buf","offset","rnds","rng","ii","bytesToUuid","global","crypto","msCrypto","getRandomValues","rnds8","g","Function","eval","bth","byteToHex","substr"],"mappings":"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","file":"AgoraRTC-production.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AgoraRTC\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AgoraRTC\"] = factory();\n\telse\n\t\troot[\"AgoraRTC\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AgoraRTC\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AgoraRTC\"] = factory();\n\telse\n\t\troot[\"AgoraRTC\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 34);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Time = __webpack_require__(15);\n\n/*\n * API to write logs based on traditional logging mechanisms: debug, trace, info, warning, error\n */\nvar Logger = function () {\n  \"use strict\";\n\n  var DEBUG = 0,\n      INFO = 1,\n      WARNING = 2,\n      ERROR = 3,\n      NONE = 4,\n      logLevel = DEBUG,\n      setLogLevel,\n      log,\n      debug,\n      info,\n      warning,\n      error;\n\n  // It sets the new log level. We can set it to NONE if we do not want to print logs\n  setLogLevel = function setLogLevel(level) {\n    if (level > NONE) {\n      level = NONE;\n    } else if (level < DEBUG) {\n      level = DEBUG;\n    }\n    logLevel = level;\n  };\n\n  // Generic function to print logs for a given level: [DEBUG, TRACE, INFO, WARNING, ERROR]\n  log = function log() {\n    var level = arguments[0];\n    var args = arguments;\n    if (level < logLevel) {\n      return;\n    }\n    switch (level) {\n      case DEBUG:\n        args[0] = (0, _Time.getTimestamp)() + ' DEBUG:';\n        console.log.apply(console, args);\n        break;\n      case INFO:\n        args[0] = (0, _Time.getTimestamp)() + ' INFO:';\n        console.log.apply(console, args);\n        break;\n      case WARNING:\n        args[0] = (0, _Time.getTimestamp)() + ' WARN:';\n        console.warn.apply(console, args);\n        break;\n      case ERROR:\n        args[0] = (0, _Time.getTimestamp)() + ' ERROR:';\n        console.error.apply(console, args);\n        break;\n      default:\n        args[0] = (0, _Time.getTimestamp)() + ' DEFAULT:';\n        console.log.apply(console, args);\n        return;\n    }\n  };\n\n  // It prints debug logs\n  debug = function debug() {\n    var args = [DEBUG];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints info logs\n  info = function info() {\n    var args = [INFO];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints warning logs\n  warning = function warning() {\n    var args = [WARNING];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints error logs\n  error = function error() {\n    var args = [ERROR];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  return {\n    DEBUG: DEBUG,\n    INFO: INFO,\n    WARNING: WARNING,\n    ERROR: ERROR,\n    NONE: NONE,\n    setLogLevel: setLogLevel,\n    log: log,\n    debug: debug,\n    info: info,\n    warning: warning,\n    error: error\n  };\n}();\n\nexports.default = Logger;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.safeCall = exports.vsResHack = exports.CSCrashRecord = exports.audioLevelHelper = exports.generateSessionId = exports.checkSystemRequirements = undefined;\n\nvar _Browser = __webpack_require__(3);\n\nvar Browser = _interopRequireWildcard(_Browser);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _v = __webpack_require__(35);\n\nvar _v2 = _interopRequireDefault(_v);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar checkSystemRequirements = function checkSystemRequirements() {\n  var PC = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia || navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n  var webSocket = window.WebSocket;\n  var isAPISupport = !!PC && !!getUserMedia && !!webSocket;\n\n  var isVendorAndVersionSupport = false;\n  _Logger2.default.debug(Browser.getBrowserInfo(), \"isAPISupport:\" + isAPISupport);\n\n  if (Browser.isChrome() && Browser.getBrowserVersion() >= 58) {\n    if (Browser.getBrowserOS() !== 'iOS') {\n      isVendorAndVersionSupport = true;\n    }\n  }\n\n  if (Browser.isFireFox() && Browser.getBrowserVersion() >= 56) {\n    isVendorAndVersionSupport = true;\n  }\n\n  if (Browser.isOpera() && Browser.getBrowserVersion() >= 45) {\n    isVendorAndVersionSupport = true;\n  }\n\n  if (Browser.isSafari() && Browser.getBrowserVersion() >= 11) {\n    isVendorAndVersionSupport = true;\n  }\n\n  // if(Browser.isWeChatBrowser() || Browser.isQQBrowser()) {\n  //   isVendorAndVersionSupport = true;\n  // }\n\n  if (!Browser.isSupportedPC() && !Browser.isSupportedMobile()) {\n    isVendorAndVersionSupport = false;\n  }\n\n  return isAPISupport && isVendorAndVersionSupport;\n};\n\nvar safeCall = function safeCall() {\n  var callback = arguments[0];\n  if (typeof callback === \"function\") {\n    var args = Array.prototype.slice.call(arguments, 1);\n    callback.apply(null, args);\n  }\n};\n\nvar audioContext = new (window.AudioContext || window.webkitAudioContext)();\nvar audioLevelHelper = function audioLevelHelper(stream) {\n  this.audioContext = audioContext;\n  this.sourceNode = stream.otWebkitAudioSource || this.audioContext.createMediaStreamSource(stream);\n  this.analyser = this.audioContext.createAnalyser();\n  this.timeDomainData = new Uint8Array(this.analyser.frequencyBinCount);\n  this.sourceNode.connect(this.analyser);\n\n  this.getAudioLevel = function () {\n    if (this.analyser) {\n      this.analyser.getByteTimeDomainData(this.timeDomainData);\n\n      // varies from 0 to 255\n      var max = 0;\n      for (var idx = 0; idx < this.timeDomainData.length; idx++) {\n        max = Math.max(max, Math.abs(this.timeDomainData[idx] - 128));\n      }\n\n      // normalize the collected level to match the range delivered by\n      // the getStats' audioOutputLevel\n      return max / 128;\n    } else {\n      _Logger2.default.warning(\"can't find analyser in audioLevelHelper\");\n      return 0;\n    }\n  };\n  return this;\n};\n\nfunction generateSessionId() {\n  return (0, _v2.default)().replace(/-/g, \"\").toUpperCase();\n  // return 'xxxxxxxxxxxxxx4xxxxyxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n  //   var r = Math.random() * 16 | 0,\n  //   v= c=='x' ? r : r & 0x3 | 0x8;\n  //   return v.toString(16).toUpperCase();\n  // });\n}\n\nvar CSCrashRecord = {\n  shouldBlock: function shouldBlock() {\n    if (localStorage) {\n      var record = JSON.parse(localStorage.getItem(\"agoraCSCrashRecord\"));\n      return record && record.length > 6 ? new Date().getTime() - record[record.length - 6] - 10000 < 0 ? true : false : false;\n    } else {\n      return false;\n    }\n  },\n  record: function record(date) {\n    if (localStorage) {\n      var record = JSON.parse(localStorage.getItem(\"agoraCSCrashRecord\"));\n      record = !record || record.length > 50 ? [] : record;\n      record.push(date);\n      localStorage.setItem(\"agoraCSCrashRecord\", JSON.stringify(record));\n    }\n  }\n};\n\nvar vsResHack = function vsResHack(stream, onSuccess, onFailure) {\n  try {\n    var video = document.createElement('video');\n    video.setAttribute('autoplay', '');\n    video.setAttribute('muted', '');\n    // in iOS, not this attribute will not trigger 'playing' event\n    video.setAttribute('playsinline', '');\n    video.setAttribute('style', 'width:1px;high:1px;');\n    document.body.appendChild(video);\n\n    video.addEventListener('playing', function (ev) {\n      // Firefox will triger this event twice\n      if (Browser.isFireFox()) {\n        if (video.videoWidth) {\n          onSuccess(video.videoWidth, video.videoHeight);\n          document.body.removeChild(video);\n        }\n      } else {\n        onSuccess(video.videoWidth, video.videoHeight);\n        document.body.removeChild(video);\n      }\n    });\n    video.srcObject = stream;\n  } catch (error) {\n    onFailure(error);\n  }\n};\n\nexports.checkSystemRequirements = checkSystemRequirements;\nexports.generateSessionId = generateSessionId;\nexports.audioLevelHelper = audioLevelHelper;\nexports.CSCrashRecord = CSCrashRecord;\nexports.vsResHack = vsResHack;\nexports.safeCall = safeCall;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*\n * Class EventDispatcher provides event handling to sub-classes.\n * It is inherited from Publisher, Room, etc.\n */\nvar EventDispatcher = function EventDispatcher() {\n    \"use strict\";\n\n    var that = {};\n    // Private vars\n    that.dispatcher = {};\n    that.dispatcher.eventListeners = {};\n\n    // Public functions\n\n    // It adds an event listener attached to an event type.\n    that.addEventListener = function (eventType, listener) {\n        if (that.dispatcher.eventListeners[eventType] === undefined) {\n            that.dispatcher.eventListeners[eventType] = [];\n        }\n        that.dispatcher.eventListeners[eventType].push(listener);\n    };\n\n    that.on = that.addEventListener;\n\n    // It removes an available event listener.\n    that.removeEventListener = function (eventType, listener) {\n        var index;\n        index = that.dispatcher.eventListeners[eventType].indexOf(listener);\n        if (index !== -1) {\n            that.dispatcher.eventListeners[eventType].splice(index, 1);\n        }\n    };\n\n    // It dispatch a new event to the event listeners, based on the type\n    // of event. All events are intended to be LicodeEvents.\n    that.dispatchEvent = function (event) {\n        var listener;\n        for (listener in that.dispatcher.eventListeners[event.type]) {\n            if (that.dispatcher.eventListeners[event.type].hasOwnProperty(listener) && typeof that.dispatcher.eventListeners[event.type][listener] === 'function') {\n                that.dispatcher.eventListeners[event.type][listener](event);\n            }\n        }\n    };\n\n    that.dispatchSocketEvent = function (event) {\n        var listener;\n        for (listener in that.dispatcher.eventListeners[event.type]) {\n            if (that.dispatcher.eventListeners[event.type].hasOwnProperty(listener) && typeof that.dispatcher.eventListeners[event.type][listener] === 'function') {\n                that.dispatcher.eventListeners[event.type][listener](event.msg);\n            }\n        }\n    };\n\n    return that;\n};\n\n// **** EVENTS ****\n\n/*\n * Class LicodeEvent represents a generic Event in the library.\n * It handles the type of event, that is important when adding\n * event listeners to EventDispatchers and dispatching new events.\n * A LicodeEvent can be initialized this way:\n * var event = LicodeEvent({type: \"room-connected\"});\n */\nvar LicodeEvent = function LicodeEvent(spec) {\n    \"use strict\";\n\n    var that = {};\n\n    // Event type. Examples are: 'room-connected', 'stream-added', etc.\n    that.type = spec.type;\n\n    return that;\n};\n\n/*\n * Class StreamEvent represents an event related to a stream. It is a LicodeEvent.\n * It is usually initialized this way:\n * var streamEvent = StreamEvent({type:\"stream-added\", stream:stream1});\n * Event types:\n * 'stream-added' - indicates that there is a new stream available in the room.\n * 'stream-removed' - shows that a previous available stream has been removed from the room.\n */\nvar StreamEvent = function StreamEvent(spec) {\n    \"use strict\";\n\n    var that = LicodeEvent(spec);\n\n    // The stream related to this event.\n    that.stream = spec.stream;\n    that.reason = spec.reason;\n    that.msg = spec.msg;\n\n    return that;\n};\n\n/*\n * Class ClientEvent represents an event related to a client. It is a LicodeEvent.\n * It is usually initialized this way:\n * var clientEvent = ClientEvent({type:\"client-left\", uid: user, attr: attributes});\n * Event types:\n * 'client-connected' - points out that the user has been successfully connected.\n * 'client-disconnected' - shows that the user has been already disconnected.\n * 'client-joined' - indicates that there is a new client joined.\n * 'client-left' - indicates that a client has left.\n *\n * NOTE: 'client-connected' event shall always trigger 'client-joined' event,\n * while 'client-disconnected' event shall always trigger 'client-left' event;\n */\nvar ClientEvent = function ClientEvent(spec) {\n    \"use strict\";\n\n    var that = LicodeEvent(spec);\n    that.uid = spec.uid;\n    that.attr = spec.attr;\n    that.stream = spec.stream;\n    return that;\n};\n\n/*\n * Class MediaEvent represents an event related to a getUserMedia(). It is a LicodeEvent.\n * It usually initializes as:\n * var mediaEvent = MediaEvent({})\n * Event types:\n * 'access-accepted' - indicates that the user has accepted to share his camera and microphone\n * 'warning' - details are included in the event message (msg)\n * 'error' - details are included in the event message (msg)\n */\nvar MediaEvent = function MediaEvent(spec) {\n    \"use strict\";\n\n    var that = LicodeEvent(spec);\n    that.msg = spec.msg;\n    return that;\n};\n\nvar LiveStreamingEvent = function LiveStreamingEvent(spec) {\n    \"use strict\";\n\n    var that = LicodeEvent(spec);\n    that.url = spec.url;\n    that.reason = spec.reason;\n    return that;\n};\n\nexports.EventDispatcher = EventDispatcher;\nexports.StreamEvent = StreamEvent;\nexports.ClientEvent = ClientEvent;\nexports.MediaEvent = MediaEvent;\nexports.LiveStreamingEvent = LiveStreamingEvent;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar isChrome = function isChrome() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'Chrome';\n};\n\nvar isSafari = function isSafari() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'Safari';\n};\n\nvar isFireFox = function isFireFox() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'Firefox';\n};\n\nvar isOpera = function isOpera() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'OPR';\n};\n\nvar isQQBrowser = function isQQBrowser() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'MQQBrowser';\n};\n\nvar isWeChatBrowser = function isWeChatBrowser() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'MicroMessenger';\n};\n\nvar isSupportedPC = function isSupportedPC() {\n\tvar os = getBrowserOS();\n\treturn os === 'Linux' || os === 'Mac OS X' || os === 'Mac OS' || os.indexOf(\"Windows\") !== -1;\n};\n\nvar isSupportedMobile = function isSupportedMobile() {\n\tvar os = getBrowserOS();\n\treturn os === 'Android' || os === 'iOS';\n};\n\nvar getBrowserVersion = function getBrowserVersion() {\n\tvar info = getBrowserInfo();\n\treturn info.version;\n};\n\nvar getBrowserOS = function getBrowserOS() {\n\tvar info = getBrowserInfo();\n\treturn info.os;\n};\n\nvar _getBrowserInfo = function _getBrowserInfo() {\n\tvar ua = navigator.userAgent,\n\t    tem,\n\t    M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\n\t// TODO: copy from Stack OverFlow, I don't think it works\n\tif (/trident/i.test(M[1])) {\n\t\ttem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n\t\treturn { name: 'IE', version: tem[1] || '' };\n\t}\n\n\t// for opera\n\tif (M[1] === 'Chrome') {\n\t\ttem = ua.match(/(OPR(?=\\/))\\/?(\\d+)/i);\n\t\tif (tem != null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for QQ\n\tif (M[1] === 'Chrome') {\n\t\ttem = ua.match(/(mqqbrowser(?=\\/))\\/?(\\d+)/i);\n\t\tif (tem != null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for weChat\n\tif (M[1] === 'Chrome') {\n\t\ttem = ua.match(/(micromessenger(?=\\/))\\/?(\\d+)/i);\n\t\tif (tem != null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for Safari version\n\tif (M[1] === 'Safari') {\n\t\tif ((tem = ua.match(/version\\/(\\d+)/i)) != null) {\n\t\t\tM[2] = tem[1];\n\t\t}\n\t}\n\n\tvar os = undefined;\n\tvar clientStrings = [{ s: 'Windows 10', r: /(Windows 10.0|Windows NT 10.0)/ }, { s: 'Windows 8.1', r: /(Windows 8.1|Windows NT 6.3)/ }, { s: 'Windows 8', r: /(Windows 8|Windows NT 6.2)/ }, { s: 'Windows 7', r: /(Windows 7|Windows NT 6.1)/ }, { s: 'Windows Vista', r: /Windows NT 6.0/ }, { s: 'Windows Server 2003', r: /Windows NT 5.2/ }, { s: 'Windows XP', r: /(Windows NT 5.1|Windows XP)/ }, { s: 'Windows 2000', r: /(Windows NT 5.0|Windows 2000)/ }, { s: 'Windows ME', r: /(Win 9x 4.90|Windows ME)/ }, { s: 'Windows 98', r: /(Windows 98|Win98)/ }, { s: 'Windows 95', r: /(Windows 95|Win95|Windows_95)/ }, { s: 'Windows NT 4.0', r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/ }, { s: 'Windows CE', r: /Windows CE/ }, { s: 'Windows 3.11', r: /Win16/ }, { s: 'Android', r: /Android/ }, { s: 'Open BSD', r: /OpenBSD/ }, { s: 'Sun OS', r: /SunOS/ }, { s: 'Linux', r: /(Linux|X11)/ }, { s: 'iOS', r: /(iPhone|iPad|iPod)/ }, { s: 'Mac OS X', r: /Mac OS X/ }, { s: 'Mac OS', r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ }, { s: 'QNX', r: /QNX/ }, { s: 'UNIX', r: /UNIX/ }, { s: 'BeOS', r: /BeOS/ }, { s: 'OS/2', r: /OS\\/2/ }, { s: 'Search Bot', r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/ }];\n\tfor (var id in clientStrings) {\n\t\tvar cs = clientStrings[id];\n\t\tif (cs.r.test(navigator.userAgent)) {\n\t\t\tos = cs.s;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tname: M[1],\n\t\tversion: M[2],\n\t\tos: os\n\t};\n};\n\nvar getBrowserInfo = function () {\n\tvar info = _getBrowserInfo();\n\treturn function () {\n\t\treturn info;\n\t};\n}();\n\nexports.getBrowserInfo = getBrowserInfo;\nexports.getBrowserVersion = getBrowserVersion;\nexports.getBrowserOS = getBrowserOS;\nexports.isChrome = isChrome;\nexports.isSafari = isSafari;\nexports.isFireFox = isFireFox;\nexports.isOpera = isOpera;\nexports.isQQBrowser = isQQBrowser;\nexports.isWeChatBrowser = isWeChatBrowser;\nexports.isSupportedPC = isSupportedPC;\nexports.isSupportedMobile = isSupportedMobile;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar GIT_VERSION = \"release_20180109_01-13-gd621e4f\";\n\nvar VERSION = \"2.1.0\";\n// var WEBCS_DOMAIN = \"webcs-1.agora.io\";\n// var WEBCS_DOMAIN_BACKUP_LIST = [\n//   \"webcs-2.agora.io\",\n//   \"webcs-3.agora.io\",\n//   \"webcs-4.agora.io\",\n// ];\nvar WEBCS_DOMAIN = [\"webcs-1.agora.io\", \"webcs-2.agora.io\"];\nvar WEBCS_DOMAIN_BACKUP_LIST = [\"webcs-3.agora.io\", \"webcs-4.agora.io\"];\n\nvar EVENT_REPORT_DOMAIN = \"webcollector-1.agora.io\";\nvar EVENT_REPORT_BACKUP_DOMAIN = \"webcollector-2.agora.io\";\n\nvar WEBCS_BACKUP_CONNECT_TIMEOUT = 6000;\nvar HTTP_CONNECT_TIMEOUT = 5000;\n\nexports.GIT_VERSION = GIT_VERSION;\nexports.VERSION = VERSION;\nexports.WEBCS_DOMAIN = WEBCS_DOMAIN;\nexports.WEBCS_DOMAIN_BACKUP_LIST = WEBCS_DOMAIN_BACKUP_LIST;\nexports.EVENT_REPORT_DOMAIN = EVENT_REPORT_DOMAIN;\nexports.EVENT_REPORT_BACKUP_DOMAIN = EVENT_REPORT_BACKUP_DOMAIN;\nexports.WEBCS_BACKUP_CONNECT_TIMEOUT = WEBCS_BACKUP_CONNECT_TIMEOUT;\nexports.HTTP_CONNECT_TIMEOUT = HTTP_CONNECT_TIMEOUT;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Events = __webpack_require__(2);\n\nvar View = function View(spec) {\n  \"use strict\";\n\n  var that = (0, _Events.EventDispatcher)(spec);\n\n  // Variables\n\n  // URL where it will look for icons and assets\n  that.url = \".\";\n  return that;\n}; /*\n    * View class represents a HTML component\n    * Every view is an EventDispatcher.\n    */\n\nexports.default = View;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SUBSCRIBE = exports.PUBLISH = exports.JOIN_GATEWAY = exports.JOIN_CHOOSE_SERVER = exports.SESSION_INIT = exports.report = undefined;\n\nvar _Config = __webpack_require__(4);\n\nvar config = _interopRequireWildcard(_Config);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Request = __webpack_require__(12);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar SESSION_INIT = 'session_init';\nvar JOIN_CHOOSE_SERVER = 'join_choose_server';\nvar JOIN_GATEWAY = 'join_gateway';\nvar PUBLISH = 'publish';\nvar SUBSCRIBE = 'subscribe';\nvar FIRST_REMOTE_FRAME = 'first_remote_frame';\nvar STREAM_SWITCH = 'stream_switch';\nvar AUDIO_SENDING_STOPPED = 'audio_sending_stopped';\nvar VIDEO_SENDING_STOPPED = 'video_sending_stopped';\n\nvar base = {\n  type: null,\n  sid: null,\n  lts: null,\n  succ: null,\n  cname: null,\n  uid: null,\n  peerid: null,\n  cid: null,\n  elaps: null,\n  extend: null,\n  vid: 0\n};\n\nvar report = function () {\n  var that = {};\n  that.list = {};\n  that.url = (0, _Request.shouldUseHttps)() ? 'https://' + config.EVENT_REPORT_DOMAIN + ':6443/events/report' : 'http://' + config.EVENT_REPORT_DOMAIN + ':6080/events/report';\n\n  that.urlBackup = (0, _Request.shouldUseHttps)() ? 'https://' + config.EVENT_REPORT_BACKUP_DOMAIN + ':6443/events/report' : 'http://' + config.EVENT_REPORT_BACKUP_DOMAIN + '\":6080/events/report';\n\n  that.sessionInit = function (sid, param) {\n    param.sid = sid;\n    var head = Object.assign(base, param);\n    // the first time join\n    if (!that.list[sid]) {\n      head.startTime = +new Date();\n    }\n    var si = Object.assign({}, head);\n\n    delete head.appid;\n    delete head.mode;\n    that.list[sid] = head;\n\n    si.extend = null;\n    si.ver = config.VERSION;\n    si.type = SESSION_INIT;\n    si.browser = navigator.userAgent;\n    si.lts = +new Date();\n    si.elaps = si.lts - si.startTime;\n    that.send(si);\n  };\n\n  that.joinChooseServer = function (sid, param, coverHead) {\n    var jcs;\n    // when multi cs request, only the first result will cover the head\n    if (coverHead) {\n      jcs = Object.assign(that.list[sid], param);\n    } else {\n      jcs = Object.assign({}, that.list[sid], param);\n    }\n    jcs.type = JOIN_CHOOSE_SERVER;\n    var endTime = +new Date();\n    jcs.ev_elaps = endTime - jcs.lts;\n    jcs.elaps = endTime - jcs.startTime;\n    jcs.lts = endTime;\n    jcs.serverList = JSON.stringify(jcs.serverList);\n    that.send(jcs);\n  };\n\n  that.joinGateway = function (sid, param) {\n    var jg = Object.assign(that.list[sid], param);\n    jg.type = JOIN_GATEWAY;\n    var endTime = +new Date();\n    jg.ev_elaps = endTime - jg.lts;\n    jg.elaps = endTime - jg.startTime;\n    jg.lts = endTime;\n    that.send(jg);\n  };\n\n  that.publish = function (sid, param) {\n    var pu = Object.assign({}, that.list[sid], param);\n    pu.type = PUBLISH;\n    // We have a previous LTS which is defined as a timestamp of start point. Now a new LTS is created for the end point. And ev_elapse is the difference between peers.\n    var endTime = +new Date();\n    pu.ev_elaps = endTime - pu.lts;\n    pu.elaps = endTime - pu.startTime;\n    pu.lts = endTime;\n    that.send(pu);\n  };\n\n  that.subscribe = function (sid, param) {\n    var sub = Object.assign({}, that.list[sid], param);\n    sub.type = SUBSCRIBE;\n    // We have a previous LTS which is defined as a timestamp of start point. Now a new LTS is created for the end point. And ev_elapse is the difference between peers.\n    var endTime = +new Date();\n    sub.ev_elaps = endTime - sub.lts;\n    sub.elaps = endTime - sub.startTime;\n    sub.lts = endTime;\n    that.send(sub);\n  };\n\n  that.firstRemoteFrame = function (sid, param) {\n    var frf = Object.assign({}, that.list[sid], param);\n    frf.type = FIRST_REMOTE_FRAME;\n    // frf.elaps = null;\n    frf.lts = +new Date();\n    frf.elaps = frf.lts - frf.startTime;\n    that.send(frf);\n  };\n\n  that.streamSwitch = function (sid, param) {\n    var ss = Object.assign({}, that.list[sid], param);\n    ss.type = STREAM_SWITCH;\n    ss.isdual = param.isdual;\n    ss.lts = +new Date();\n    ss.elaps = ss.lts - ss.startTime;\n    that.send(ss);\n  };\n\n  that.audioSendingStopped = function (sid, param) {\n    var ass = Object.assign({}, that.list[sid], param);\n    ass.type = AUDIO_SENDING_STOPPED;\n    ass.lts = +new Date();\n    ass.elaps = ass.lts - ass.startTime;\n    that.send(ass);\n  };\n\n  that.videoSendingStopped = function (sid, param) {\n    var vss = Object.assign({}, that.list[sid], param);\n    vss.type = VIDEO_SENDING_STOPPED;\n    vss.lts = +new Date();\n    vss.elaps = vss.lts - vss.startTime;\n    that.send(vss);\n  };\n\n  that.send = function (data) {\n    try {\n      (0, _Request.post)(that.url, data, null, function (e) {\n        (0, _Request.post)(that.urlBackup, data, null, function (e) {\n          // user should not see anything about report\n          // Logger.warning(\"Event report failed\");\n        }, { timeout: 10000 });\n      }, { timeout: 10000 });\n    } catch (error) {\n      // won't throw out error\n    }\n  };\n  return that;\n}();\n\nexports.report = report;\nexports.SESSION_INIT = SESSION_INIT;\nexports.JOIN_CHOOSE_SERVER = JOIN_CHOOSE_SERVER;\nexports.JOIN_GATEWAY = JOIN_GATEWAY;\nexports.PUBLISH = PUBLISH;\nexports.SUBSCRIBE = SUBSCRIBE;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDevices = exports.createStream = exports.Stream = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _VideoPlayer = __webpack_require__(16);\n\nvar _VideoPlayer2 = _interopRequireDefault(_VideoPlayer);\n\nvar _AudioPlayer = __webpack_require__(20);\n\nvar _AudioPlayer2 = _interopRequireDefault(_AudioPlayer);\n\nvar _Connection = __webpack_require__(10);\n\nvar _Events = __webpack_require__(2);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Browser = __webpack_require__(3);\n\nvar _Stats = __webpack_require__(27);\n\nvar _Helper = __webpack_require__(1);\n\nvar _Report = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Class Stream represents a local or a remote Stream in the client.\n * It will handle the WebRTC stream and identify the stream and\n * where it should be drawn.\n */\nvar Stream = function Stream(spec) {\n  \"use strict\";\n\n  var that = (0, _Events.EventDispatcher)();\n\n  // TODO: rewrite\n  // use to create low stream\n  that.params = Object.assign({}, spec);\n\n  that.stream = spec.stream;\n  that.aux_stream = undefined;\n  that.url = spec.url;\n  that.onClose = undefined;\n  that.local = false;\n  that.video = !!spec.video;\n  that.audio = !!spec.audio;\n  that.screen = !!spec.screen;\n  that.screenAttributes = { width: 1920, height: 1080, maxFr: 5, minFr: 1 };\n  that.videoSize = spec.videoSize;\n  that.player = undefined;\n  that.audioLevelHelper = null;\n  spec.attributes = spec.attributes || {};\n\n  that.videoEnabled = true;\n  that.audioEnabled = true;\n  that.lowStream = null;\n\n  that.videoWidth = 0;\n  that.videoHeight = 0;\n\n  that.mirror = spec.mirror === false ? false : true;\n\n  if (that.videoSize !== undefined && (!(that.videoSize instanceof Array) || that.videoSize.length !== 4)) {\n    throw Error(\"Invalid Video Size\");\n  } else {\n    that.videoSize = [640, 480, 640, 480];\n  }\n\n  if (spec.local === undefined || spec.local === true) {\n    that.local = true;\n  }\n\n  that.initialized = !that.local;\n\n  function isLegacyChrome() {\n    return window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./) !== null && window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] <= 35;\n  }\n\n  function isFirefox() {\n    return window.navigator.userAgent.match(\"Firefox\") !== null;\n  }\n\n  function getReso(w, h) {\n    return {\n      width: { ideal: w },\n      height: { ideal: h },\n      deviceId: spec.cameraId ? { exact: spec.cameraId } : undefined\n    };\n  }\n\n  var supportedVideoList = {\n    'true': true,\n    'unspecified': true,\n    '90p_1': getReso(160, 90),\n    '120p_1': getReso(160, 120),\n    '120p_3': getReso(120, 120),\n    '120p_4': getReso(212, 120),\n    '180p_1': getReso(320, 180),\n    '180p_3': getReso(180, 180),\n    '180p_4': getReso(240, 180),\n    '240p_1': getReso(320, 240),\n    '240p_3': getReso(240, 240),\n    '240p_4': getReso(424, 240),\n    '360p_1': getReso(640, 360),\n    '360p_3': getReso(360, 360),\n    '360p_4': getReso(640, 360),\n    '360p_6': getReso(360, 360),\n    '360p_7': getReso(480, 360),\n    '360p_8': getReso(480, 360),\n    '360p_9': getReso(640, 360),\n    '360p_10': getReso(640, 360),\n    '360p_11': getReso(640, 360),\n    '480p_1': getReso(640, 480),\n    '480p_2': getReso(640, 480),\n    '480p_3': getReso(480, 480),\n    '480p_4': getReso(640, 480),\n    '480p_6': getReso(480, 480),\n    '480p_8': getReso(848, 480),\n    '480p_9': getReso(848, 480),\n    '480p_10': getReso(640, 480),\n    '720p_1': getReso(1280, 720),\n    '720p_2': getReso(1280, 720),\n    '720p_3': getReso(1280, 720),\n    '720p_5': getReso(960, 720),\n    '720p_6': getReso(960, 720),\n    '1080p_1': getReso(1920, 1080),\n    '1080p_2': getReso(1920, 1080),\n    '1080p_3': getReso(1920, 1080),\n    '1080p_5': getReso(1920, 1080),\n    '1440p_1': getReso(2560, 1440),\n    '1440p_2': getReso(2560, 1440),\n    '4k_1': getReso(3840, 2160),\n    '4k_3': getReso(3840, 2160)\n  };\n\n  that.unmuteAudio = undefined;\n  that.muteAudio = undefined;\n  that.unmuteVideo = undefined;\n  that.muteVideo = undefined;\n\n  that.setVideoResolution = function (resolution) {\n    resolution += '';\n    if (supportedVideoList[resolution] !== undefined) {\n      spec.video = supportedVideoList[resolution];\n      spec.attributes = spec.attributes || {};\n      spec.attributes.resolution = resolution;\n      return true;\n    }\n    return false;\n  };\n\n  that.setVideoFrameRate = function (framerate) {\n    if ((0, _Browser.isFireFox)()) {\n      return false;\n    }\n\n    if ((typeof framerate === 'undefined' ? 'undefined' : _typeof(framerate)) === 'object' && framerate instanceof Array && framerate.length > 1) {\n      spec.attributes = spec.attributes || {};\n      spec.attributes.minFrameRate = framerate[0];\n      spec.attributes.maxFrameRate = framerate[1];\n      return true;\n    }\n    return false;\n  };\n\n  that.setVideoBitRate = function (bitrate) {\n    if ((typeof bitrate === 'undefined' ? 'undefined' : _typeof(bitrate)) === 'object' && bitrate instanceof Array && bitrate.length > 1) {\n      spec.attributes = spec.attributes || {};\n      spec.attributes.minVideoBW = bitrate[0];\n      spec.attributes.maxVideoBW = bitrate[1];\n      return true;\n    }\n    return false;\n  };\n\n  // Public functions\n  that.setScreenProfile = function (profile) {\n    if (typeof profile == 'string' && that.screen) {\n      switch (profile) {\n        case '480p_1':\n          that.screenAttributes.width = 640;\n          that.screenAttributes.height = 480;\n          that.screenAttributes.maxFr = 5;\n          that.screenAttributes.minFr = 1;\n          break;\n        case '480p_2':\n          that.screenAttributes.width = 640;\n          that.screenAttributes.height = 480;\n          that.screenAttributes.maxFr = 30;\n          that.screenAttributes.minFr = 25;\n          break;\n        case '720p_1':\n          that.screenAttributes.width = 1280;\n          that.screenAttributes.height = 720;\n          that.screenAttributes.maxFr = 5;\n          that.screenAttributes.minFr = 1;\n          break;\n        case '720p_2':\n          that.screenAttributes.width = 1280;\n          that.screenAttributes.height = 720;\n          that.screenAttributes.maxFr = 30;\n          that.screenAttributes.minFr = 25;\n          break;\n        case '1080p_1':\n          that.screenAttributes.width = 1920;\n          that.screenAttributes.height = 1080;\n          that.screenAttributes.maxFr = 5;\n          that.screenAttributes.minFr = 1;\n          break;\n        case '1080p_2':\n          that.screenAttributes.width = 1920;\n          that.screenAttributes.height = 1080;\n          that.screenAttributes.maxFr = 30;\n          that.screenAttributes.minFr = 25;\n          break;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  that.setVideoProfileCustom = function (profile) {\n    that.setVideoResolution(profile[0]);\n    that.setVideoFrameRate([profile[1], profile[1]]);\n    that.setVideoBitRate([profile[2], profile[2]]);\n  };\n\n  that.setVideoProfile = function (profile) {\n    that.profile = profile;\n    if (typeof profile == 'string' && that.video) {\n      switch (profile) {\n        case '120p':\n        case '120P':\n        case '120p_1':\n        case '120P_1':\n          that.setVideoResolution('120p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 65]);\n          break;\n        case '120p_3':\n        case '120P_3':\n          that.setVideoResolution('120p_3');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 50]);\n          break;\n        case '180p':\n        case '180P':\n        case '180p_1':\n        case '180P_1':\n          that.setVideoResolution('180p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 140]);\n          break;\n        case '180p_3':\n        case '180P_3':\n          that.setVideoResolution('180p_3');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 100]);\n          break;\n        case '180p_4':\n        case '180P_4':\n          that.setVideoResolution('180p_4');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 120]);\n          break;\n        case '240p':\n        case '240P':\n        case '240p_1':\n        case '240P_1':\n          that.setVideoResolution('240p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 200]);\n          break;\n        case '240p_3':\n        case '240P_3':\n          that.setVideoResolution('240p_3');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 140]);\n          break;\n        case '240p_4':\n        case '240P_4':\n          that.setVideoResolution('240p_4');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([10, 220]);\n          break;\n        case '360p':\n        case '360P':\n        case '360p_1':\n        case '360P_1':\n          that.setVideoResolution('360p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 400]);\n          break;\n        case '360p_3':\n        case '360P_3':\n          that.setVideoResolution('360p_3');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 260]);\n          break;\n        case '360p_4':\n        case '360P_4':\n          that.setVideoResolution('360p_4');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 600]);\n          break;\n        case '360p_6':\n        case '360P_6':\n          that.setVideoResolution('360p_6');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 400]);\n          break;\n        case '360p_7':\n        case '360P_7':\n          that.setVideoResolution('360p_7');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 320]);\n          break;\n        case '360p_8':\n        case '360P_8':\n          that.setVideoResolution('360p_8');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 490]);\n          break;\n        case '360p_9':\n        case '360P_9':\n          that.setVideoResolution('360p_9');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 800]);\n          break;\n        case '360p_10':\n        case '360P_10':\n          that.setVideoResolution('360p_10');\n          that.setVideoFrameRate([24, 24]);\n          that.setVideoBitRate([20, 800]);\n          break;\n        case '360p_11':\n        case '360P_11':\n          that.setVideoResolution('360p_11');\n          that.setVideoFrameRate([24, 24]);\n          that.setVideoBitRate([20, 1000]);\n          break;\n        case '480p':\n        case '480P':\n        case '480p_1':\n        case '480P_1':\n          that.setVideoResolution('480p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 500]);\n          break;\n        case '480p_2':\n        case '480P_2':\n          that.setVideoResolution('480p_2');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 1000]);\n          break;\n        case '480p_3':\n        case '480P_3':\n          that.setVideoResolution('480p_3');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 400]);\n          break;\n        case '480p_4':\n        case '480P_4':\n          that.setVideoResolution('480p_4');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 750]);\n          break;\n        case '480p_6':\n        case '480P_6':\n          that.setVideoResolution('480p_6');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 600]);\n          break;\n        case '480p_8':\n        case '480P_8':\n          that.setVideoResolution('480p_8');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 610]);\n          break;\n        case '480p_9':\n        case '480P_9':\n          that.setVideoResolution('480p_9');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([20, 930]);\n          break;\n        case '480p_10':\n        case '480P_10':\n          that.setVideoResolution('480p_10');\n          that.setVideoFrameRate([10, 10]);\n          that.setVideoBitRate([20, 400]);\n          break;\n        case '720p':\n        case '720P':\n        case '720p_1':\n        case '720P_1':\n          that.setVideoResolution('720p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([30, 1130]);\n          break;\n        case '720p_2':\n        case '720P_2':\n          that.setVideoResolution('720p_2');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([30, 2000]);\n          break;\n        case '720p_3':\n        case '720P_3':\n          that.setVideoResolution('720p_3');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([30, 1710]);\n          break;\n        case '720p_5':\n        case '720P_5':\n          that.setVideoResolution('720p_5');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([30, 910]);\n          break;\n        case '720p_6':\n        case '720P_6':\n          that.setVideoResolution('720p_6');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([30, 1380]);\n          break;\n        case '1080p':\n        case '1080P':\n        case '1080p_1':\n        case '1080P_1':\n          that.setVideoResolution('1080p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([50, 2080]);\n          break;\n        case '1080p_2':\n        case '1080P_2':\n          that.setVideoResolution('1080p_2');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([50, 3000]);\n          break;\n        case '1080p_3':\n        case '1080P_3':\n          that.setVideoResolution('1080p_3');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([50, 3150]);\n          break;\n        case '1080p_5':\n        case '1080P_5':\n          that.setVideoResolution('1080p_5');\n          that.setVideoFrameRate([60, 60]);\n          that.setVideoBitRate([50, 4780]);\n          break;\n        case '1440p':\n        case '1440P':\n        case '1440p_1':\n        case '1440P_1':\n          that.setVideoResolution('1440p_1');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([50, 4850]);\n          break;\n        case '1440p_2':\n        case '1440P_2':\n          that.setVideoResolution('1440p_2');\n          that.setVideoFrameRate([60, 60]);\n          that.setVideoBitRate([50, 7350]);\n          break;\n        case '4k':\n        case '4K':\n        case '4k_1':\n        case '4K_1':\n          that.setVideoResolution('4k_1');\n          that.setVideoFrameRate([30, 30]);\n          that.setVideoBitRate([50, 8910]);\n          break;\n        case '4k_3':\n        case '4K_3':\n          that.setVideoResolution('4k_3');\n          that.setVideoFrameRate([60, 60]);\n          that.setVideoBitRate([50, 13500]);\n          break;\n        default:\n          that.setVideoResolution('480p_1');\n          that.setVideoFrameRate([15, 15]);\n          that.setVideoBitRate([20, 500]);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  that.getId = function () {\n    return spec.streamID;\n  };\n\n  that.getAttributes = function () {\n    if (spec.screen) {\n      return that.screenAttributes;\n    } else {\n      return spec.attributes;\n    }\n  };\n\n  // Indicates if the stream has audio activated\n  that.hasAudio = function () {\n    return that.audio;\n  };\n\n  // Indicates if the stream has video activated\n  that.hasVideo = function () {\n    return that.video;\n  };\n\n  // Indicates if the stream has screen activated\n  that.hasScreen = function () {\n    return that.screen;\n  };\n\n  // Indicates if the video track is in playing\n  that.isVideoOn = function () {\n    return that.hasVideo && that.videoEnabled;\n  };\n\n  // Indicates if the audio track is in playing\n  that.isAudioOn = function () {\n    return that.hasAudio && that.audioEnabled;\n  };\n\n  // Initializes the stream and tries to retrieve a stream from local video and audio\n  // We need to call this method before we can publish it in the client.\n  that.init = function (onSuccess, onFailure) {\n    var lts = new Date().getTime();\n\n    var init_retry = arguments[2];\n    if (init_retry === undefined) {\n      init_retry = 2;\n    } // do not write: var init_retry = arguments[1] || 2;\n    if (that.initialized === true) {\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'warning',\n          msg: 'STREAM_ALREADY_INITIALIZED'\n        });\n      }\n      return;\n    }\n    if (that.local !== true) {\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'warning',\n          msg: 'STREAM_NOT_LOCAL'\n        });\n      }\n      return;\n    }\n    try {\n      if ((spec.audio || spec.video || spec.screen) && spec.url === undefined) {\n        _Logger2.default.debug(\"Requested access to local media\");\n        var videoOpt = spec.video;\n        if (spec.screen) {\n          var constraints = { video: videoOpt, audio: spec.audio, screen: true, data: true, extensionId: spec.extensionId, attributes: that.screenAttributes, fake: spec.fake };\n        } else {\n          var constraints = { video: videoOpt, audio: spec.audio, fake: spec.fake };\n          if (!isLegacyChrome()) {\n            var minFr = 30;\n            var maxFr = 30;\n            if (spec.attributes.minFrameRate !== undefined) minFr = spec.attributes.minFrameRate;\n            if (spec.attributes.maxFrameRate !== undefined) maxFr = spec.attributes.maxFrameRate;\n\n            if (!isFirefox()) {\n              if (constraints.audio === true) {\n                constraints.audio = spec.microphoneId ? { deviceId: { exact: spec.microphoneId } } : true;\n              }\n              if (constraints.video === true) {\n                constraints.video = { width: { ideal: that.videoSize[0] }, height: { ideal: that.videoSize[1] }, frameRate: { ideal: minFr, max: maxFr } };\n                that.setVideoBitRate([500, 500]);\n              } else if (_typeof(constraints.video) === 'object') {\n                constraints.video.frameRate = { ideal: minFr, max: maxFr };\n              }\n            } else {\n              if (constraints.video === true) {\n                // video profile not set, use default\n                constraints.video = { width: { ideal: that.videoSize[0] }, height: { ideal: that.videoSize[1] }, frameRate: { ideal: minFr, max: maxFr } };\n                that.setVideoBitRate([500, 500]);\n              } else if (_typeof(constraints.video) === 'object') {\n                constraints.video.frameRate = { ideal: minFr, max: maxFr };\n              }\n            }\n          }\n        }\n        _Logger2.default.debug(constraints);\n        var constraints_copy = Object.assign({}, constraints);\n        (0, _Connection.GetUserMedia)(constraints_copy, function (stream) {\n          _Logger2.default.debug(\"User has granted access to local media\");\n          that.dispatchEvent({ type: 'accessAllowed' });\n          that.stream = stream;\n          that.initialized = true;\n          onSuccess && onSuccess();\n          // get video resolution from <video>\n          if (that.hasVideo()) {\n            (0, _Helper.vsResHack)(stream, function (videoWidth, videoHeight) {\n              that.videoWidth = videoWidth;\n              that.videoHeight = videoHeight;\n            }, function (e) {\n              _Logger2.default.warning('vsResHack failed:' + e);\n            });\n          }\n          // when user click button 'stop sharing' on chrome\n          if (spec.screen && (0, _Browser.isChrome)() && that.stream && that.stream.getVideoTracks()[0]) {\n            that.stream.getVideoTracks()[0].onended = function () {\n              that.dispatchEvent({ type: 'stopScreenSharing' });\n            };\n          }\n          // report accurate video resolution demo in [sdk].ui.js::videoplayer.js, thru <1>.\n          // 1. from ui display (require ui): $('$streamid')[0].videoWidth, $('$streamid')[0].videoHeight\n          // 2. from webrtc_internals (stream should be published): stream.pc.peerConnection.getStats(function(stats){stats.result();});\n          // 2.1. new method? E.g., stream.getFrameResolution() when pc id ready.\n        }, function (error) {\n          var err = { type: 'error', msg: error.name || error };\n          switch (err.msg) {\n            // below - internally handled\n            case 'Starting video failed': // firefox: camera possessed by other process?\n            case 'TrackStartError':\n              // chrome: probably resolution not supported\n              that.videoSize = undefined;\n              if (init_retry > 0) {\n                setTimeout(function () {\n                  that.init(onSuccess, onFailure, init_retry - 1);\n                }, 1);\n                return;\n              } else {\n                err.msg = 'MEDIA_OPTION_INVALID';\n              }\n              break;\n            // below - exposed\n            case 'DevicesNotFoundError':\n              // chrome\n              err.msg = 'DEVICES_NOT_FOUND';\n              break;\n            case 'NotSupportedError':\n              // chrome\n              err.msg = 'NOT_SUPPORTED';\n              break;\n            case 'PermissionDeniedError':\n              // chrome\n              err.msg = 'PERMISSION_DENIED';\n              that.dispatchEvent({ type: 'accessDenied' });\n              break;\n            case 'PERMISSION_DENIED':\n              // firefox\n              that.dispatchEvent({ type: 'accessDenied' });\n              break;\n            case 'InvalidStateError':\n              // chrome\n              err.msg = 'PERMISSION_DENIED';\n              that.dispatchEvent({ type: 'accessDenied' });\n              break;\n            case 'NotAllowedError':\n              // firefox\n              that.dispatchEvent({ type: 'accessDenied' });\n              break;\n            case 'ConstraintNotSatisfiedError':\n              // chrome\n              err.msg = 'CONSTRAINT_NOT_SATISFIED';\n              break;\n            default:\n              if (!err.msg) {\n                err.msg = 'UNDEFINED';\n              }\n          }\n          _Logger2.default.error('Media access:', err.msg);\n          if (typeof onFailure === 'function') {\n            onFailure(err);\n          }\n        });\n\n        if (spec.screen && spec.audio) {\n          var theConfig = { video: false, audio: constraints.audio };\n          _Logger2.default.debug(theConfig);\n          (0, _Connection.GetUserMedia)(theConfig, function (stream) {\n            _Logger2.default.info(\"User has granted access to auxiliary local media.\");\n            that.dispatchEvent({ type: 'accessAllowed' });\n            that.aux_stream = stream;\n          }, function (error) {\n            var err = { type: 'error', msg: error.name || error };\n            switch (err.msg) {\n              // below - internally handled\n              case 'Starting video failed': // firefox: camera possessed by other process?\n              case 'TrackStartError':\n                // chrome: probably resolution not supported\n                that.videoSize = undefined;\n                if (init_retry > 0) {\n                  setTimeout(function () {\n                    that.init(onSuccess, onFailure, init_retry - 1);\n                  }, 1);\n                  return;\n                } else {\n                  err.msg = 'MEDIA_OPTION_INVALID';\n                }\n                break;\n              // below - exposed\n              case 'DevicesNotFoundError':\n                // chrome\n                err.msg = 'DEVICES_NOT_FOUND';\n                break;\n              case 'NotSupportedError':\n                // chrome\n                err.msg = 'NOT_SUPPORTED';\n                break;\n              case 'PermissionDeniedError':\n                // chrome\n                err.msg = 'PERMISSION_DENIED';\n                that.dispatchEvent({ type: 'accessDenied' });\n                break;\n              case 'InvalidStateError':\n                // chrome\n                err.msg = 'PERMISSION_DENIED';\n                that.dispatchEvent({ type: 'accessDenied' });\n                break;\n              case 'PERMISSION_DENIED':\n                // firefox\n                that.dispatchEvent({ type: 'accessDenied' });\n                break;\n              case 'NotAllowedError':\n                // firefox\n                that.dispatchEvent({ type: 'accessDenied' });\n                break;\n              case 'ConstraintNotSatisfiedError':\n                // chrome\n                err.msg = 'CONSTRAINT_NOT_SATISFIED';\n                break;\n              default:\n                if (!err.msg) {\n                  err.msg = 'UNDEFINED';\n                }\n            }\n            _Logger2.default.error('Media access:', err.msg);\n            if (typeof onFailure === 'function') {\n              onFailure(err);\n            }\n          });\n        }\n      } else {\n        if (typeof onFailure === 'function') {\n          onFailure({\n            type: 'warning',\n            msg: 'STREAM_HAS_NO_MEDIA_ATTRIBUTES'\n          });\n        }\n      }\n    } catch (e) {\n      _Logger2.default.error('Stream init:', e);\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'error',\n          msg: e.message || e\n        });\n      }\n    }\n  };\n\n  that.close = function () {\n    _Logger2.default.debug('Close stream with id', spec.streamID);\n    if (that.stream !== undefined) {\n      var tracks = that.stream.getTracks();\n      for (var t in tracks) {\n        if (tracks.hasOwnProperty(t)) {\n          tracks[t].stop();\n        }\n      }\n      that.stream = undefined;\n    }\n\n    that.initialized = false;\n\n    that.unmuteAudio = undefined;\n    that.muteAudio = undefined;\n    that.unmuteVideo = undefined;\n    that.muteVideo = undefined;\n\n    if (that.lowStream) {\n      that.lowStream.close();\n    }\n  };\n\n  that.enableAudio = function () {\n    _Logger2.default.debug('Enable audio stream with id', spec.streamID);\n    if (that.hasAudio() && that.initialized && that.stream !== undefined && that.stream.getAudioTracks()[0].enabled !== true) {\n      if (that.unmuteAudio !== undefined) {\n        that.unmuteAudio();\n      }\n      that.audioEnabled = true;\n      that.stream.getAudioTracks()[0].enabled = true;\n      return true;\n    }\n    return false;\n  };\n\n  that.disableAudio = function () {\n    _Logger2.default.debug('Disable audio stream with id', spec.streamID);\n    if (that.hasAudio() && that.initialized && that.stream !== undefined && that.stream.getAudioTracks()[0].enabled) {\n      if (that.muteAudio !== undefined) {\n        that.muteAudio();\n      }\n      that.audioEnabled = false;\n      that.stream.getAudioTracks()[0].enabled = false;\n\n      // only loacl stream will have sid\n      if (that.sid) {\n        _Report.report.audioSendingStopped(that.sid, {\n          succ: true,\n          reason: 'muteAudio'\n        });\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.enableVideo = function () {\n    _Logger2.default.debug('Enable video stream with id', spec.streamID);\n    if (that.initialized && that.stream !== undefined && that.stream.getVideoTracks().length && that.stream.getVideoTracks()[0].enabled !== true) {\n      if (that.unmuteVideo !== undefined) {\n        that.unmuteVideo();\n      }\n      that.videoEnabled = true;\n      that.stream.getVideoTracks()[0].enabled = true;\n      if (that.lowStream) {\n        that.lowStream.enableVideo();\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.disableVideo = function () {\n    _Logger2.default.debug('Disable video stream with id', spec.streamID);\n    if (that.initialized && that.stream !== undefined && that.stream.getVideoTracks().length && that.stream.getVideoTracks()[0].enabled) {\n      if (that.muteVideo !== undefined) {\n        that.muteVideo();\n      }\n      that.videoEnabled = false;\n      that.stream.getVideoTracks()[0].enabled = false;\n      if (that.lowStream) {\n        that.lowStream.disableVideo();\n      }\n\n      // only loacl stream will have sid\n      if (that.sid) {\n        _Report.report.videoSendingStopped(that.sid, {\n          succ: true,\n          reason: 'muteVideo'\n        });\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.play = function (elementID, assetsURL) {\n    var options = undefined;\n    that.showing = false;\n    if (!that.local || that.video || that.screen) {\n      //that.hasVideo() may be changed\n      if (elementID !== undefined) {\n        that.player = new _VideoPlayer2.default({ id: that.getId(), stream: that, elementID: elementID, options: options, url: assetsURL });\n        that.showing = true;\n      }\n    } else if (that.hasAudio()) {\n      that.player = new _AudioPlayer2.default({ id: that.getId(), stream: that, elementID: elementID, options: options, url: assetsURL });\n      that.showing = true;\n    }\n  };\n\n  that.stop = function () {\n    _Logger2.default.debug('Stop stream player with id', spec.streamID);\n    if (that.player !== undefined) {\n      that.player.destroy();\n    }\n  };\n\n  that.getStats = function (cb) {\n    if (that.pc && that.pc.getStats) {\n      that.pc.getStats(function (stats) {\n        if (that.pc.isSubscriber) {\n          var filterStats = (0, _Stats.subscribeStatsFilter)(stats);\n          if ((0, _Browser.isFireFox)()) {\n            filterStats.videoReceivedResolutionHeight = that.videoHeight + '';\n            filterStats.videoReceivedResolutionWidth = that.videoWidth + '';\n          }\n          cb && cb((0, _Stats.subscribeStatsFilter)(stats));\n        } else {\n          var filterStats = (0, _Stats.publishStatsFilter)(stats);\n          if (!(0, _Browser.isChrome)()) {\n            filterStats.videoSendResolutionHeight = that.videoHeight + '';\n            filterStats.videoSendResolutionWidth = that.videoWidth + '';\n          }\n          if (!(0, _Browser.isChrome)() && that.uplinkStats) {\n            filterStats.videoSendBandwidth = that.uplinkStats.uplink_available_bandwidth + \"\";\n            filterStats.videoSendPacketsLost = that.uplinkStats.uplink_cumulative_lost + \"\";\n          }\n          cb && cb(filterStats);\n        }\n      });\n    } else {\n      _Logger2.default.warning(\"use getStats after peerConnection established\");\n    }\n  };\n\n  that.getAudioLevel = function () {\n    if (that.audioLevelHelper) {\n      return that.audioLevelHelper.getAudioLevel();\n    } else {\n      if (that.stream) {\n        if (that.stream.getAudioTracks().length !== 0) {\n          that.audioLevelHelper = new _Helper.audioLevelHelper(that.stream);\n          return that.audioLevelHelper.getAudioLevel();\n        } else {\n          _Logger2.default.warning(\"can't get audioLevel beacuse no audio trace in stream\");\n        }\n      } else {\n        _Logger2.default.warning(\"can't get audioLevel beacuse no stream exist\");\n        return 0;\n      }\n    }\n  };\n\n  return that;\n};\n\nvar createStream = function createStream(spec) {\n  _Logger2.default.debug('Create stream with id', spec.streamID);\n  return Stream(spec);\n};\n\nvar getDevices = function getDevices(onSuccess, onFailure) {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n    _Logger2.default.warning(\"enumerateDevices() not supported.\");\n    onFailure && onFailure(\"enumerateDevices() not supported\");\n  }\n\n  navigator.mediaDevices.enumerateDevices().then(function (devices) {\n    return onSuccess(devices);\n  }).catch(function (err) {\n    return onFailure && onFailure(err.name + ': ' + err.message);\n  });\n};\n\nexports.Stream = Stream;\nexports.createStream = createStream;\nexports.getDevices = getDevices;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar ErrorCodes = {\n    FAILED: 'FAILED',\n    INVALID_KEY: 'INVALID_KEY',\n    INVALID_OPERATION: 'INVALID_OPERATION',\n    INVALID_PARAMETER: 'INVALID_PARAMETER',\n    INVALID_LOCAL_STREAM: 'INVALID_LOCAL_STREAM',\n    INVALID_REMOTE_STREAM: 'INVALID_REMOTE_STREAM',\n    INVALID_DYNAMIC_KEY: 'INVALID_DYNAMIC_KEY',\n    DYNAMIC_KEY_TIMEOUT: 'DYNAMIC_KEY_TIMEOUT',\n    NO_VOCS_AVAILABLE: 'NO_VOCS_AVAILABLE',\n    NO_VOS_AVAILABLE: 'ERR_NO_VOS_AVAILABLE',\n    JOIN_CHANNEL_TIMEOUT: 'ERR_JOIN_CHANNEL_TIMEOUT',\n    NO_AVAILABLE_CHANNEL: 'NO_AVAILABLE_CHANNEL',\n    LOOKUP_CHANNEL_TIMEOUT: 'LOOKUP_CHANNEL_TIMEOUT',\n    LOOKUP_CHANNEL_REJECTED: 'LOOKUP_CHANNEL_REJECTED',\n    OPEN_CHANNEL_TIMEOUT: 'OPEN_CHANNEL_TIMEOUT',\n    OPEN_CHANNEL_REJECTED: 'OPEN_CHANNEL_REJECTED',\n    REQUEST_DEFERRED: 'REQUEST_DEFERRED',\n\n    SOCKET_ERROR: 'SOCKET_ERROR',\n    SOCKET_DISCONNECTED: 'SOCKET_DISCONNECTED',\n    PEERCONNECTION_FAILED: 'PEERCONNECTION_FAILED',\n    CONNECT_GATEWAY_ERROR: 'CONNECT_GATEWAY_ERROR',\n\n    SERVICE_NOT_AVAILABLE: 'SERVICE_NOT_AVAILABLE',\n    JOIN_CHANNEL_FAILED: 'JOIN_CHANNEL_FAILED',\n    PUBLISH_STREAM_FAILED: 'PUBLISH_STREAM_FAILED',\n    UNPUBLISH_STREAM_FAILED: 'UNPUBLISH_STREAM_FAILED',\n    SUBSCRIBE_STREAM_FAILED: 'SUBSCRIBE_STREAM_FAILED',\n    UNSUBSCRIBE_STREAM_FAILED: 'UNSUBSCRIBE_STREAM_FAILED',\n    NO_SUCH_REMOTE_STREAM: 'NO_SUCH_REMOTE_STREAM',\n\n    ERR_FAILED: '1',\n    ERR_INVALID_VENDOR_KEY: '101',\n    ERR_INVALID_CHANNEL_NAME: '102',\n    WARN_NO_AVAILABLE_CHANNEL: '103',\n    WARN_LOOKUP_CHANNEL_TIMEOUT: '104',\n    WARN_LOOKUP_CHANNEL_REJECTED: '105',\n    WARN_OPEN_CHANNEL_TIMEOUT: '106',\n    WARN_OPEN_CHANNEL_REJECTED: '107',\n    WARN_REQUEST_DEFERRED: '108',\n    ERR_DYNAMIC_KEY_TIMEOUT: '109',\n    ERR_INVALID_DYNAMIC_KEY: '110',\n    ERR_NO_VOCS_AVAILABLE: '2000',\n    ERR_NO_VOS_AVAILABLE: '2001',\n    ERR_JOIN_CHANNEL_TIMEOUT: '2002',\n\n    // for dualStream\n    IOS_NOT_SUPPORT: 'iOS not support dualStream',\n    SHARING_SCREEN_NOT_SUPPORT: 'sharing screen not support dualStream',\n    STILL_ON_PUBLISHING: 'Can\\'t open or close low-Stream when publishing or unpublish high-stream'\n};\n\nexports.default = ErrorCodes;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _View = __webpack_require__(5);\n\nvar _View2 = _interopRequireDefault(_View);\n\nvar _Speaker = __webpack_require__(17);\n\nvar _Speaker2 = _interopRequireDefault(_Speaker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*global window, document, clearTimeout, setTimeout */\n\n/*\n * Bar represents the bottom menu bar of every mediaPlayer.\n * It contains a Speaker and an icon.\n * Every Bar is a View.\n * Ex.: var bar = Bar({elementID: element, id: id});\n */\nvar Bar = function Bar(spec) {\n    \"use strict\";\n\n    var that = (0, _View2.default)({}),\n        waiting,\n        show;\n\n    // Variables\n\n    // DOM element in which the Bar will be appended\n    that.elementID = spec.elementID;\n\n    // Bar ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('id', 'bar_' + that.id);\n\n    // Bottom bar\n    that.bar = document.createElement('div');\n    that.bar.setAttribute('style', 'width: 100%; height: 15%; max-height: 30px; position: absolute; bottom: 0; right: 0; background-color: rgba(255,255,255,0.62)');\n    that.bar.setAttribute('id', 'subbar_' + that.id);\n\n    // Lynckia icon\n    that.link = document.createElement('a');\n    that.link.setAttribute('href', 'http://www.lynckia.com/');\n    that.link.setAttribute('target', '_blank');\n\n    that.logo = document.createElement('img');\n    that.logo.setAttribute('style', 'width: 100%; height: 100%; max-width: 30px; position: absolute; top: 0; left: 2px;');\n    that.logo.setAttribute('alt', 'Lynckia');\n    //that.logo.setAttribute('src', that.url + '/assets/star.svg');\n\n    // Private functions\n    show = function show(displaying) {\n        if (displaying !== 'block') {\n            displaying = 'none';\n        } else {\n            clearTimeout(waiting);\n        }\n\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: absolute; bottom: 0; right: 0; display:' + displaying);\n    };\n\n    // Public functions\n\n    that.display = function () {\n        show('block');\n    };\n\n    that.hide = function () {\n        waiting = setTimeout(show, 1000);\n    };\n\n    document.getElementById(that.elementID).appendChild(that.div);\n    that.div.appendChild(that.bar);\n    // that.bar.appendChild(that.link);\n    // that.link.appendChild(that.logo);\n\n    // Speaker component\n    if (!spec.stream.screen && (spec.options === undefined || spec.options.speaker === undefined || spec.options.speaker === true)) {\n        that.speaker = new _Speaker2.default({ elementID: 'subbar_' + that.id, id: that.id, stream: spec.stream, media: spec.media, url: that.url });\n    }\n\n    that.display();\n    that.hide();\n\n    return that;\n};\n\nexports.default = Bar;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetUserMedia = exports.Connection = undefined;\n\nvar _ChromeCanaryStack = __webpack_require__(21);\n\nvar _ChromeCanaryStack2 = _interopRequireDefault(_ChromeCanaryStack);\n\nvar _ChromeStableStack = __webpack_require__(22);\n\nvar _ChromeStableStack2 = _interopRequireDefault(_ChromeStableStack);\n\nvar _SafariStableStack = __webpack_require__(23);\n\nvar _SafariStableStack2 = _interopRequireDefault(_SafariStableStack);\n\nvar _FcStack = __webpack_require__(24);\n\nvar _FcStack2 = _interopRequireDefault(_FcStack);\n\nvar _FirefoxStack = __webpack_require__(25);\n\nvar _FirefoxStack2 = _interopRequireDefault(_FirefoxStack);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sessionId = 103;\n\nvar Connection = function Connection(spec) {\n  \"use strict\";\n\n  var that = {};\n\n  spec.session_id = sessionId += 1;\n\n  // Check which WebRTC Stack is installed.\n  if (typeof window == \"undefined\" || !window.navigator) {\n    _Logger2.default.error('Publish/subscribe video/audio streams not supported yet');\n    that = (0, _FcStack2.default)(spec);\n  } else if (window.navigator.userAgent.match(\"Firefox\") !== null) {\n    // Firefox\n    that.browser = \"mozilla\";\n    that = (0, _FirefoxStack2.default)(spec);\n  } else if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n    // Safari.\n    _Logger2.default.debug(\"Safari\");\n    that = (0, _SafariStableStack2.default)(spec);\n    that.browser = \"safari\";\n  } else if (window.navigator.userAgent.indexOf(\"MSIE \")) {\n    // Internet Explorer.\n    //Logger.debug(\"IE\");\n    that = (0, _ChromeStableStack2.default)(spec);\n    that.browser = \"ie\";\n  } else if (window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] >= 26) {\n    // Google Chrome Stable.\n    //Logger.debug(\"Stable\");\n    that = (0, _ChromeStableStack2.default)(spec);\n    that.browser = \"chrome-stable\";\n  } else if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") >= 40) {\n    // Google Chrome Canary.\n    //Logger.debug(\"Canary!\");\n    that = (0, _ChromeCanaryStack2.default)(spec);\n    that.browser = \"chrome-canary\";\n  } else {\n    // None.\n    that.browser = \"none\";\n    throw \"WebRTC stack not available\";\n  }\n  return that;\n};\n\nvar GetUserMedia = function GetUserMedia(config, callback, error) {\n  \"use strict\";\n\n  navigator.getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n  if (config.screen) {\n    _Logger2.default.debug(\"Screen access requested\");\n    if (window.navigator.userAgent.match(\"Firefox\") !== null) {\n      //firefox\n      var theConfig = {};\n      if (config.video.mandatory != undefined) {\n        theConfig.video = config.video;\n        theConfig.video.mediaSource = 'window' || 'screen';\n      } else {\n        theConfig = { video: { mediaSource: 'window' || 'screen' } };\n      }\n      navigator.getMedia(theConfig, callback, error);\n    } else if (window.navigator.userAgent.match(\"Chrome\") !== null) {\n      //chrome\n      if (window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] < 34) {\n        error({ code: \"This browser does not support screen sharing\" });\n        return;\n      }\n      var extensionId = \"okeephmleflklcdebijnponpabbmmgeo\";\n      if (config.extensionId) {\n        _Logger2.default.debug(\"extensionId supplied, using \" + config.extensionId);\n        extensionId = config.extensionId;\n      }\n      _Logger2.default.debug(\"Screen access on chrome stable, looking for extension\");\n      try {\n        chrome.runtime.sendMessage(extensionId, { getStream: true }, function (response) {\n          if (response === undefined) {\n            _Logger2.default.debug(\"Access to screen denied\");\n            var theError = { code: \"Access to screen denied\" };\n            error(theError);\n            return;\n          }\n          var theId = response.streamId;\n          var mWidth = config.attributes.width;\n          var mHeight = config.attributes.height;\n          var maxFr = config.attributes.maxFr;\n          var minFr = config.attributes.minFr;\n          theConfig = {\n            video: { mandatory: { chromeMediaSource: 'desktop', chromeMediaSourceId: theId, maxHeight: mHeight, maxWidth: mWidth, maxFrameRate: maxFr, minFrameRate: minFr } } };\n          navigator.getMedia(theConfig, callback, error);\n        });\n      } catch (e) {\n        _Logger2.default.debug(\"AgoraRTC screensharing plugin is not accessible\");\n        var theError = { code: \"no_plugin_present\" };\n        error(theError);\n        return;\n      }\n    } else {\n      _Logger2.default.debug(\"This browser does not support screenSharing\");\n    }\n  } else if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n    navigator.mediaDevices.getUserMedia(config).then(callback).catch(error);\n  } else {\n    if (typeof navigator == 'undefined' || !navigator.getMedia) {\n      _Logger2.default.error('Video/audio streams not supported yet');\n    } else {\n      navigator.getMedia(config, callback, error);\n    }\n  }\n};\n\nexports.Connection = Connection;\nexports.GetUserMedia = GetUserMedia;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar AgoraCall = function AgoraCall(callback) {\n    if (callback) {\n        callback.apply(this, [].slice.call(arguments, 1));\n    }\n};\n\nexports.default = AgoraCall;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldUseHttps = exports.post = undefined;\n\nvar _Config = __webpack_require__(4);\n\nvar config = _interopRequireWildcard(_Config);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar post = function post(url, data, success, failure) {\n  var xhr = new XMLHttpRequest();\n  xhr.timeout = data.timeout || config.HTTP_CONNECT_TIMEOUT;\n  xhr.open(\"POST\", url, true);\n  xhr.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n  xhr.onload = function (e) {\n    success && success(xhr.responseText);\n  };\n  xhr.onerror = function (e) {\n    failure && failure(e, url);\n  };\n  xhr.ontimeout = function (e) {\n    failure && failure(e, url);\n  };\n  xhr.send(JSON.stringify(data));\n};\n\nvar shouldUseHttps = function shouldUseHttps() {\n  return \"https:\" == document.location.protocol ? true : false;\n};\n\nexports.post = post;\nexports.shouldUseHttps = shouldUseHttps;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGatewayList = undefined;\n\nvar _Config = __webpack_require__(4);\n\nvar config = _interopRequireWildcard(_Config);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ErrorCodes = __webpack_require__(8);\n\nvar _ErrorCodes2 = _interopRequireDefault(_ErrorCodes);\n\nvar _Request = __webpack_require__(12);\n\nvar _Report = __webpack_require__(6);\n\nvar _Helper = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar requestChooseServer = function requestChooseServer(url, option, onSuccess, onFailure) {\n  var lts = new Date().getTime();\n\n  var csOption = {\n    key: option.appId,\n    cname: option.cname,\n    uid: option.uid\n  };\n\n  (0, _Request.post)(url, csOption, function (res) {\n    var response = JSON.parse(res);\n    var error = response.error;\n\n    if (error != undefined) {\n      _Report.report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: error\n      });\n      onFailure(\"Get server node failed [\" + error + \"]\", url);\n    } else {\n      onSuccess(response, url);\n    }\n  }, function (e, url) {\n    if (e.type === \"timeout\") {\n      _Report.report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: \"timeout\"\n      });\n      onFailure(\"Connect choose server timeout\", url);\n    } else {\n      _Report.report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: \"server_wrong\"\n      });\n      // onFailure(\"Connect choose server error\", url);\n    }\n  });\n};\n\nvar requestGatewayList = function requestGatewayList(joinInfo, onSuccess, onFailure) {\n  var lts = new Date().getTime();\n  var connected = false;\n  _Helper.CSCrashRecord.record(lts);\n\n  var success = function success(response, url) {\n    if (!connected) {\n      clearTimeout(st);\n      connected = true;\n      _Logger2.default.debug(\"Get gateway address:\", response.gateway_addr);\n      onSuccess(response);\n\n      _Report.report.joinChooseServer(joinInfo.sid, {\n        lts: lts,\n        succ: true,\n        csAddr: url,\n        serverList: response.gateway_addr,\n        cid: response.cid + \"\",\n        uid: response.uid + \"\",\n        ec: null\n      }, true);\n    } else {\n      _Report.report.joinChooseServer(joinInfo.sid, {\n        lts: lts,\n        succ: true,\n        csAddr: url,\n        serverList: response.gateway_addr,\n        cid: response.cid + \"\",\n        uid: response.uid + \"\",\n        ec: null\n      }, false);\n    }\n  };\n\n  var failed = function failed(e, url) {\n    _Logger2.default.error(e, url);\n  };\n\n  var domainlist = config.WEBCS_DOMAIN;\n  for (var i = 0; i < domainlist.length; ++i) {\n    var csURL;\n    csURL = (0, _Request.shouldUseHttps)() ? \"https://\" + domainlist[i] + \":5668/getwebgw/jsonp\" : \"http://\" + domainlist[i] + \":5669/getwebgw/jsonp\";\n    // Logger.debug(\"Connect to backup_choose_server:\", csURL);\n    requestChooseServer(csURL, joinInfo, success, failed);\n  }\n\n  var st = setTimeout(function () {\n    if (!connected) {\n      var backupList = config.WEBCS_DOMAIN_BACKUP_LIST;\n      for (var i = 0; i < backupList.length; ++i) {\n        var csURL;\n        csURL = (0, _Request.shouldUseHttps)() ? \"https://\" + backupList[i] + \":5668/getwebgw/jsonp\" : \"http://\" + backupList[i] + \":5669/getwebgw/jsonp\";\n        // Logger.debug(\"Connect to backup_choose_server:\", csURL);\n        requestChooseServer(csURL, joinInfo, success, failed);\n      }\n    }\n  }, 1000);\n\n  setTimeout(function () {\n    if (!connected) {\n      onFailure();\n    }\n  }, config.WEBCS_BACKUP_CONNECT_TIMEOUT);\n};\n\n//TODO: put it in Controll layer\nvar getGatewayList = function getGatewayList(param, onSuccess, onFailure) {\n  var isSuccess = false;\n  var timer = null;\n  var times = 1;\n\n  var request = function request() {\n    // To prevent so many request that make server crash.\n    if (_Helper.CSCrashRecord.shouldBlock()) {\n      _Logger2.default.warning(\"CS connetion crash too many times in 10s\");\n      return onFailure && onFailure();\n    }\n\n    if (!isSuccess) {\n      requestGatewayList(param, function (gatewayAddr) {\n        isSuccess = true;\n        clearTimeout(timer);\n        onSuccess(gatewayAddr);\n      }, function () {\n        // Backoff mechanism is reconnecting after double previous time,like 1,2,4,8,16,32... until 3600.\n        _Logger2.default.debug(\"Request gateway list will be restart in \" + times + \"s\");\n        timer = setTimeout(function () {\n          request();\n        }, times * 1000);\n        times = times >= 3600 ? 3600 : times * 2;\n      });\n    }\n  };\n  request();\n};\n\nexports.getGatewayList = getGatewayList;\n\n/***/ }),\n/* 14 */,\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar getTimestamp = function getTimestamp() {\n\tvar date = new Date();\n\treturn date.toTimeString().split(\" \")[0] + \":\" + date.getMilliseconds();\n};\n\nexports.getTimestamp = getTimestamp;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _View = __webpack_require__(5);\n\nvar _View2 = _interopRequireDefault(_View);\n\nvar _Bar = __webpack_require__(9);\n\nvar _Bar2 = _interopRequireDefault(_Bar);\n\nvar _ResizeSensor = __webpack_require__(18);\n\nvar _ResizeSensor2 = _interopRequireDefault(_ResizeSensor);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _adapter = __webpack_require__(19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar VideoPlayer = function VideoPlayer(spec) {\n    \"use strict\";\n\n    var that = (0, _View2.default)({}),\n        onmouseover,\n        onmouseout;\n\n    // Variables\n\n    // VideoPlayer ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Stream that the VideoPlayer will play\n    that.stream = spec.stream.stream;\n\n    // DOM element in which the VideoPlayer will be appended\n    that.elementID = spec.elementID;\n\n    // Public functions\n\n    // It will stop the VideoPlayer and remove it from the HTML\n    that.destroy = function () {\n        // document.getElementById('video'+that.id).srcObject = null;\n        // document.getElementById('audio'+that.id).srcObject = null;\n        that.video.srcObject = null;\n        that.audio.srcObject = null;\n        that.video.pause();\n        delete that.resizer;\n        document.getElementById(that.div.id) && that.parentNode.removeChild(that.div);\n    };\n\n    that.resize = function () {\n\n        var width = that.container.offsetWidth,\n            height = that.container.offsetHeight;\n\n        if (spec.stream.screen) {\n\n            if (width * (3 / 4) < height) {\n\n                that.video.style.width = width + \"px\";\n                that.video.style.height = 3 / 4 * width + \"px\";\n\n                that.video.style.top = -(3 / 4 * width / 2 - height / 2) + \"px\";\n                that.video.style.left = \"0px\";\n            } else {\n\n                that.video.style.height = height + \"px\";\n                that.video.style.width = 4 / 3 * height + \"px\";\n\n                that.video.style.left = -(4 / 3 * height / 2 - width / 2) + \"px\";\n                that.video.style.top = \"0px\";\n            }\n        } else {\n            if (width !== that.containerWidth || height !== that.containerHeight) {\n\n                if (width * (3 / 4) > height) {\n\n                    that.video.style.width = width + \"px\";\n                    that.video.style.height = 3 / 4 * width + \"px\";\n\n                    that.video.style.top = -(3 / 4 * width / 2 - height / 2) + \"px\";\n                    that.video.style.left = \"0px\";\n                } else {\n\n                    that.video.style.height = height + \"px\";\n                    that.video.style.width = 4 / 3 * height + \"px\";\n\n                    that.video.style.left = -(4 / 3 * height / 2 - width / 2) + \"px\";\n                    that.video.style.top = \"0px\";\n                }\n            }\n        }\n\n        that.containerWidth = width;\n        that.containerHeight = height;\n    };\n\n    /*window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        document.getElementById(key).value = unescape(value);\n    });*/\n\n    //Logger.debug('Creating URL from stream ' + that.stream);\n    //var myURL = window.URL || webkitURL;\n    //that.stream_url = myURL.createObjectURL(that.stream);\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('id', 'player_' + that.id);\n    if (spec.stream.video) {\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; background-color: black; overflow: hidden;');\n    } else {\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; overflow: hidden;');\n    }\n\n    // Loader icon\n    //that.loader = document.createElement('img');\n    //that.loader.setAttribute('style', 'width: 16px; height: 16px; position: absolute; top: 50%; left: 50%; margin-top: -8px; margin-left: -8px');\n    //that.loader.setAttribute('id', 'back_' + that.id);\n    //that.loader.setAttribute('src', that.url + '/assets/loader.gif');\n\n    // Video tag\n    that.video = document.createElement('video');\n    that.video.setAttribute('id', 'video' + that.id);\n    if (spec.stream.local && !spec.stream.screen) {\n        if (spec.stream.mirror) {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; transform: rotateY(180deg);');\n        } else {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; ');\n        }\n    } else {\n        if (spec.stream.video) {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute;');\n            if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n                that.video.setAttribute('controls', '');\n            }\n        } else if (spec.stream.screen) {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute;');\n        } else {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; display: none;');\n        }\n    }\n    that.video.setAttribute('autoplay', '');\n    that.video.setAttribute('muted', '');\n    that.video.setAttribute('playsinline', '');\n\n    if (spec.stream.local) {\n        that.video.volume = 0;\n        that.video.setAttribute('muted', '');\n    }\n\n    // Audio tag\n    that.audio = document.createElement('audio');\n    that.audio.setAttribute('id', 'audio' + that.id);\n    that.audio.setAttribute('autoplay', '');\n\n    if (spec.stream.local) {\n        that.audio.volume = 0;\n        that.audio.setAttribute('muted', '');\n    }\n\n    if (that.elementID !== undefined) {\n        document.getElementById(that.elementID).appendChild(that.div);\n        that.container = document.getElementById(that.elementID);\n    } else {\n        document.body.appendChild(that.div);\n        that.container = document.body;\n    }\n\n    that.parentNode = that.div.parentNode;\n\n    //that.div.appendChild(that.loader);\n    that.div.appendChild(that.video);\n    that.div.appendChild(that.audio);\n    that.video.addEventListener(\"playing\", function (evt) {\n        var display = function display() {\n            if (that.video.videoWidth * that.video.videoHeight > 4) {\n                // why remote video size initially is 2*2 in chrome?\n                _Logger2.default.debug('video dimensions:', that.video.videoWidth, that.video.videoHeight);\n                return;\n            }\n            setTimeout(display, 50);\n        };\n        display();\n    });\n\n    that.containerWidth = 0;\n    that.containerHeight = 0;\n\n    that.resizer = new _ResizeSensor2.default(that.container, that.resize);\n\n    that.resize();\n\n    (0, _adapter.attachMediaStream)(document.getElementById('video' + that.id), spec.stream.stream);\n    (0, _adapter.attachMediaStream)(document.getElementById('audio' + that.id), spec.stream.stream);\n\n    return that;\n}; /*global window, console, document, webkitURL*/\n/*\n * VideoPlayer represents a Licode video component that shows either a local or a remote video.\n * Ex.: var player = VideoPlayer({id: id, stream: stream, elementID: elementID});\n * A VideoPlayer is also a View component.\n */\nexports.default = VideoPlayer;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _View = __webpack_require__(5);\n\nvar _View2 = _interopRequireDefault(_View);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Speaker = function Speaker(spec) {\n    \"use strict\";\n\n    var that = (0, _View2.default)({}),\n        show,\n        mute,\n        unmute,\n        lastVolume = 50;\n\n    // Variables\n\n    // DOM element in which the Speaker will be appended\n    that.elementID = spec.elementID;\n\n    // media tag\n    that.media = spec.media;\n\n    // Speaker id\n    that.id = spec.id;\n\n    // Assets URL\n    if (spec.url !== undefined) {\n        that.url = spec.url;\n    }\n\n    // MediaStream\n    that.stream = spec.stream;\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('style', 'width: 40%; height: 100%; max-width: 32px; position: absolute; right: 0;z-index:0;');\n\n    // Volume icon\n    that.icon = document.createElement('img');\n    that.icon.setAttribute('id', 'volume_' + that.id);\n    that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n    that.icon.setAttribute('style', 'width: 80%; height: 100%; position: absolute;');\n    that.div.appendChild(that.icon);\n\n    if (!that.stream.local) {\n\n        // Volume bar\n        that.picker = document.createElement('input');\n        that.picker.setAttribute('id', 'picker_' + that.id);\n        that.picker.type = \"range\";\n        that.picker.min = 0;\n        that.picker.max = 100;\n        that.picker.step = 10;\n        that.picker.value = lastVolume;\n        that.picker.setAttribute(\"orient\", \"vertical\"); //  FireFox supports range sliders as of version 23\n\n        that.div.appendChild(that.picker);\n        that.media.volume = that.picker.value / 100;\n        that.media.muted = false;\n\n        that.picker.oninput = function () {\n            if (that.picker.value > 0) {\n                that.media.muted = false;\n                that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            } else {\n                that.media.muted = true;\n                that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            }\n            that.media.volume = that.picker.value / 100;\n        };\n\n        // Private functions\n        show = function show(displaying) {\n            that.picker.setAttribute('style', 'background: transparent; width: 32px; height: 100px; position: absolute; bottom: 90%; z-index: 1;' + that.div.offsetHeight + 'px; right: 0px; -webkit-appearance: slider-vertical; display: ' + displaying);\n        };\n\n        mute = function mute() {\n            that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            lastVolume = that.picker.value;\n            that.picker.value = 0;\n            that.media.volume = 0;\n            that.media.muted = true;\n        };\n\n        unmute = function unmute() {\n            that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            that.picker.value = lastVolume;\n            that.media.volume = that.picker.value / 100;\n            that.media.muted = false;\n        };\n\n        that.icon.onclick = function () {\n            if (that.media.muted) {\n                unmute();\n            } else {\n                mute();\n            }\n        };\n\n        // Public functions\n        that.div.onmouseover = function () {\n            show('block');\n        };\n\n        that.div.onmouseout = function () {\n            show('none');\n        };\n\n        show('none');\n    } else {\n\n        mute = function mute() {\n            that.media.muted = true;\n            that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            //that.stream.stream.getAudioTracks()[0].enabled = false;\n        };\n\n        unmute = function unmute() {\n            that.media.muted = false;\n            that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            //that.stream.stream.getAudioTracks()[0].enabled = true;\n        };\n\n        that.icon.onclick = function () {\n            if (that.media.muted) {\n                unmute();\n            } else {\n                mute();\n            }\n        };\n    }\n\n    document.getElementById(that.elementID).appendChild(that.div);\n    return that;\n}; /*global window, console, document */\n/*\n * Speaker represents the volume icon that will be shown in the mediaPlayer, for example.\n * It manages the volume level of the media tag given in the constructor.\n * Every Speaker is a View.\n * Ex.: var speaker = Speaker({elementID: element, media: mediaTag, id: id});\n */\nexports.default = Speaker;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    //Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n/* jshint browser: true, camelcase: true, curly: true, devel: true,\n eqeqeq: true, forin: false, globalstrict: true, node: true,\n quotmark: single, undef: true, unused: strict */\n/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,\n mozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */\n/* exported trace,requestUserMedia */\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar getUserMedia = null;\nvar attachMediaStream = null;\nvar reattachMediaStream = null;\nvar webrtcDetectedBrowser = null;\nvar webrtcDetectedVersion = null;\nvar webrtcMinimumVersion = null;\nvar webrtcUtils = {\n    log: function log() {\n        // suppress console.log output when being included as a module.\n        if (true) {\n            return;\n        }\n        console.log.apply(console, arguments);\n    },\n    extractVersion: function extractVersion(uastring, expr, pos) {\n        var match = uastring.match(expr);\n        return match && match.length >= pos && parseInt(match[pos]);\n    }\n};\n\nfunction trace(text) {\n    // This function is used for logging.\n    if (text[text.length - 1] === '\\n') {\n        text = text.substring(0, text.length - 1);\n    }\n    if (window.performance) {\n        var now = (window.performance.now() / 1000).toFixed(3);\n        webrtcUtils.log(now + ': ' + text);\n    } else {\n        webrtcUtils.log(text);\n    }\n}\n\nif ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object') {\n    if (window.HTMLMediaElement && !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n            get: function get() {\n                // If prefixed srcObject property exists, return it.\n                // Otherwise use the shimmed property, _srcObject\n                return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;\n            },\n            set: function set(stream) {\n                if ('mozSrcObject' in this) {\n                    this.mozSrcObject = stream;\n                } else {\n                    // Use _srcObject as a private property for this shim\n                    this._srcObject = stream;\n                    // TODO: revokeObjectUrl(this.src) when !stream to release resources?\n                    this.src = URL.createObjectURL(stream);\n                }\n            }\n        });\n    }\n    // Proxy existing globals\n    getUserMedia = window.navigator && window.navigator.getUserMedia;\n}\n\n// Attach a media stream to an element.\nattachMediaStream = function attachMediaStream(element, stream) {\n    element.srcObject = stream;\n};\n\nreattachMediaStream = function reattachMediaStream(to, from) {\n    to.srcObject = from.srcObject;\n};\n\nif (typeof window === 'undefined' || !window.navigator) {\n    webrtcUtils.log('This does not appear to be a browser');\n    webrtcDetectedBrowser = 'not a browser';\n} else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {\n    webrtcUtils.log('This appears to be Firefox');\n\n    webrtcDetectedBrowser = 'firefox';\n\n    // the detected firefox version.\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Firefox\\/([0-9]+)\\./, 1);\n\n    // the minimum firefox version still supported by adapter.\n    webrtcMinimumVersion = 31;\n\n    // The RTCPeerConnection object.\n    window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n        if (webrtcDetectedVersion < 38) {\n            // .urls is not supported in FF < 38.\n            // create RTCIceServers with a single url.\n            if (pcConfig && pcConfig.iceServers) {\n                var newIceServers = [];\n                for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                    var server = pcConfig.iceServers[i];\n                    if (server.hasOwnProperty('urls')) {\n                        for (var j = 0; j < server.urls.length; j++) {\n                            var newServer = {\n                                url: server.urls[j]\n                            };\n                            if (server.urls[j].indexOf('turn') === 0) {\n                                newServer.username = server.username;\n                                newServer.credential = server.credential;\n                            }\n                            newIceServers.push(newServer);\n                        }\n                    } else {\n                        newIceServers.push(pcConfig.iceServers[i]);\n                    }\n                }\n                pcConfig.iceServers = newIceServers;\n            }\n        }\n        return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n    };\n\n    // The RTCSessionDescription object.\n    if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = mozRTCSessionDescription;\n    }\n\n    // The RTCIceCandidate object.\n    if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = mozRTCIceCandidate;\n    }\n\n    // getUserMedia constraints shim.\n    getUserMedia = function getUserMedia(constraints, onSuccess, onError) {\n        var constraintsToFF37 = function constraintsToFF37(c) {\n            if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) !== 'object' || c.require) {\n                return c;\n            }\n            var require = [];\n            Object.keys(c).forEach(function (key) {\n                if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                    return;\n                }\n                var r = c[key] = _typeof(c[key]) === 'object' ? c[key] : { ideal: c[key] };\n                if (r.min !== undefined || r.max !== undefined || r.exact !== undefined) {\n                    require.push(key);\n                }\n                if (r.exact !== undefined) {\n                    if (typeof r.exact === 'number') {\n                        r.min = r.max = r.exact;\n                    } else {\n                        c[key] = r.exact;\n                    }\n                    delete r.exact;\n                }\n                if (r.ideal !== undefined) {\n                    c.advanced = c.advanced || [];\n                    var oc = {};\n                    if (typeof r.ideal === 'number') {\n                        oc[key] = { min: r.ideal, max: r.ideal };\n                    } else {\n                        oc[key] = r.ideal;\n                    }\n                    c.advanced.push(oc);\n                    delete r.ideal;\n                    if (!Object.keys(r).length) {\n                        delete c[key];\n                    }\n                }\n            });\n            if (require.length) {\n                c.require = require;\n            }\n            return c;\n        };\n        if (webrtcDetectedVersion < 38) {\n            webrtcUtils.log('spec: ' + JSON.stringify(constraints));\n            if (constraints.audio) {\n                constraints.audio = constraintsToFF37(constraints.audio);\n            }\n            if (constraints.video) {\n                constraints.video = constraintsToFF37(constraints.video);\n            }\n            webrtcUtils.log('ff37: ' + JSON.stringify(constraints));\n        }\n        return navigator.mozGetUserMedia(constraints, onSuccess, onError);\n    };\n\n    navigator.getUserMedia = getUserMedia;\n\n    // Shim for mediaDevices on older versions.\n    if (!navigator.mediaDevices) {\n        navigator.mediaDevices = { getUserMedia: requestUserMedia,\n            addEventListener: function addEventListener() {},\n            removeEventListener: function removeEventListener() {}\n        };\n    }\n    navigator.mediaDevices.enumerateDevices = navigator.mediaDevices.enumerateDevices || function () {\n        return new Promise(function (resolve) {\n            var infos = [{ kind: 'audioinput', deviceId: 'default', label: '', groupId: '' }, { kind: 'videoinput', deviceId: 'default', label: '', groupId: '' }];\n            resolve(infos);\n        });\n    };\n\n    if (webrtcDetectedVersion < 41) {\n        // Work around http://bugzil.la/1169665\n        var orgEnumerateDevices = navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n        navigator.mediaDevices.enumerateDevices = function () {\n            return orgEnumerateDevices().then(undefined, function (e) {\n                if (e.name === 'NotFoundError') {\n                    return [];\n                }\n                throw e;\n            });\n        };\n    }\n} else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {\n    webrtcUtils.log('This appears to be Chrome');\n\n    webrtcDetectedBrowser = 'chrome';\n\n    // the detected chrome version.\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n    // the minimum chrome version still supported by adapter.\n    webrtcMinimumVersion = 38;\n\n    // The RTCPeerConnection object.\n    window.RTCPeerConnection = function (pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n            pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n        var origGetStats = pc.getStats.bind(pc);\n        pc.getStats = function (selector, successCallback, errorCallback) {\n            // jshint ignore: line\n            var self = this;\n            var args = arguments;\n\n            // If selector is a function then we are in the old style stats so just\n            // pass back the original getStats format to avoid breaking old users.\n            if (arguments.length > 0 && typeof selector === 'function') {\n                return origGetStats(selector, successCallback);\n            }\n\n            var fixChromeStats = function fixChromeStats(response) {\n                var standardReport = {};\n                var reports = response.result();\n                reports.forEach(function (report) {\n                    var standardStats = {\n                        id: report.id,\n                        timestamp: report.timestamp,\n                        type: report.type\n                    };\n                    report.names().forEach(function (name) {\n                        standardStats[name] = report.stat(name);\n                    });\n                    standardReport[standardStats.id] = standardStats;\n                });\n\n                return standardReport;\n            };\n\n            if (arguments.length >= 2) {\n                var successCallbackWrapper = function successCallbackWrapper(response) {\n                    args[1](fixChromeStats(response));\n                };\n\n                return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);\n            }\n\n            // promise-support\n            return new Promise(function (resolve, reject) {\n                if (args.length === 1 && selector === null) {\n                    origGetStats.apply(self, [function (response) {\n                        resolve.apply(null, [fixChromeStats(response)]);\n                    }, reject]);\n                } else {\n                    origGetStats.apply(self, [resolve, reject]);\n                }\n            });\n        };\n\n        return pc;\n    };\n\n    // add promise support\n    ['createOffer', 'createAnswer'].forEach(function (method) {\n        var nativeMethod = webkitRTCPeerConnection.prototype[method];\n        webkitRTCPeerConnection.prototype[method] = function () {\n            var self = this;\n            if (arguments.length < 1 || arguments.length === 1 && _typeof(arguments[0]) === 'object') {\n                var opts = arguments.length === 1 ? arguments[0] : undefined;\n                return new Promise(function (resolve, reject) {\n                    nativeMethod.apply(self, [resolve, reject, opts]);\n                });\n            } else {\n                return nativeMethod.apply(this, arguments);\n            }\n        };\n    });\n\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n        var nativeMethod = webkitRTCPeerConnection.prototype[method];\n        webkitRTCPeerConnection.prototype[method] = function () {\n            var args = arguments;\n            var self = this;\n            return new Promise(function (resolve, reject) {\n                nativeMethod.apply(self, [args[0], function () {\n                    resolve();\n                    if (args.length >= 2) {\n                        args[1].apply(null, []);\n                    }\n                }, function (err) {\n                    reject(err);\n                    if (args.length >= 3) {\n                        args[2].apply(null, [err]);\n                    }\n                }]);\n            });\n        };\n    });\n\n    // getUserMedia constraints shim.\n    var constraintsToChrome = function constraintsToChrome(c) {\n        if ((typeof c === 'undefined' ? 'undefined' : _typeof(c)) !== 'object' || c.mandatory || c.optional) {\n            return c;\n        }\n        var cc = {};\n        Object.keys(c).forEach(function (key) {\n            if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                return;\n            }\n            var r = _typeof(c[key]) === 'object' ? c[key] : { ideal: c[key] };\n            if (r.exact !== undefined && typeof r.exact === 'number') {\n                r.min = r.max = r.exact;\n            }\n            var oldname = function oldname(prefix, name) {\n                if (prefix) {\n                    return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n                }\n                return name === 'deviceId' ? 'sourceId' : name;\n            };\n            if (r.ideal !== undefined) {\n                cc.optional = cc.optional || [];\n                var oc = {};\n                if (typeof r.ideal === 'number') {\n                    oc[oldname('min', key)] = r.ideal;\n                    cc.optional.push(oc);\n                    oc = {};\n                    oc[oldname('max', key)] = r.ideal;\n                    cc.optional.push(oc);\n                } else {\n                    oc[oldname('', key)] = r.ideal;\n                    cc.optional.push(oc);\n                }\n            }\n            if (r.exact !== undefined && typeof r.exact !== 'number') {\n                cc.mandatory = cc.mandatory || {};\n                cc.mandatory[oldname('', key)] = r.exact;\n            } else {\n                ['min', 'max'].forEach(function (mix) {\n                    if (r[mix] !== undefined) {\n                        cc.mandatory = cc.mandatory || {};\n                        cc.mandatory[oldname(mix, key)] = r[mix];\n                    }\n                });\n            }\n        });\n        if (c.advanced) {\n            cc.optional = (cc.optional || []).concat(c.advanced);\n        }\n        return cc;\n    };\n\n    getUserMedia = function getUserMedia(constraints, onSuccess, onError) {\n        if (constraints.audio) {\n            constraints.audio = constraintsToChrome(constraints.audio);\n        }\n        if (constraints.video) {\n            constraints.video = constraintsToChrome(constraints.video);\n        }\n        webrtcUtils.log('chrome: ' + JSON.stringify(constraints));\n        return navigator.webkitGetUserMedia(constraints, onSuccess, onError);\n    };\n    navigator.getUserMedia = getUserMedia;\n\n    if (!navigator.mediaDevices) {\n        navigator.mediaDevices = { getUserMedia: requestUserMedia,\n            enumerateDevices: function enumerateDevices() {\n                return new Promise(function (resolve) {\n                    var kinds = { audio: 'audioinput', video: 'videoinput' };\n                    return MediaStreamTrack.getSources(function (devices) {\n                        resolve(devices.map(function (device) {\n                            return { label: device.label,\n                                kind: kinds[device.kind],\n                                deviceId: device.id,\n                                groupId: '' };\n                        }));\n                    });\n                });\n            } };\n    }\n\n    // A shim for getUserMedia method on the mediaDevices object.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (!navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n            return requestUserMedia(constraints);\n        };\n    } else {\n        // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n        // function which returns a Promise, it does not accept spec-style\n        // constraints.\n        var origGetUserMedia = navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);\n        navigator.mediaDevices.getUserMedia = function (c) {\n            webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment\n            c.audio = constraintsToChrome(c.audio);\n            c.video = constraintsToChrome(c.video);\n            webrtcUtils.log('chrome: ' + JSON.stringify(c));\n            return origGetUserMedia(c);\n        };\n    }\n\n    // Dummy devicechange event methods.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n        navigator.mediaDevices.addEventListener = function () {\n            webrtcUtils.log('Dummy mediaDevices.addEventListener called.');\n        };\n    }\n    if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n        navigator.mediaDevices.removeEventListener = function () {\n            webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');\n        };\n    }\n\n    // Attach a media stream to an element.\n    attachMediaStream = function attachMediaStream(element, stream) {\n        if (webrtcDetectedVersion >= 43) {\n            element.srcObject = stream;\n        } else if (typeof element.src !== 'undefined') {\n            element.src = URL.createObjectURL(stream);\n        } else {\n            webrtcUtils.log('Error attaching stream to element.');\n        }\n    };\n    reattachMediaStream = function reattachMediaStream(to, from) {\n        if (webrtcDetectedVersion >= 43) {\n            to.srcObject = from.srcObject;\n        } else {\n            to.src = from.src;\n        }\n    };\n} else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    webrtcUtils.log('This appears to be Edge');\n    webrtcDetectedBrowser = 'edge';\n\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent, /Edge\\/(\\d+).(\\d+)$/, 2);\n\n    // the minimum version still supported by adapter.\n    webrtcMinimumVersion = 12;\n} else {\n    webrtcUtils.log('Browser does not appear to be WebRTC-capable');\n}\n\n// Returns the result of getUserMedia as a Promise.\nfunction requestUserMedia(constraints) {\n    return new Promise(function (resolve, reject) {\n        getUserMedia(constraints, resolve, reject);\n    });\n}\n\nvar webrtcTesting = {};\ntry {\n    Object.defineProperty(webrtcTesting, 'version', {\n        set: function set(version) {\n            webrtcDetectedVersion = version;\n        }\n    });\n} catch (e) {}\n\nif (true) {\n    var RTCPeerConnection;\n    if (typeof window !== 'undefined') {\n        RTCPeerConnection = window.RTCPeerConnection;\n    }\n    module.exports = {\n        RTCPeerConnection: RTCPeerConnection,\n        getUserMedia: getUserMedia,\n        attachMediaStream: attachMediaStream,\n        reattachMediaStream: reattachMediaStream,\n        webrtcDetectedBrowser: webrtcDetectedBrowser,\n        webrtcDetectedVersion: webrtcDetectedVersion,\n        webrtcMinimumVersion: webrtcMinimumVersion,\n        webrtcTesting: webrtcTesting,\n        webrtcUtils: webrtcUtils\n        //requestUserMedia: not exposed on purpose.\n        //trace: not exposed on purpose.\n    };\n} else if (typeof require === 'function' && typeof define === 'function') {\n    // Expose objects and functions when RequireJS is doing the loading.\n    define([], function () {\n        return {\n            RTCPeerConnection: window.RTCPeerConnection,\n            getUserMedia: getUserMedia,\n            attachMediaStream: attachMediaStream,\n            reattachMediaStream: reattachMediaStream,\n            webrtcDetectedBrowser: webrtcDetectedBrowser,\n            webrtcDetectedVersion: webrtcDetectedVersion,\n            webrtcMinimumVersion: webrtcMinimumVersion,\n            webrtcTesting: webrtcTesting,\n            webrtcUtils: webrtcUtils\n            //requestUserMedia: not exposed on purpose.\n            //trace: not exposed on purpose.\n        };\n    });\n}\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _View = __webpack_require__(5);\n\nvar _View2 = _interopRequireDefault(_View);\n\nvar _Bar = __webpack_require__(9);\n\nvar _Bar2 = _interopRequireDefault(_Bar);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Browser = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*global window, console, document, webkitURL*/\n/*\n * AudioPlayer represents a Licode Audio component that shows either a local or a remote Audio.\n * Ex.: var player = AudioPlayer({id: id, stream: stream, elementID: elementID});\n * A AudioPlayer is also a View component.\n */\nvar AudioPlayer = function AudioPlayer(spec) {\n    \"use strict\";\n\n    var that = (0, _View2.default)({}),\n        onmouseover,\n        onmouseout;\n\n    // Variables\n\n    // AudioPlayer ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Stream that the AudioPlayer will play\n    that.stream = spec.stream.stream;\n\n    // DOM element in which the AudioPlayer will be appended\n    that.elementID = spec.elementID;\n\n    // Audio tag\n    that.audio = document.createElement('audio');\n    that.audio.setAttribute('id', 'stream' + that.id);\n    that.audio.setAttribute('style', 'width: 100%; height: 100%; position: absolute');\n    that.audio.setAttribute('autoplay', 'autoplay');\n\n    if (spec.stream.local) {\n        that.audio.volume = 0;\n    }\n\n    if (spec.stream.local) {\n        that.audio.volume = 0;\n    }\n\n    if (that.elementID !== undefined) {\n\n        // It will stop the AudioPlayer and remove it from the HTML\n        that.destroy = function () {\n            that.audio.pause();\n            //clearInterval(that.resize);\n            that.parentNode.removeChild(that.div);\n        };\n\n        onmouseover = function onmouseover() {\n            that.bar.display();\n        };\n\n        onmouseout = function onmouseout() {\n            that.bar.hide();\n        };\n\n        // Container\n        that.div = document.createElement('div');\n        that.div.setAttribute('id', 'player_' + that.id);\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; overflow: hidden;');\n\n        document.getElementById(that.elementID).appendChild(that.div);\n        that.container = document.getElementById(that.elementID);\n\n        that.parentNode = that.div.parentNode;\n\n        that.div.appendChild(that.audio);\n\n        // Bottom Bar\n        that.bar = new _Bar2.default({ elementID: 'player_' + that.id, id: that.id, stream: spec.stream, media: that.audio, options: spec.options, url: that.url });\n\n        if (spec.stream.local) {\n            that.div.onmouseover = onmouseout;\n        } else {\n            that.div.onmouseover = onmouseover;\n        }\n        that.div.onmouseout = onmouseout;\n    } else {\n        // It will stop the AudioPlayer and remove it from the HTML\n        that.destroy = function () {\n            that.audio.pause();\n            //clearInterval(that.resize);\n            that.parentNode.removeChild(that.audio);\n        };\n\n        document.body.appendChild(that.audio);\n        that.parentNode = document.body;\n    }\n\n    _Logger2.default.debug('Creating URL from stream ' + that.stream);\n    if ((0, _Browser.isSafari)()) {\n        that.audio.srcObject = that.stream;\n    } else {\n        var myURL = window.URL || webkitURL;\n        that.stream_url = myURL.createObjectURL(that.stream);\n        that.audio.src = that.stream_url;\n    }\n\n    return that;\n};\n\nexports.default = AudioPlayer;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChromeCanaryStack = function ChromeCanaryStack(spec) {\n    \"use strict\";\n\n    var that = {},\n        WebkitRTCPeerConnection = webkitRTCPeerConnection;\n\n    that.pc_config = {\n        \"iceServers\": []\n    };\n\n    that.con = { 'optional': [{ 'DtlsSrtpKeyAgreement': true }] };\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({ \"url\": url });\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({ \"url\": spec.stunServerUrl });\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new WebkitRTCPeerConnection(that.pc_config, that.con);\n\n    that.peerConnection.onicecandidate = function (event) {\n        //Logger.debug(\"PeerConnection: \", spec.session_id);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            _Logger2.default.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n            that.iceCandidateCount += 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var setMaxBW = function setMaxBW(sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            _Logger2.default.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring),\n            sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n\n                sd.sdp = setMaxBW(sd.sdp);\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        that.peerConnection.addStream(stream);\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n        //        var i;\n        //        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n        //            if (that.localStreams[i] === stream) {\n        //                that.localStreams[i] = null;\n        //            }\n        //        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                that.peerConnection.createOffer(function (sessionDescription) {\n\n                    //sessionDescription.sdp = newOffer.replace(/a=ice-options:google-ice\\r\\n/g, \"\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n                    _Logger2.default.debug(\"Changed\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        _Logger2.default.debug('Not sending a new offer');\n                    }\n                }, function (err) {\n                    _Logger2.default.debug('peer connection create offer failed ', err);\n                }, that.mediaConstraints);\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                //Logger.debug('Sent SDP is ' + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        _Logger2.default.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n                }, function (err) {\n                    _Logger2.default.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = that.sequenceNumber += 1;\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = that.roapSessionId += 1;\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    that.peerConnection.onopen = function () {\n        if (that.onopen) {\n            that.onopen();\n        }\n    };\n\n    that.peerConnection.onaddstream = function (stream) {\n        if (that.onaddstream) {\n            that.onaddstream(stream);\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexports.default = ChromeCanaryStack;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ChromeStableStack = function ChromeStableStack(spec) {\n    \"use strict\";\n\n    var that = {},\n\n    //WebkitRTCPeerConnection = webkitRTCPeerConnection;\n    WebkitRTCPeerConnection = RTCPeerConnection;\n    that.isSubscriber = spec.isSubscriber;\n    that.pc_config = {\n        \"iceServers\": []\n    };\n\n    that.con = { 'optional': [{ 'DtlsSrtpKeyAgreement': true }] };\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({ \"url\": url });\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({ \"url\": spec.stunServerUrl });\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new WebkitRTCPeerConnection(that.pc_config, that.con);\n\n    that.peerConnection.onicecandidate = function (event) {\n        //Logger.debug(\"PeerConnection: \", spec.session_id);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            _Logger2.default.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n            clearTimeout(that.timeout);\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n            //Logger.debug(event.candidate);\n            if (that.iceCandidateCount === 0) {\n                that.timeout = setTimeout(function () {\n                    if (that.moreIceComing) {\n                        that.moreIceComing = false;\n                        that.markActionNeeded();\n                    }\n                }, 1000);\n            }\n            that.iceCandidateCount = that.iceCandidateCount + 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var filterSdp = function filterSdp(sdp) {\n        var a, r;\n        if (spec.screen) {\n            sdp = sdp.replace(\"a=x-google-flag:conference\\r\\n\", '');\n        }\n        return sdp;\n    };\n\n    var setMaxBW = function setMaxBW(sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            _Logger2.default.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring),\n            sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n                sd.sdp = filterSdp(sd.sdp);\n                sd.sdp = setMaxBW(sd.sdp);\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    that.getStatsRate = function (callback) {\n        that.getStats(function (stats) {\n            callback(stats);\n        });\n    };\n\n    that.getStats = function (callback) {\n        that.peerConnection.getStats(null, function (stats) {\n            var filterList = [];\n            var originList = [];\n            var timeStamp = null;\n            Object.keys(stats).forEach(function (stat) {\n                var report = stats[stat];\n                originList.push(report);\n                if (report.type === 'ssrc' || report.type === 'VideoBwe') {\n                    timeStamp = report.timestamp;\n                    filterList.push(report);\n                }\n            });\n            filterList.push({\n                id: \"time\",\n                startTime: that.connectedTime,\n                timestamp: timeStamp || new Date()\n            });\n            callback(filterList, originList);\n        });\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        that.peerConnection.addStream(stream);\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n        //        var i;\n        //        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n        //            if (that.localStreams[i] === stream) {\n        //                that.localStreams[i] = null;\n        //            }\n        //        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                that.peerConnection.createOffer(function (sessionDescription) {\n\n                    //sessionDescription.sdp = newOffer.replace(/a=ice-options:google-ice\\r\\n/g, \"\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n                    //Logger.debug(\"Changed\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        _Logger2.default.debug('Not sending a new offer');\n                    }\n                }, function (err) {\n                    _Logger2.default.debug('peer connection create offer failed ', err);\n                }, that.mediaConstraints);\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                //Logger.debug('Sent SDP is ' + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        _Logger2.default.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n                }, function (err) {\n                    _Logger2.default.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = that.sequenceNumber += 1;\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = that.roapSessionId += 1;\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    //that.peerConnection.onopen = function () {\n    //    if (that.onopen) {\n    //        that.onopen();\n    //    }\n    //};\n\n    that.peerConnection.ontrack = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"ontrack\");\n        }\n    };\n\n    that.peerConnection.onaddstream = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"onaddstream\");\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if (e.currentTarget.iceConnectionState === \"connected\") {\n            that.connectedTime = new Date();\n        }\n\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexports.default = ChromeStableStack;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SafariStableStack = function SafariStableStack(spec) {\n    \"use strict\";\n\n    var that = {},\n\n    //WebkitRTCPeerConnection = webkitRTCPeerConnection;\n    WebkitRTCPeerConnection = RTCPeerConnection;\n\n    that.isSubscriber = spec.isSubscriber;\n    that.pc_config = {\n        \"iceServers\": [{ urls: [\"stun:72.251.224.27:3478\"] }],\n        \"bundlePolicy\": \"max-bundle\"\n    };\n\n    that.con = { 'optional': [{ 'DtlsSrtpKeyAgreement': true }] };\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({ \"url\": url });\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({ \"url\": spec.stunServerUrl });\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new RTCPeerConnection({ \"iceServers\": [{ urls: [\"stun:webcs.agora.io:3478\", \"stun:stun.l.google.com:19302\"] }], \"bundlePolicy\": \"max-bundle\" });\n\n    that.peerConnection.onicecandidate = function (event) {\n        _Logger2.default.debug(\"PeerConnection: \", spec.session_id, event);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            _Logger2.default.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n            clearTimeout(that.timeout);\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n            //Logger.debug(event.candidate);\n            if (that.iceCandidateCount === 0) {\n                that.timeout = setTimeout(function () {\n                    if (that.moreIceComing) {\n                        that.moreIceComing = false;\n                        that.markActionNeeded();\n                    }\n                }, 1000);\n            }\n            that.iceCandidateCount = that.iceCandidateCount + 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var filterSdp = function filterSdp(sdp) {\n        var a, r;\n        if (spec.screen) {\n            sdp = sdp.replace(\"a=x-google-flag:conference\\r\\n\", '');\n        }\n        return sdp;\n    };\n\n    var setMaxBW = function setMaxBW(sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            _Logger2.default.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring),\n            sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n                sd.sdp = filterSdp(sd.sdp);\n                sd.sdp = setMaxBW(sd.sdp);\n                sd.sdp = sd.sdp.replace(/a=x-google-flag:conference\\r\\n/g, \"\");\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    var outbound_rtp_audio = {\n        id: \"\",\n        type: \"\",\n        mediaType: \"\",\n        googCodecName: \"opus\",\n        aecDivergentFilterFraction: \"0\",\n        audioInputLevel: \"0\",\n        bytesSent: \"0\",\n        packetsSent: \"0\",\n        googEchoCancellationReturnLoss: \"0\",\n        googEchoCancellationReturnLossEnhancement: \"0\"\n    };\n\n    var outbound_rtp_video = {\n        id: \"\",\n        type: \"\",\n        mediaType: \"\",\n        googCodecName: spec.codec === \"h264\" ? \"H264\" : \"VP8\",\n        bytesSent: \"0\",\n        packetsLost: \"0\",\n        packetsSent: \"0\",\n        googAdaptationChanges: \"0\",\n        googAvgEncodeMs: \"0\",\n        googEncodeUsagePercent: \"0\",\n        googFirsReceived: \"0\",\n        googFrameHeightSent: \"0\",\n        googFrameHeightInput: \"0\",\n        googFrameRateInput: \"0\",\n        googFrameRateSent: \"0\",\n        googFrameWidthSent: \"0\",\n        googFrameWidthInput: \"0\",\n        googNacksReceived: \"0\",\n        googPlisReceived: \"0\",\n        googRtt: \"0\",\n        googFramesEncoded: \"0\"\n    };\n\n    var inbound_rtp_audio = {\n        id: \"\",\n        type: \"\",\n        mediaType: \"\",\n        audioOutputLevel: \"0\",\n        bytesReceived: \"0\",\n        packetsLost: \"0\",\n        packetsReceived: \"0\",\n        googAccelerateRate: \"0\",\n        googCurrentDelayMs: \"0\",\n        googDecodingCNG: \"0\",\n        googDecodingCTN: \"0\",\n        googDecodingCTSG: \"0\",\n        googDecodingNormal: \"0\",\n        googDecodingPLC: \"0\",\n        googDecodingPLCCNG: \"0\",\n        googExpandRate: \"0\",\n        googJitterBufferMs: \"0\",\n        googJitterReceived: \"0\",\n        googPreemptiveExpandRate: \"0\",\n        googPreferredJitterBufferMs: \"0\",\n        googSecondaryDecodedRate: \"0\",\n        googSpeechExpandRate: \"0\"\n    };\n\n    var inbound_rtp_video = {\n        id: \"\",\n        type: \"\",\n        mediaType: \"\",\n        googTargetDelayMs: \"0\",\n        packetsLost: \"0\",\n        googDecodeMs: \"0\",\n        googMaxDecodeMs: \"0\",\n        googRenderDelayMs: \"0\",\n        googFrameWidthReceived: \"0\",\n        googFrameHeightReceived: \"0\",\n        googFrameRateReceived: \"0\",\n        googFrameRateDecoded: \"0\",\n        googFrameRateOutput: \"0\",\n        googFramesDecoded: \"0\",\n        googFrameReceived: \"0\",\n\n        googJitterBufferMs: \"0\",\n        googCurrentDelayMs: \"0\",\n        googMinPlayoutDelayMs: \"0\",\n        googNacksSent: \"0\",\n        googPlisSent: \"0\",\n        googFirsSent: \"0\",\n        bytesReceived: \"0\",\n        packetsReceived: \"0\"\n    };\n\n    var bweforvideo = {\n        id: \"bweforvideo\",\n        type: \"VideoBwe\",\n        googAvailableSendBandwidth: \"0\",\n        googAvailableReceiveBandwidth: \"0\",\n        googActualEncBitrate: \"0\",\n        googRetransmitBitrate: \"0\",\n        googTargetEncBitrate: \"0\",\n        googBucketDelay: \"0\",\n        googTransmitBitrate: \"0\"\n    };\n\n    var lastFramesEncoded = 0;\n    var lastFramesDecoded = 0;\n    var lastFramesReceived = 0;\n\n    that.getStatsRate = function (callback) {\n        that.getStats(function (stats) {\n            stats.forEach(function (report) {\n                if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                    if (report.googFramesEncoded) {\n                        report.googFrameRateSent = ((report.googFramesEncoded - lastFramesEncoded) / 3).toString();\n                        lastFramesEncoded = report.googFramesEncoded;\n                    }\n                }\n                if (report.type === 'inbound-rtp' && report.id.indexOf(\"55543\") != -1) {\n                    // if googFrameRateReceived or googFrameRateDecoded is \"null\" or \"undefined\", it will sent \"NAN\" to server and make server crash\n                    if (report.googFrameRateReceived) {\n                        report.googFrameRateReceived = ((report.googFrameReceived - lastFramesReceived) / 3).toString();\n                        lastFramesReceived = report.googFrameReceived;\n                    }\n                    if (report.googFrameRateDecoded) {\n                        report.googFrameRateDecoded = ((report.googFramesDecoded - lastFramesDecoded) / 3).toString();\n                        lastFramesDecoded = report.googFramesDecoded;\n                    }\n                }\n            });\n            callback(stats);\n        });\n    };\n\n    that.getStats = function (callback) {\n        var originList = [];\n        that.peerConnection.getStats().then(function (stats) {\n            var list = [];\n            stats.forEach(function (report) {\n                originList.push(report);\n                if (report.type === 'outbound-rtp' && report.mediaType === 'audio') {\n                    outbound_rtp_audio.id = report.id;\n                    outbound_rtp_audio.type = report.type;\n                    outbound_rtp_audio.mediaType = report.mediaType;\n                    outbound_rtp_audio.bytesSent = report.bytesSent.toString();\n                    outbound_rtp_audio.packetsSent = report.packetsSent.toString();\n                }\n                if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                    outbound_rtp_video.id = report.id;\n                    outbound_rtp_video.type = report.type;\n                    outbound_rtp_video.mediaType = report.mediaType;\n                    outbound_rtp_video.bytesSent = report.bytesSent.toString();\n                    outbound_rtp_video.packetsSent = report.packetsSent.toString();\n                    outbound_rtp_video.googPlisReceived = report.pliCount.toString();\n                    outbound_rtp_video.googNacksReceived = report.nackCount.toString();\n                    outbound_rtp_video.googFirsReceived = report.firCount.toString();\n                    outbound_rtp_video.googFramesEncoded = report.framesEncoded.toString();\n                }\n                if (report.type === 'inbound-rtp' && report.id.indexOf(\"44444\") != -1) {\n                    inbound_rtp_audio.id = report.id;\n                    inbound_rtp_audio.type = report.type;\n                    inbound_rtp_audio.mediaType = \"audio\";\n                    inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n                    inbound_rtp_audio.bytesReceived = report.bytesReceived.toString();\n                    inbound_rtp_audio.packetsLost = report.packetsLost.toString();\n                    inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n                    inbound_rtp_audio.googJitterReceived = report.jitter.toString();\n                }\n                if (report.type === 'inbound-rtp' && report.id.indexOf(\"55543\") != -1) {\n                    inbound_rtp_video.id = report.id;\n                    inbound_rtp_video.type = report.type;\n                    inbound_rtp_video.mediaType = \"video\";\n                    inbound_rtp_video.packetsReceived = report.packetsReceived.toString();\n                    inbound_rtp_video.bytesReceived = report.bytesReceived.toString();\n                    inbound_rtp_video.packetsLost = report.packetsLost.toString();\n                    inbound_rtp_video.googJitterBufferMs = report.jitter.toString();\n                    inbound_rtp_video.googNacksSent = report.nackCount.toString();\n                    inbound_rtp_video.googPlisSent = report.pliCount.toString();\n                    inbound_rtp_video.googFirsSent = report.firCount.toString();\n                }\n                if (report.type === 'track' && report.id.indexOf(\"55543\") != -1) {\n                    inbound_rtp_video.googFrameWidthReceived = report.frameWidth.toString();\n                    inbound_rtp_video.googFrameHeightReceived = report.frameHeight.toString();\n                    inbound_rtp_video.googFrameReceived = report.framesReceived.toString();\n                    inbound_rtp_video.googFramesDecoded = report.framesDecoded.toString();\n                }\n                if (report.type === 'track' && report.id.indexOf(\"44444\") != -1) {\n                    inbound_rtp_audio.audioOutputLevel = report.audioLevel + \"\";\n                    outbound_rtp_audio.audioInputLevel = report.audioLevel + \"\";\n                }\n                if (report.type === 'candidate-pair') {\n                    if (report.availableIncomingBitrate == 0) {\n                        bweforvideo.googAvailableSendBandwidth = report.availableOutgoingBitrate + \"\";\n                    } else {\n                        bweforvideo.googAvailableReceiveBandwidth = report.availableIncomingBitrate + \"\";\n                    }\n                }\n            });\n            var filterList = [bweforvideo, outbound_rtp_audio, outbound_rtp_video, inbound_rtp_audio, inbound_rtp_video];\n            filterList.push({\n                id: \"time\",\n                startTime: that.connectedTime,\n                timestamp: new Date()\n            });\n            callback(filterList, originList);\n        }).catch(function (error) {\n            console.error(error);\n        });\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n            stream.getTracks().forEach(function (track) {\n                return that.peerConnection.addTrack(track, stream);\n            });\n        } else {\n            that.peerConnection.addStream(stream);\n        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n        //        var i;\n        //        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n        //            if (that.localStreams[i] === stream) {\n        //                that.localStreams[i] = null;\n        //            }\n        //        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                if (spec.isSubscriber && window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n                    var audioReceiver = that.peerConnection.addTransceiver(\"audio\");\n                    var videoReceiver = that.peerConnection.addTransceiver(\"video\");\n                    audioReceiver.setDirection(\"recvonly\");\n                    videoReceiver.setDirection(\"recvonly\");\n                }\n                that.peerConnection.createOffer(that.mediaConstraints).then(function (sessionDescription) {\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n\n                    if (!spec.isSubscriber) {\n                        // Solve the video orientation issue between iOS Safari and Firefox.\n                        sessionDescription.sdp = sessionDescription.sdp.replace(/a=extmap:4 urn:3gpp:video-orientation\\r\\n/g, \"\");\n                    }\n\n                    //Logger.debug(\"Offer\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        _Logger2.default.debug('Not sending a new offer');\n                    }\n                }).catch(function (err) {\n                    _Logger2.default.debug('peer connection create offer failed ', err);\n                });\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        _Logger2.default.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n                }, function (err) {\n                    _Logger2.default.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = that.sequenceNumber += 1;\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = that.roapSessionId += 1;\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    that.peerConnection.ontrack = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"ontrack\");\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if (e.currentTarget.iceConnectionState === \"connected\") {\n            that.connectedTime = new Date();\n        }\n\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexports.default = SafariStableStack;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar FcStack = function FcStack() {\n  \"use strict\";\n\n  var that = {};\n  that.addStream = function () {};\n\n  return that;\n};\n\nexports.default = FcStack;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FirefoxStack = function FirefoxStack(spec) {\n  \"use strict\";\n\n  var that = {},\n      WebkitRTCPeerConnection = mozRTCPeerConnection,\n      RTCSessionDescription = mozRTCSessionDescription;\n  var hasStream = false;\n  that.isSubscriber = spec.isSubscriber;\n  that.pc_config = {\n    \"iceServers\": []\n  };\n\n  // currently firefox does not support turn\n  if (spec.iceServers instanceof Array) {\n    spec.iceServers.map(function (server) {\n      if (server.url.indexOf('stun:') === 0) {\n        that.pc_config.iceServers.push({ \"url\": server.url });\n      }\n    });\n  } else {\n    if (spec.stunServerUrl) {\n      if (spec.stunServerUrl instanceof Array) {\n        spec.stunServerUrl.map(function (url) {\n          if (typeof url === 'string' && url !== '') {\n            that.pc_config.iceServers.push({ \"url\": url });\n          }\n        });\n      } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n        that.pc_config.iceServers.push({ \"url\": spec.stunServerUrl });\n      }\n    }\n  }\n\n  if (spec.audio === undefined) {\n    spec.audio = true;\n  }\n\n  if (spec.video === undefined) {\n    spec.video = true;\n  }\n\n  that.mediaConstraints = {\n    offerToReceiveAudio: spec.audio,\n    offerToReceiveVideo: spec.video,\n    mozDontOfferDataChannel: true\n  };\n\n  that.roapSessionId = 103;\n\n  that.peerConnection = new RTCPeerConnection(that.pc_config);\n\n  that.peerConnection.onicecandidate = function (event) {\n    if (!event.candidate) {\n      // At the moment, we do not renegotiate when new candidates\n      // show up after the more flag has been false once.\n      _Logger2.default.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n      if (that.ices === undefined) {\n        that.ices = 0;\n      }\n      that.ices = that.ices + 1;\n      if (that.ices >= 1 && that.moreIceComing) {\n        that.moreIceComing = false;\n        that.markActionNeeded();\n      }\n    } else {\n      that.iceCandidateCount += 1;\n    }\n  };\n\n  that.processSignalingMessage = function (msgstring) {\n    // Offer: Check for glare and resolve.\n    // Answer/OK: Remove retransmit for the msg this is an answer to.\n    // Send back \"OK\" if this was an Answer.\n    //Logger.debug('Activity on conn ' + that.sessionId);\n    var msg = JSON.parse(msgstring),\n        sd;\n    that.incomingMessage = msg;\n\n    if (that.state === 'new') {\n      if (msg.messageType === 'OFFER') {\n        // Initial offer.\n        msg.sdp = setMaxBW(msg.sdp);\n        sd = { sdp: msg.sdp, type: 'offer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function () {\n          _Logger2.default.debug(\"setRemoteDescription succeeded\");\n        }, function (error) {\n          _Logger2.default.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n        that.state = 'offer-received';\n        // Allow other stuff to happen, then reply.\n        that.markActionNeeded();\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    } else if (that.state === 'offer-sent') {\n      if (msg.messageType === 'ANSWER') {\n        msg.sdp = setMaxBW(msg.sdp);\n        msg.sdp = msg.sdp.replace(/ generation 0/g, \"\");\n        msg.sdp = msg.sdp.replace(/ udp /g, \" UDP \");\n        msg.sdp = msg.sdp.replace(/a=group:BUNDLE audio video/, \"a=group:BUNDLE sdparta_0 sdparta_1\");\n        msg.sdp = msg.sdp.replace(/a=mid:audio/, \"a=mid:sdparta_0\");\n        msg.sdp = msg.sdp.replace(/a=mid:video/, \"a=mid:sdparta_1\");\n\n        sd = { sdp: msg.sdp, type: 'answer' };\n        //Logger.debug(\"Received ANSWER: \", sd.sdp);\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function () {\n          _Logger2.default.debug(\"setRemoteDescription succeeded\");\n        }, function (error) {\n          _Logger2.default.info(\"setRemoteDescription failed: \" + error);\n        });\n        that.sendOK();\n        that.state = 'established';\n      } else if (msg.messageType === 'pr-answer') {\n        sd = { sdp: msg.sdp, type: 'pr-answer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function () {\n          _Logger2.default.debug(\"setRemoteDescription succeeded\");\n        }, function (error) {\n          _Logger2.default.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n        // No change to state, and no response.\n      } else if (msg.messageType === 'offer') {\n        // Glare processing.\n        that.error('Not written yet');\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    } else if (that.state === 'established') {\n      if (msg.messageType === 'OFFER') {\n        // Subsequent offer.\n        sd = { sdp: msg.sdp, type: 'offer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function () {\n          _Logger2.default.debug(\"setRemoteDescription succeeded\");\n        }, function (error) {\n          _Logger2.default.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n        that.state = 'offer-received';\n        // Allow other stuff to happen, then reply.\n        that.markActionNeeded();\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    }\n  };\n\n  var outbound_rtp_audio = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"opus\",\n    googCodecName: \"opus\",\n    aecDivergentFilterFraction: \"0\",\n    audioInputLevel: \"0\",\n    bytesSent: \"0\",\n    packetsSent: \"0\",\n    googEchoCancellationReturnLoss: \"0\",\n    googEchoCancellationReturnLossEnhancement: \"0\"\n  };\n\n  var outbound_rtp_video = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    googCodecName: spec.codec === \"h264\" ? \"H264\" : \"VP8\",\n    bytesSent: \"0\",\n    packetsLost: \"0\",\n    packetsSent: \"0\",\n    googAdaptationChanges: \"0\",\n    googAvgEncodeMs: \"0\",\n    googEncodeUsagePercent: \"0\",\n    googFirsReceived: \"0\",\n    googFrameHeightSent: \"0\",\n    googFrameHeightInput: \"0\",\n    googFrameRateInput: \"0\",\n    googFrameRateSent: \"0\",\n    googFrameWidthSent: \"0\",\n    googFrameWidthInput: \"0\",\n    googNacksReceived: \"0\",\n    googPlisReceived: \"0\",\n    googRtt: \"0\"\n  };\n\n  var inbound_rtp_audio = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    audioOutputLevel: \"0\",\n    bytesReceived: \"0\",\n    packetsLost: \"0\",\n    packetsReceived: \"0\",\n    googAccelerateRate: \"0\",\n    googCurrentDelayMs: \"0\",\n    googDecodingCNG: \"0\",\n    googDecodingCTN: \"0\",\n    googDecodingCTSG: \"0\",\n    googDecodingNormal: \"0\",\n    googDecodingPLC: \"0\",\n    googDecodingPLCCNG: \"0\",\n    googExpandRate: \"0\",\n    googJitterBufferMs: \"0\",\n    googJitterReceived: \"0\",\n    googPreemptiveExpandRate: \"0\",\n    googPreferredJitterBufferMs: \"0\",\n    googSecondaryDecodedRate: \"0\",\n    googSpeechExpandRate: \"0\"\n  };\n\n  var inbound_rtp_video = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    googTargetDelayMs: \"0\",\n    packetsLost: \"0\",\n    googDecodeMs: \"0\",\n    googMaxDecodeMs: \"0\",\n    googRenderDelayMs: \"0\",\n    googFrameWidthReceived: \"0\",\n    googFrameHeightReceived: \"0\",\n    googFrameRateReceived: \"0\",\n    googFrameRateDecoded: \"0\",\n    googFrameRateOutput: \"0\",\n    googJitterBufferMs: \"0\",\n    googCurrentDelayMs: \"0\",\n    googMinPlayoutDelayMs: \"0\",\n    googNacksSent: \"0\",\n    googPlisSent: \"0\",\n    googFirsSent: \"0\",\n    bytesReceived: \"0\",\n    packetsReceived: \"0\",\n    googFramesDecoded: \"0\"\n  };\n\n  var lastFramesDecoded = 0;\n\n  that.getStatsRate = function (callback) {\n    that.getStats(function (stats) {\n      stats.forEach(function (report) {\n        if (report.type === 'inboundrtp' && report.mediaType === 'video') {\n          if (report.googFrameRateDecoded) {\n            report.googFrameRateDecoded = ((report.googFramesDecoded - lastFramesDecoded) / 3).toString();\n            lastFramesDecoded = report.googFramesDecoded;\n          }\n        }\n      });\n      callback(stats);\n    });\n  };\n\n  that.getStats = function (callback) {\n    that.peerConnection.getStats().then(function (stats) {\n      var originList = [];\n      Object.keys(stats).forEach(function (stat) {\n        var report = stats[stat];\n        originList.push(report);\n        if (report.type === 'outboundrtp' && report.mediaType === 'video') {\n          outbound_rtp_video.id = report.id;\n          outbound_rtp_video.type = report.type;\n          outbound_rtp_video.mediaType = report.mediaType;\n          outbound_rtp_video.bytesSent = report.bytesSent.toString();\n          outbound_rtp_video.packetsSent = report.packetsSent.toString();\n          outbound_rtp_video.googPlisReceived = report.pliCount.toString();\n          outbound_rtp_video.googNacksReceived = report.nackCount.toString();\n          outbound_rtp_video.googFirsReceived = report.firCount.toString();\n          outbound_rtp_video.googFrameRateSent = report.framerateMean.toString();\n        }\n        if (report.type === 'outboundrtp' && report.mediaType === 'audio') {\n          outbound_rtp_audio.id = report.id;\n          outbound_rtp_audio.type = report.type;\n          outbound_rtp_audio.mediaType = report.mediaType;\n          outbound_rtp_audio.bytesSent = report.bytesSent.toString();\n          outbound_rtp_audio.packetsSent = report.packetsSent.toString();\n        }\n        if (report.type === 'inboundrtp' && report.mediaType === 'audio' && !report.isRemote) {\n          inbound_rtp_audio.id = report.id;\n          inbound_rtp_audio.type = report.type;\n          inbound_rtp_audio.mediaType = report.mediaType;\n          inbound_rtp_audio.bytesReceived = report.bytesReceived.toString();\n          inbound_rtp_audio.packetsLost = report.packetsLost.toString();\n          inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n          inbound_rtp_audio.googJitterReceived = report.jitter.toString();\n        }\n        if (report.type === 'inboundrtp' && report.mediaType === 'video' && !report.isRemote) {\n          inbound_rtp_video.id = report.id;\n          inbound_rtp_video.type = report.type;\n          inbound_rtp_video.mediaType = report.mediaType;\n          inbound_rtp_video.bytesReceived = report.bytesReceived.toString();\n          inbound_rtp_video.googFrameRateReceived = report.framerateMean.toString();\n          inbound_rtp_video.googFramesDecoded = report.framesDecoded.toString();\n          inbound_rtp_video.packetsLost = report.packetsLost.toString();\n          inbound_rtp_video.packetsReceived = report.packetsReceived.toString();\n          inbound_rtp_video.googJitterBufferMs = report.jitter.toString();\n          inbound_rtp_video.googNacksSent = report.nackCount.toString();\n          inbound_rtp_video.googPlisSent = report.pliCount.toString();\n          inbound_rtp_video.googFirsSent = report.firCount.toString();\n        }\n        if (report.id.indexOf('outbound_rtcp_video') !== -1) {\n          outbound_rtp_video.packetsLost = report.packetsLost.toString();\n        }\n      });\n      var filterList = [outbound_rtp_video, outbound_rtp_audio, inbound_rtp_audio, inbound_rtp_video];\n      filterList.push({\n        id: \"time\",\n        startTime: that.connectedTime,\n        timestamp: new Date()\n      });\n      callback(filterList, originList);\n    }, function (error) {\n      _Logger2.default.error(error);\n    });\n  };\n\n  that.addStream = function (stream) {\n    hasStream = true;\n    that.peerConnection.addStream(stream);\n    that.markActionNeeded();\n  };\n\n  that.removeStream = function () {\n    that.markActionNeeded();\n  };\n\n  that.close = function () {\n    that.state = 'closed';\n    that.peerConnection.close();\n  };\n\n  that.markActionNeeded = function () {\n    that.actionNeeded = true;\n    that.doLater(function () {\n      that.onstablestate();\n    });\n  };\n\n  that.doLater = function (what) {\n    // Post an event to myself so that I get called a while later.\n    // (needs more JS/DOM info. Just call the processing function on a delay\n    // for now.)\n    window.setTimeout(what, 1);\n  };\n\n  /**\n   * Internal function called when a stable state\n   * is entered by the browser (to allow for multiple AddStream calls or\n   * other interesting actions).\n   * This function will generate an offer or answer, as needed, and send\n   * to the remote party using our onsignalingmessage function.\n   */\n  that.onstablestate = function () {\n    if (that.actionNeeded) {\n      if (that.state === 'new' || that.state === 'established') {\n        var onSuccess = function onSuccess() {\n          that.peerConnection.createOffer(function (sessionDescription) {\n            sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n            sessionDescription.sdp = sessionDescription.sdp.replace(/a=extmap:1 http:\\/\\/www.webrtc.org\\/experiments\\/rtp-hdrext\\/abs-send-time/, \"a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\");\n            var newOffer = sessionDescription.sdp;\n            if (newOffer !== that.prevOffer) {\n              that.peerConnection.setLocalDescription(sessionDescription);\n\n              that.state = 'preparing-offer';\n              that.markActionNeeded();\n              return;\n            } else {\n              _Logger2.default.debug('Not sending a new offer');\n            }\n          }, function (error) {\n            _Logger2.default.debug(\"Ups! create offer failed \", error);\n          }, that.mediaConstraints);\n        };\n\n        if (hasStream) {\n          that.mediaConstraints = undefined;\n        }\n\n        onSuccess();\n      } else if (that.state === 'preparing-offer') {\n        // Don't do anything until we have the ICE candidates.\n        if (that.moreIceComing) {\n          return;\n        }\n\n        // Now able to send the offer we've already prepared.\n        that.prevOffer = that.peerConnection.localDescription.sdp;\n        //Logger.debug(\"Sending OFFER: \", that.prevOffer);\n        that.sendMessage('OFFER', that.prevOffer);\n        // Not done: Retransmission on non-response.\n        that.state = 'offer-sent';\n      } else if (that.state === 'offer-received') {\n        that.peerConnection.createAnswer(function (sessionDescription) {\n          that.peerConnection.setLocalDescription(sessionDescription);\n          that.state = 'offer-received-preparing-answer';\n\n          if (!that.iceStarted) {\n            var now = new Date();\n            _Logger2.default.debug(now.getTime() + ': Starting ICE in responder');\n            that.iceStarted = true;\n          } else {\n            that.markActionNeeded();\n            return;\n          }\n        }, function () {\n          _Logger2.default.debug(\"Ups! Something went wrong\");\n        });\n      } else if (that.state === 'offer-received-preparing-answer') {\n        if (that.moreIceComing) {\n          return;\n        }\n\n        var mySDP = that.peerConnection.localDescription.sdp;\n        that.sendMessage('ANSWER', mySDP);\n        that.state = 'established';\n      } else {\n        that.error('Dazed and confused in state ' + that.state + ', stopping here');\n      }\n      that.actionNeeded = false;\n    }\n  };\n\n  that.sendOK = function () {\n    that.sendMessage('OK');\n  };\n\n  /**\n   * Internal function to send a signalling message.\n   * @param {string} operation What operation to signal.\n   * @param {string} sdp SDP message body.\n   */\n  that.sendMessage = function (operation, sdp) {\n    var roapMessage = {};\n    roapMessage.messageType = operation;\n    roapMessage.sdp = sdp; // may be null or undefined\n    if (operation === 'OFFER') {\n      roapMessage.offererSessionId = that.sessionId;\n      roapMessage.answererSessionId = that.otherSessionId; // may be null\n      roapMessage.seq = that.sequenceNumber += 1;\n      // The tiebreaker needs to be neither 0 nor 429496725.\n      roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n    } else {\n      roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n      roapMessage.answererSessionId = that.sessionId;\n      roapMessage.seq = that.incomingMessage.seq;\n    }\n    that.onsignalingmessage(JSON.stringify(roapMessage));\n  };\n\n  that.error = function (text) {\n    throw 'Error in RoapOnJsep: ' + text;\n  };\n\n  that.sessionId = that.roapSessionId += 1;\n  that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n  that.actionNeeded = false;\n  that.iceStarted = false;\n  that.moreIceComing = true;\n  that.iceCandidateCount = 0;\n  that.onsignalingmessage = spec.callback;\n\n  that.peerConnection.ontrack = function (stream) {\n    if (that.onaddstream) {\n      that.onaddstream(stream, \"ontrack\");\n    }\n  };\n\n  that.peerConnection.onremovestream = function (stream) {\n    if (that.onremovestream) {\n      that.onremovestream(stream);\n    }\n  };\n\n  that.peerConnection.oniceconnectionstatechange = function (e) {\n    if (e.currentTarget.iceConnectionState === \"connected\") {\n      that.connectedTime = new Date();\n    }\n\n    if (that.oniceconnectionstatechange) {\n      that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n    }\n  };\n\n  var setMaxBW = function setMaxBW(sdp) {\n    if (spec.video && spec.maxVideoBW) {\n      var a = sdp.match(/m=video.*\\r\\n/);\n      if (a == null) {\n        a = sdp.match(/m=video.*\\n/);\n      }\n      if (a && a.length > 0) {\n        var r = a[0] + \"b=TIAS:\" + spec.maxVideoBW * 1000 + \"\\r\\n\";\n        sdp = sdp.replace(a[0], r);\n      }\n    }\n\n    if (spec.audio && spec.maxAudioBW) {\n      var a = sdp.match(/m=audio.*\\r\\n/);\n      if (a == null) {\n        a = sdp.match(/m=audio.*\\n/);\n      }\n      if (a && a.length > 0) {\n        var r = a[0] + \"b=TIAS:\" + spec.maxAudioBW * 1000 + \"\\r\\n\";\n        sdp = sdp.replace(a[0], r);\n      }\n    }\n\n    return sdp;\n  };\n\n  that.onaddstream = null;\n  that.onremovestream = null;\n  that.state = 'new';\n  // Auto-fire next events.\n  that.markActionNeeded();\n  return that;\n};\n\nexports.default = FirefoxStack;\n\n/***/ }),\n/* 26 */,\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar publishStatsFilter = function publishStatsFilter(stats) {\n  var detection = {\n    audioSendBytes: \"0\",\n    audioSendPackets: \"0\",\n\n    videoSendBytes: \"0\",\n    videoSendPackets: \"0\",\n    videoSendPacketsLost: \"0\",\n    videoSendFrameRate: \"0\",\n    videoSendBandwidth: \"0\",\n    videoSendResolutionWidth: \"0\",\n    videoSendResolutionHeight: \"0\",\n\n    audioCodecName: \"\",\n    videoCodecName: \"\",\n\n    timestamp: \"\",\n    startTime: \"\",\n    duration: \"0\"\n  };\n\n  stats.forEach(function (stat) {\n    if (stat.type === \"VideoBwe\") {\n      detection.videoSendBandwidth = stat.googAvailableSendBandwidth;\n    } else if (stat.id.indexOf(\"send\") !== -1 || stat.id.indexOf(\"outbound_rtp\") !== -1 || stat.id.indexOf(\"OutboundRTP\") !== -1) {\n\n      if (stat.mediaType === \"audio\") {\n        detection.audioSendBytes = stat.bytesSent;\n        detection.audioSendPackets = stat.packetsSent;\n        detection.audioCodecName = stat.googCodecName;\n      } else {\n        detection.videoSendBytes = stat.bytesSent;\n        detection.videoSendPackets = stat.packetsSent;\n        detection.videoSendPacketsLost = stat.packetsLost;\n        detection.videoSendFrameRate = stat.googFrameRateSent;\n        detection.videoSendResolutionWidth = stat.googFrameWidthSent;\n        detection.videoSendResolutionHeight = stat.googFrameHeightSent;\n        detection.videoCodecName = stat.googCodecName;\n      }\n    } else if (stat.id === \"time\") {\n      detection.timestamp = stat.timestamp;\n      detection.startTime = stat.startTime;\n    }\n  });\n\n  if (detection.timestamp instanceof Date && detection.startTime instanceof Date) {\n    detection.duration = Math.floor((detection.timestamp.getTime() - detection.startTime.getTime()) / 1000) + \"\";\n  }\n\n  return detection;\n};\n\nvar subscribeStatsFilter = function subscribeStatsFilter(stats) {\n  var detection = {\n    audioReceiveBytes: \"0\",\n    audioReceivePackets: \"0\",\n    audioReceivePacketsLost: \"0\",\n\n    videoReceiveBytes: \"0\",\n    videoReceivePackets: \"0\",\n    videoReceivePacketsLost: \"0\",\n    videoReceiveFrameRate: \"0\",\n    videoReceiveDecodeFrameRate: \"0\",\n    videoReceiveBandwidth: \"0\",\n    videoReceivedResolutionWidth: \"0\",\n    videoReceivedResolutionHeight: \"0\",\n\n    timestamp: \"\",\n    startTime: \"\",\n    duration: \"0\"\n  };\n\n  stats.forEach(function (stat) {\n    if (stat.type === \"VideoBwe\") {\n      detection.videoReceiveBandwidth = stat.googAvailableReceiveBandwidth;\n    } else if (stat.id.indexOf(\"recv\") !== -1 || stat.id.indexOf(\"inbound_rtp\") !== -1 || stat.id.indexOf(\"InboundRTP\") !== -1) {\n\n      if (stat.mediaType === \"audio\") {\n        detection.audioReceiveBytes = stat.bytesReceived;\n        detection.audioReceivePackets = stat.packetsReceived;\n        detection.audioReceivePacketsLost = stat.packetsLost;\n      } else {\n        detection.videoReceiveBytes = stat.bytesReceived;\n        detection.videoReceivePacketsLost = stat.packetsLost;\n        detection.videoReceivePackets = stat.packetsReceived;\n        detection.videoReceiveFrameRate = stat.googFrameRateReceived;\n        detection.videoReceiveDecodeFrameRate = stat.googFrameRateDecoded;\n        detection.videoReceivedResolutionWidth = stat.googFrameWidthReceived;\n        detection.videoReceivedResolutionHeight = stat.googFrameHeightReceived;\n      }\n    } else if (stat.id === \"time\") {\n      detection.timestamp = stat.timestamp;\n      detection.startTime = stat.startTime;\n    }\n  });\n  if (detection.timestamp instanceof Date && detection.startTime instanceof Date) {\n    detection.duration = Math.floor((detection.timestamp.getTime() - detection.startTime.getTime()) / 1000) + \"\";\n  }\n\n  return detection;\n};\n\nexports.publishStatsFilter = publishStatsFilter;\nexports.subscribeStatsFilter = subscribeStatsFilter;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LiveTranscoding = exports.TranscodingUser = exports.VIDEO_CODEC_PROFILE_HIGH = exports.VIDEO_CODEC_PROFILE_MAIN = exports.VIDEO_CODEC_PROFILE_BASELINE = exports.AUDIO_SAMPLE_RATE_48000 = exports.AUDIO_SAMPLE_RATE_44100 = exports.AUDIO_SAMPLE_RATE_32000 = exports.createLiveClient = exports.createRtcClient = exports.createClient = undefined;\n\nvar _GatewayClient = __webpack_require__(29);\n\nvar _GatewayClient2 = _interopRequireDefault(_GatewayClient);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ErrorCodes = __webpack_require__(8);\n\nvar _ErrorCodes2 = _interopRequireDefault(_ErrorCodes);\n\nvar _Helper = __webpack_require__(1);\n\nvar _Server = __webpack_require__(13);\n\nvar _Report = __webpack_require__(6);\n\nvar _Browser = __webpack_require__(3);\n\nvar _SimMap = __webpack_require__(32);\n\nvar _Stream = __webpack_require__(7);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PUBLISHED = 0;\nvar PUBLISHING = 1;\nvar UNPUBLISHED = 2;\n\nvar Client = function Client(spec) {\n  \"use strict\";\n\n  var that = {};\n  that.key = undefined;\n\n  that.highStream = null;\n  that.lowStream = null;\n  that.isDualStream = false;\n  that.highStreamState = UNPUBLISHED;\n  that.lowStreamState = UNPUBLISHED;\n\n  that._getVideoCameraIdByLabel = function (label, onSuccess, onFailure) {\n    (0, _Stream.getDevices)(function (devices) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = devices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var device = _step.value;\n\n          if (device.label === label && device.kind === 'videoinput') {\n            return onSuccess(device.deviceId);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return onFailure();\n    }, onFailure);\n  };\n\n  that.init = function (appId, onSuccess, onFailure) {\n    _Logger2.default.info(\"Initializing AgoraRTC client\");\n    spec.appId = appId;\n    spec.sessionId = (0, _Helper.generateSessionId)();\n    onSuccess();\n  };\n\n  that.configPublisher = function (config) {\n    that.gatewayClient.configPublisher(config);\n  };\n\n  that.enableDualStream = function (onSuccess, onFailure) {\n    if ((0, _Browser.getBrowserOS)() === \"iOS\") {\n      _Report.report.streamSwitch(spec.sessionId, {\n        lts: new Date().getTime(),\n        isdual: true,\n        succ: false\n      });\n      return onFailure && onFailure(_ErrorCodes2.default.IOS_NOT_SUPPORT);\n    }\n\n    _Report.report.streamSwitch(spec.sessionId, {\n      lts: new Date().getTime(),\n      isdual: true,\n      succ: true\n    });\n\n    that.isDualStream = true;\n    if (that.highStreamState === PUBLISHED) {\n      that._publishLowStream(onSuccess, onFailure);\n    } else if (that.highStreamState === PUBLISHING) {\n      onFailure && onFailure(_ErrorCodes2.default.STILL_ON_PUBLISHING);\n    } else {\n      onSuccess && onSuccess();\n    }\n  };\n\n  that.disableDualStream = function (onSuccess, onFailure) {\n    _Report.report.streamSwitch(spec.sessionId, {\n      lts: new Date().getTime(),\n      isdual: false,\n      succ: true\n    });\n\n    that.isDualStream = false;\n    if (that.highStreamState === PUBLISHED) {\n      that._unpublishLowStream(onSuccess, onFailure);\n    } else if (that.highStreamState === PUBLISHING) {\n      onFailure && onFailure(_ErrorCodes2.default.STILL_ON_PUBLISHING);\n    } else {\n      onSuccess && onSuccess();\n    }\n  };\n\n  that._createLowStream = function (onSuccess, onFailure) {\n    if (!that.highStream || !that.highStream.stream) {\n      return _Logger2.default.warning(\"Can't create low-stream without highStream\");\n    }\n\n    var spec = Object.assign({}, that.highStream.params);\n    spec.streamID += 1;\n    spec.audio = false;\n\n    if (!spec.video) {\n      return;\n    }\n\n    var videoTrack = that.highStream.stream.getVideoTracks()[0];\n    if (!videoTrack) {\n      onFailure('can not get hight-stream video track');\n    }\n\n    that._getVideoCameraIdByLabel(videoTrack.label, function (deviceId) {\n      spec.cameraId = deviceId;\n      var lowStream = new _Stream.Stream(spec);\n\n      lowStream.setVideoProfileCustom((0, _SimMap.simMap)(that.highStream.profile));\n      lowStream.init(function () {\n        that.highStream.lowStream = lowStream;\n        if (!videoTrack.enabled) {\n          lowStream.disableVideo();\n        }\n        onSuccess && onSuccess(lowStream);\n      }, function () {\n        return onFailure('can not get hight-stream video track');\n      });\n    });\n  };\n\n  that._getLowStream = function (onSuccess, onFailure) {\n    if (that.lowStream) {\n      onSuccess(that.lowStream);\n    } else {\n      that._createLowStream(function (lowStream) {\n        that.lowStream = lowStream;\n        onSuccess(that.lowStream);\n      }, onFailure);\n    }\n  };\n\n  that._publishLowStream = function (onSuccess, onFailure) {\n    if (that.lowStreamState !== UNPUBLISHED) {\n      _Logger2.default.warning(\"Can't publish low-stream when low-stream already publish\");\n      return onFailure && onFailure();\n    }\n\n    if (that.highStream && that.highStream.hasScreen()) {\n      return onFailure && onFailure(_ErrorCodes2.default.SHARING_SCREEN_NOT_SUPPORT);\n    }\n\n    that._getLowStream(function (lowStream) {\n      that.lowStreamState = PUBLISHING;\n      that.gatewayClient.publish(lowStream, function () {\n        that.lowStreamState = PUBLISHED;\n        onSuccess && onSuccess();\n      }, function (e) {\n        _Logger2.default.debug(\"publish low stream failed\");\n        onFailure && onFailure(e);\n      });\n    }, onFailure);\n  };\n\n  that._unpublishLowStream = function (onSuccess, onFailure) {\n    if (that.lowStreamState !== PUBLISHED) {\n      _Logger2.default.warning(\"Can't unpublish low-stream when low-stream not ever publish\");\n      return onFailure && onFailure();\n    }\n\n    if (that.lowStream) {\n      that.lowStreamState = PUBLISHING;\n      that.gatewayClient.unpublish(that.lowStream, function () {\n        that.lowStream.close();\n        that.lowStream = null;\n        that.lowStreamState = UNPUBLISHED;\n        onSuccess && onSuccess();\n      }, function (e) {\n        _Logger2.default.debug(\"unpublish low stream failed\");\n        onFailure && onFailure(e);\n      });\n    }\n  };\n\n  that.join = function (channelKey, channel, uid, onSuccess, onFailure) {\n    that.highStream = null;\n    that.lowStream = null;\n    that.isDualStream = false;\n    that.highStreamState = UNPUBLISHED;\n    that.lowStreamState = UNPUBLISHED;\n\n    var joinInfo = {\n      appId: spec.appId,\n      sid: spec.sessionId,\n      cname: channel,\n      uid: uid\n\n      // sessionInit event report\n    };_Report.report.sessionInit(spec.sessionId, {\n      lts: new Date().getTime(),\n      cname: channel,\n      appid: spec.appId,\n      mode: spec.mode,\n      succ: true\n    });\n\n    (0, _Server.getGatewayList)(joinInfo, function (res) {\n      _Logger2.default.info(\"Joining channel: \" + channel);\n\n      // TODO delete if useless\n      if (channelKey) {\n        that.key = channelKey;\n      } else {\n        that.key = spec.appId;\n      }\n\n      joinInfo.cid = res.cid;\n      joinInfo.uid = res.uid;\n      joinInfo.gatewayAddr = res.gateway_addr;\n\n      that.gatewayClient.join(joinInfo, that.key, function (uid) {\n        _Logger2.default.info(\"Join channal \" + channel + \" success\");\n        onSuccess(uid);\n      }, onFailure);\n    }, onFailure);\n  };\n\n  that.renewChannelKey = function (channelKey, onSuccess, onFailure) {\n    if (that.key === undefined) {\n      (0, _Helper.safeCall)(onFailure, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"renewChannelKey should not be called before user join\");\n    }\n    that.key = channelKey;\n    (0, _Helper.safeCall)(onSuccess);\n  };\n\n  that.leave = function (onSuccess, onFailure) {\n    _Logger2.default.info(\"Leaving channel\");\n    that.gatewayClient.leave(onSuccess, onFailure);\n  };\n\n  that.publish = function (stream, onFailure) {\n    if (that.highStreamState !== UNPUBLISHED) {\n      _Logger2.default.warning(\"Can't publish stream when stream already publish\", stream.getId());\n      return onFailure && onFailure(\"stream already publish\");\n    }\n\n    _Logger2.default.info(\"Publishing stream, uid: \", stream.getId());\n    that.highStream = stream;\n    that.highStreamState = PUBLISHING;\n\n    that.gatewayClient.publish(stream, function () {\n      stream.sid = spec.sessionId;\n      that.highStreamState = PUBLISHED;\n      _Logger2.default.info(\"Publish success, uid:\", stream.getId());\n      if (that.isDualStream) {\n        that._publishLowStream(null, onFailure);\n      }\n    }, onFailure);\n  };\n\n  that.unpublish = function (stream, onFailure) {\n    if (that.highStreamState !== PUBLISHED) {\n      _Logger2.default.warning(\"Can't unpublish stream when stream not publish\");\n      return onFailure && onFailure(\"stream not publish\");\n    }\n\n    _Logger2.default.info(\"Unpublish stream, uid: \", stream.getId());\n\n    if (that.isDualStream && that.lowStream) {\n      that._unpublishLowStream(function () {\n        that.highStreamState = PUBLISHING;\n        that.gatewayClient.unpublish(stream, function () {\n          that.highStreamState = UNPUBLISHED;\n          _Logger2.default.info(\"Unpublish stream success, uid:\", stream.getId());\n        }, onFailure);\n      }, onFailure);\n    } else {\n      that.highStreamState = PUBLISHING;\n      that.gatewayClient.unpublish(stream, function () {\n        that.highStreamState = UNPUBLISHED;\n        _Logger2.default.info(\"Unpublish stream success, uid:\", stream.getId());\n      }, onFailure);\n    }\n  };\n\n  that.subscribe = function (stream, onFailure) {\n    _Logger2.default.info(\"Subscribe stream, uid: \", stream.getId());\n    that.gatewayClient.subscribe(stream, onFailure);\n  };\n\n  that.unsubscribe = function (stream, onFailure) {\n    _Logger2.default.info(\"Unsubscribe stream, uid: \", stream.getId());\n    that.gatewayClient.unsubscribe(stream, onFailure);\n  };\n\n  that.setRemoteVideoStreamType = function (stream, streamType) {\n    that.gatewayClient.setRemoteVideoStreamType(stream, streamType);\n  };\n\n  that.startLiveStreaming = function (url, transcodingEnabled) {\n    that.gatewayClient.startLiveStreaming(url, transcodingEnabled);\n  };\n\n  that.stopLiveStreaming = function (url) {\n    that.gatewayClient.stopLiveStreaming(url);\n  };\n\n  that.setLiveTranscoding = function (transcoding) {\n    Object.assign(LiveTranscoding, transcoding);\n    that.gatewayClient.setLiveTranscoding(LiveTranscoding);\n  };\n\n  that.gatewayClient = (0, _GatewayClient2.default)(spec);\n  that.on = that.gatewayClient.on;\n\n  that.on(\"rejoin\", function () {\n    // won't republish if preState = UNPUBLISHED, and PUBLISHING as PUBLISHED;\n    var preState = that.highStreamState === UNPUBLISHED ? UNPUBLISHED : PUBLISHED;\n\n    if (that.highStream && preState === PUBLISHED) {\n      _Logger2.default.info(\"publish after rejoin\");\n      that.highStreamState = UNPUBLISHED;\n      that.lowStreamState = UNPUBLISHED;\n\n      that.publish(that.highStream, function (e) {\n        e && _Logger2.default.info(e);\n      });\n    }\n  });\n\n  return that;\n};\n\n// AUDIO_SAMPLE_RATE_TYPE\nvar AUDIO_SAMPLE_RATE_32000 = 32000;\nvar AUDIO_SAMPLE_RATE_44100 = 44100;\nvar AUDIO_SAMPLE_RATE_48000 = 48000;\n\n// VIDEO_CODEC_PROFILE_TYPE\nvar VIDEO_CODEC_PROFILE_BASELINE = 66;\nvar VIDEO_CODEC_PROFILE_MAIN = 77;\nvar VIDEO_CODEC_PROFILE_HIGH = 100;\n\nvar TranscodingUser = {\n  uid: 0,\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  zOrder: 0,\n  alpha: 1.0\n};\n\nvar LiveTranscoding = {\n  width: 640,\n  height: 360,\n  videoBitrate: 400,\n  videoFramerate: 15,\n  lowLatency: false,\n  audioSampleRate: AUDIO_SAMPLE_RATE_48000,\n  audioBitrate: 48,\n  audioChannels: 1,\n  videoGop: 30,\n  videoCodecProfile: VIDEO_CODEC_PROFILE_HIGH,\n  userCount: 0,\n  userConfigExtraInfo: {},\n  backgroundColor: 0x000000,\n  transcodingUsers: []\n};\n\nvar createClient = function createClient(options) {\n  if (options && options.mode === \"interop\") {\n    _Logger2.default.info(\"Creating client , MODE : Interop\");\n    return Client({ mode: \"live\" });\n  } else if (options && options.mode === \"h264_interop\") {\n    _Logger2.default.info(\"Creating client , MODE : h264_interop\");\n    return Client({ mode: \"live\", codec: \"h264\" });\n  }\n  _Logger2.default.info(\"Creating client , MODE : web-only\");\n  return Client({ mode: \"rtc\" });\n};\n\nvar createRtcClient = function createRtcClient() {\n  _Logger2.default.info(\"Creating client , MODE : rtc\");\n  _Logger2.default.warning(\"createRtcClient is deprecated.\");\n  return Client({ mode: \"rtc\" });\n};\n\nvar createLiveClient = function createLiveClient(spec) {\n  var id = \"host\";\n  if (spec && spec.role === \"audience\") {\n    id = spec.role;\n  }\n  _Logger2.default.info(\"Creating client , MODE : live\");\n  _Logger2.default.warning(\"createLiveClient is deprecated.\");\n  return Client({ mode: \"live\", role: id });\n};\n\nexports.createClient = createClient;\nexports.createRtcClient = createRtcClient;\nexports.createLiveClient = createLiveClient;\nexports.AUDIO_SAMPLE_RATE_32000 = AUDIO_SAMPLE_RATE_32000;\nexports.AUDIO_SAMPLE_RATE_44100 = AUDIO_SAMPLE_RATE_44100;\nexports.AUDIO_SAMPLE_RATE_48000 = AUDIO_SAMPLE_RATE_48000;\nexports.VIDEO_CODEC_PROFILE_BASELINE = VIDEO_CODEC_PROFILE_BASELINE;\nexports.VIDEO_CODEC_PROFILE_MAIN = VIDEO_CODEC_PROFILE_MAIN;\nexports.VIDEO_CODEC_PROFILE_HIGH = VIDEO_CODEC_PROFILE_HIGH;\nexports.TranscodingUser = TranscodingUser;\nexports.LiveTranscoding = LiveTranscoding;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _Stream = __webpack_require__(7);\n\nvar _Websocket = __webpack_require__(30);\n\nvar _Websocket2 = _interopRequireDefault(_Websocket);\n\nvar _Connection = __webpack_require__(10);\n\nvar _Events = __webpack_require__(2);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _ErrorCodes = __webpack_require__(8);\n\nvar _ErrorCodes2 = _interopRequireDefault(_ErrorCodes);\n\nvar _AgoraCall = __webpack_require__(11);\n\nvar _AgoraCall2 = _interopRequireDefault(_AgoraCall);\n\nvar _Server = __webpack_require__(13);\n\nvar _Config = __webpack_require__(4);\n\nvar _Report = __webpack_require__(6);\n\nvar _Helper = __webpack_require__(1);\n\nvar _Browser = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar GatewayClient = function GatewayClient(spec) {\n  \"use strict\";\n\n  var isBanned = false;\n  var Ping = function Ping() {\n    return { \"_type\": \"ping\" };\n  };\n  var Join = function Join() {\n    var join = {\n      \"key\": that.key,\n      \"channel\": that.joinInfo.cname,\n      \"uid\": that.uid,\n      \"version\": _Config.VERSION,\n      \"browser\": navigator.userAgent,\n      \"mode\": spec.mode,\n      \"role\": spec.role,\n      \"config\": that.config\n    };\n    return { \"_type\": \"join1\", \"message\": join };\n  };\n  var Leave = function Leave() {\n    return { \"_type\": \"leave\" };\n  };\n  var Control = function Control(options) {\n    return { \"_type\": \"control\", \"message\": options };\n  };\n  var Token = function Token(spec) {\n    // \"spec\":{\"mode\":\"live\",\"version\":\"1.12.0\",\"host\":\"webgw-washington-na-1.agora.io:5866\"}\n    return { \"_type\": \"token\", \"message\": spec };\n  };\n  var P2PLost = function P2PLost() {\n    return { \"_type\": \"p2p_lost\", \"message\": null };\n  };\n  var Unpublish = function Unpublish(streamId) {\n    return { \"_type\": \"unpublish\", \"message\": streamId };\n  };\n  var Unsubscribe = function Unsubscribe(streamId) {\n    return { \"_type\": \"unsubscribe\", \"message\": streamId };\n  };\n  var SwitchVideoStream = function SwitchVideoStream(streamId, streamType) {\n    return { \"_type\": \"switchVideoStream\", \"message\": { id: streamId, type: streamType } };\n  };\n  var Publish = function Publish(options, sdp) {\n    return { \"_type\": \"publish\", \"options\": options, \"sdp\": sdp };\n  };\n  var PublishStats = function PublishStats(stats) {\n    return { \"_type\": \"publish_stats\", \"options\": { \"stats\": stats }, \"sdp\": null };\n  };\n  var PublishStatsLow = function PublishStatsLow(stats) {\n    return { \"_type\": \"publish_stats_low\", \"options\": { \"stats\": stats }, \"sdp\": null };\n  };\n  var Subscribe = function Subscribe(options, sdp) {\n    return { \"_type\": \"subscribe\", \"options\": options, \"sdp\": sdp };\n  };\n  var SubscribeStats = function SubscribeStats(streamId, stats) {\n    return { \"_type\": \"subscribe_stats\", \"options\": { id: streamId, stats: stats }, \"sdp\": null };\n  };\n  var StartLiveStreaming = function StartLiveStreaming(url, transcodingEnabled) {\n    return { \"_type\": \"start_live_streaming\", \"message\": { url: url, transcodingEnabled: transcodingEnabled } };\n  };\n  var StopLiveStreaming = function StopLiveStreaming(url) {\n    return { \"_type\": \"stop_live_streaming\", \"message\": { url: url } };\n  };\n  var SetLiveTranscoding = function SetLiveTranscoding(transcoding) {\n    return { \"_type\": \"set_live_transcoding\", \"message\": { transcoding: transcoding } };\n  };\n\n  var DISCONNECTED = 0;\n  var CONNECTING = 1;\n  var CONNECTED = 2;\n\n  var that = (0, _Events.EventDispatcher)(spec);\n  that.socket = undefined;\n  that.state = DISCONNECTED;\n  that.mode = spec.mode;\n  that.role = spec.role;\n  that.codec = spec.codec;\n  that.config = {};\n  that.timers = {};\n  that.timer_counter = {};\n  that.localStreams = {};\n  that.remoteStreams = {};\n  that.attemps = 1;\n  that.p2p_attemps = 1;\n  that.audioLevel = {};\n  that.activeSpeaker = undefined;\n  that.firstFrameTimer = new Map();\n\n  that.liveStreams = new Map();\n\n  var safeCall = _AgoraCall2.default;\n\n  that.remoteVideoStreamTypes = {\n    REMOTE_VIDEO_STREAM_HIGH: 0,\n    REMOTE_VIDEO_STREAM_LOW: 1,\n    REMOTE_VIDEO_STREAM_MEDIUM: 2\n  };\n\n  that.configPublisher = function (config) {\n    that.config = config;\n  };\n\n  that.join = function (joinInfo, channelKey, onSuccess, onFailure) {\n    var lts = new Date().getTime();\n    var uid = joinInfo.uid;\n\n    if (that.state !== DISCONNECTED) {\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_OPERATION);\n      _Report.report.joinGateway(joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: _ErrorCodes2.default.INVALID_OPERATION,\n        addr: null\n      });\n      _Logger2.default.error(\"Server already in connecting/connected state\");\n      return;\n    }\n\n    if (uid !== null && uid !== undefined && parseInt(uid) !== uid) {\n      //user specified uid MUST be integer\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_PARAMETER);\n      _Report.report.joinGateway(joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: _ErrorCodes2.default.INVALID_PARAMETER,\n        addr: null\n      });\n      _Logger2.default.error(\"Input uid is invalid\");\n      return;\n    }\n\n    that.joinInfo = joinInfo;\n    that.uid = uid;\n    that.key = channelKey;\n    // Connect to VosGateway\n    that.state = CONNECTING;\n    connectSocket(joinInfo, function (response) {\n      that.stunServerUrl = response.stunServerUrl;\n      that.turnServer = response.turnServer;\n      that.state = CONNECTED;\n      _Logger2.default.debug(\"Connected to gateway server\");\n\n      that.pingTimer = setInterval(function () {\n        sendMessage(Ping(), function () {}, function (e) {});\n      }, 3000);\n\n      sendMessage(Join(), function (message) {\n        _Report.report.joinGateway(joinInfo.sid, {\n          lts: lts,\n          succ: true,\n          ec: null,\n          vid: message.vid,\n          addr: that.socket.getURL()\n        });\n        onSuccess(that.uid);\n      }, function (err) {\n        _Logger2.default.error(\"User join failed [\" + err + \"]\");\n        if (err === _ErrorCodes2.default.ERR_INVALID_VENDOR_KEY) {\n          err = _ErrorCodes2.default.INVALID_KEY;\n        } else if (err === _ErrorCodes2.default.ERR_INVALID_DYNAMIC_KEY) {\n          err = _ErrorCodes2.default.INVALID_DYNAMIC_KEY;\n        } else if (err === _ErrorCodes2.default.ERR_DYNAMIC_KEY_TIMEOUT) {\n          err = _ErrorCodes2.default.DYNAMIC_KEY_TIMEOUT;\n        } else if (err === _ErrorCodes2.default.ERR_NO_VOCS_AVAILABLE) {\n          err = _ErrorCodes2.default.NO_VOCS_AVAILABLE;\n        } else if (err === _ErrorCodes2.default.ERR_NO_VOS_AVAILABLE) {\n          err = _ErrorCodes2.default.NO_VOS_AVAILABLE;\n        } else if (err === _ErrorCodes2.default.ERR_JOIN_CHANNEL_TIMEOUT) {\n          err = _ErrorCodes2.default.JOIN_CHANNEL_TIMEOUT;\n        } else if (err === _ErrorCodes2.default.ERR_FAILED) {\n          err = _ErrorCodes2.default.FAILED;\n        } else if (err === _ErrorCodes2.default.WARN_NO_AVAILABLE_CHANNEL) {\n          err = _ErrorCodes2.default.NO_AVAILABLE_CHANNEL;\n        } else if (err === _ErrorCodes2.default.WARN_LOOKUP_CHANNEL_TIMEOUT) {\n          err = _ErrorCodes2.default.LOOKUP_CHANNEL_TIMEOUT;\n        } else if (err === _ErrorCodes2.default.WARN_LOOKUP_CHANNEL_REJECTED) {\n          err = _ErrorCodes2.default.LOOKUP_CHANNEL_REJECTED;\n        } else if (err === _ErrorCodes2.default.WARN_OPEN_CHANNEL_TIMEOUT) {\n          err = _ErrorCodes2.default.OPEN_CHANNEL_TIMEOUT;\n        } else if (err === _ErrorCodes2.default.WARN_OPEN_CHANNEL_REJECTED) {\n          err = _ErrorCodes2.default.OPEN_CHANNEL_REJECTED;\n        } else if (err === _ErrorCodes2.default.WARN_REQUEST_DEFERRED) {\n          err = _ErrorCodes2.default.REQUEST_DEFERRED;\n        }\n\n        onFailure && onFailure(err);\n        _Report.report.joinGateway(joinInfo.sid, {\n          lts: lts,\n          succ: false,\n          ec: err,\n          addr: that.socket.getURL()\n        });\n      });\n    }, function (error) {\n      error = JSON.stringify(error);\n      _Logger2.default.error(\"User join failed [\" + error + \"]\");\n      onFailure && onFailure(error);\n      _Report.report.joinGateway(joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: error,\n        addr: that.socket.getURL()\n      });\n    });\n  };\n\n  that.leave = function (onSuccess, onFailure) {\n    // Logger.debug(\"Leaving channel ts\", new Date().getTime());\n    if (that.state != CONNECTED) {\n      safeCall(onSuccess);\n      return;\n    }\n\n    clearInterval(that.pingTimer);\n    for (var i in that.timers) {\n      if (that.timers.hasOwnProperty(i)) {\n        clearInterval(that.timers[i]);\n      }\n    }\n\n    sendMessage(Leave(), function (message) {\n      that.socket.close();\n      that.socket = undefined;\n      _Logger2.default.info(\"Leave channal success\");\n      onSuccess && onSuccess(message);\n    }, onFailure);\n\n    // Remove local streams\n    for (var i in that.localStreams) {\n      if (that.localStreams.hasOwnProperty(i)) {\n        var stream = that.localStreams[i];\n        delete that.localStreams[i];\n        if (stream.pc !== undefined) {\n          stream.pc.close();\n          stream.pc = undefined;\n        }\n      }\n    }\n\n    removeRemoteStreams();\n\n    that.state = DISCONNECTED;\n  };\n\n  // It publishes the stream provided as argument.\n  that.publish = function (stream, onSuccess, onFailure) {\n    var lts = new Date().getTime();\n    //TODO rwrite - for the dtls failed can not raise event to report\n    stream.publishLTS = lts;\n\n    if ((typeof stream === \"undefined\" ? \"undefined\" : _typeof(stream)) !== \"object\" || stream === null) {\n      _Logger2.default.error(\"Invalid local stream\");\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_LOCAL_STREAM);\n      _Report.report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: _ErrorCodes2.default.INVALID_LOCAL_STREAM\n      });\n      return;\n    }\n    if (stream.stream === null && stream.url === undefined) {\n      _Logger2.default.error(\"Invalid local media stream\");\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_LOCAL_STREAM);\n      _Report.report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: _ErrorCodes2.default.INVALID_LOCAL_STREAM\n      });\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      _Logger2.default.error(\"User is not in the session\");\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_OPERATION);\n      _Report.report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: _ErrorCodes2.default.INVALID_OPERATION\n      });\n      return;\n    }\n    var options = stream.getAttributes() || {};\n    // If the stream is not local we do nothing\n    if (stream.local && that.localStreams[stream.getId()] === undefined) {\n      // Publish media stream to VoS gateway\n      if (stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) {\n        if (stream.url !== undefined) {\n          // TODO: 暂时忽略，不会走入  --阿毛\n          sendSimpleSdp(Publish({\n            state: \"url\",\n            audio: stream.hasAudio(),\n            video: stream.hasVideo(),\n            attributes: stream.getAttributes(),\n            mode: that.mode\n          }, stream.url), function (answer, id) {\n            if (answer === \"success\") {\n              stream.getUserId = function () {\n                return id;\n              };\n              that.localStreams[id] = stream;\n              stream.onClose = function () {\n                that.unpublish(stream);\n              };\n            } else {\n              _Logger2.default.error(\"Publish local stream failed\", answer);\n            }\n          });\n        } else {\n          // Keep record of the local stream before sending publish message.\n          // We rely on this record to recover when reconnecting.\n          that.localStreams[stream.getId()] = stream;\n          stream.pc = (0, _Connection.Connection)({\n            callback: function callback(offer) {\n              _Logger2.default.debug(\"SDP exchange in publish : send offer --  \", JSON.parse(offer));\n              sendSimpleSdp(Publish({\n                state: \"offer\",\n                id: stream.getId(),\n                audio: stream.hasAudio(),\n                video: stream.hasVideo() || stream.hasScreen(),\n                attributes: stream.getAttributes(),\n                mode: that.mode, codec: that.codec\n              }, offer), function (answer, info) {\n                if (answer === \"error\") {\n                  _Logger2.default.error(\"Publish local stream failed\");\n                  onFailure && onFailure(_ErrorCodes2.default.PUBLISH_STREAM_FAILED);\n                  _Report.report.publish(that.joinInfo.sid, {\n                    lts: lts,\n                    succ: false,\n                    localSDP: offer,\n                    ec: _ErrorCodes2.default.PUBLISH_STREAM_FAILED\n                  });\n                  return;\n                }\n\n                stream.pc.onsignalingmessage = function (ok) {\n                  stream.pc.onsignalingmessage = function () {};\n                  sendSimpleSdp(Publish({\n                    state: \"ok\",\n                    id: stream.getId(),\n                    audio: stream.hasAudio(),\n                    video: stream.hasVideo(),\n                    screen: stream.hasScreen(),\n                    attributes: stream.getAttributes(),\n                    mode: that.mode\n                  }, ok));\n\n                  stream.getUserId = function () {\n                    return info.id;\n                  };\n                  _Logger2.default.info(\"Local stream published with uid\", info.id);\n                  stream.onClose = function () {\n                    that.unpublish(stream);\n                  };\n                  stream.unmuteAudio = function () {\n                    sendMessage(Control({ \"action\": \"audio-out-on\", \"streamId\": stream.getId() }), function () {}, function () {});\n                  };\n                  stream.unmuteVideo = function () {\n                    sendMessage(Control({ \"action\": \"video-out-on\", \"streamId\": stream.getId() }), function () {}, function () {});\n                  };\n                  stream.muteAudio = function () {\n                    sendMessage(Control({ \"action\": \"audio-out-off\", \"streamId\": stream.getId() }), function () {}, function () {});\n                  };\n                  stream.muteVideo = function () {\n                    sendMessage(Control({ \"action\": \"video-out-off\", \"streamId\": stream.getId() }), function () {}, function () {});\n                  };\n                };\n\n                stream.pc.oniceconnectionstatechange = function (state) {\n                  if (state === \"failed\") {\n                    if (that.timers[stream.getId()] != undefined) {\n                      clearInterval(that.timers[stream.getId()]);\n                    }\n                    sendMessage(P2PLost(), function () {}, function () {});\n                    that.socket.disconnect();\n                    _Logger2.default.error(\"Publisher connection is lost\");\n                    onFailure && onFailure(_ErrorCodes2.default.PEERCONNECTION_FAILED);\n                    _Report.report.publish(that.joinInfo.sid, {\n                      lts: lts,\n                      succ: false,\n                      ec: _ErrorCodes2.default.PEERCONNECTION_FAILED\n                    });\n                  } else if (state === \"connected\") {\n                    onSuccess && onSuccess();\n                    // Logger.info(\"Publish success, uid:\", stream.getId());\n                    _Report.report.publish(that.joinInfo.sid, {\n                      lts: lts,\n                      succ: true,\n                      ec: null\n                    });\n                  }\n                };\n\n                _Logger2.default.debug(\"SDP exchange in publish : receive answer --  \", JSON.parse(answer));\n                stream.pc.processSignalingMessage(answer);\n              });\n            }, audio: stream.hasAudio(),\n            video: stream.hasVideo(),\n            screen: stream.hasScreen(),\n            isSubscriber: false,\n            iceServers: [],\n            stunServerUrl: that.stunServerUrl,\n            turnServer: that.turnServer,\n            maxAudioBW: options.maxAudioBW,\n            minVideoBW: options.minVideoBW,\n            maxVideoBW: options.maxVideoBW,\n            mode: that.mode,\n            codec: that.codec\n          });\n\n          stream.pc.addStream(stream.stream);\n          _Logger2.default.debug(\"PeerConnection add stream :\", stream.stream);\n          that.timers[stream.getId()] = setInterval(function () {\n            if (stream && stream.pc && stream.pc.getStats) {\n              stream.pc.getStatsRate(function (stats) {\n                stats.forEach(function (stat) {\n                  // Firefox and Safari get resolution from stream\n                  if ((stat.id.indexOf(\"outbound_rtp\") !== -1 || stat.id.indexOf(\"OutboundRTP\") !== -1) && stat.mediaType === \"video\") {\n                    stat.googFrameWidthSent = stream.videoWidth + '';\n                    stat.googFrameHeightSent = stream.videoHeight + '';\n                  }\n\n                  // stream.getUserId wiil be undefined if pc dtls failed\n                  if (!stream.getUserId) return;\n\n                  if (stream.getId() === stream.getUserId()) {\n                    sendMessage(PublishStats(stat), null, null);\n                  } else {\n                    sendMessage(PublishStatsLow(stat), null, null);\n                  }\n                });\n              });\n            }\n          }, 3000);\n\n          if (stream.aux_stream !== undefined) {\n            stream.pc.addStream(stream.aux_stream);\n            _Logger2.default.debug(\"PeerConnection add stream :\", stream.aux_stream);\n          }\n        }\n      }\n    }\n  };\n\n  // It unpublishes the local stream,\n  // dispatching a StreamEvent(\"stream-removed\")\n  that.unpublish = function (stream, onSuccess, onFailure) {\n    // Logger.debug(\"Start unpublishing local stream\");\n    if ((typeof stream === \"undefined\" ? \"undefined\" : _typeof(stream)) !== \"object\" || stream === null) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_LOCAL_STREAM);\n      _Logger2.default.error(\"Invalid local stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"User not in the session\");\n      return;\n    }\n    if (that.timers[stream.getId()] != undefined) {\n      clearInterval(that.timers[stream.getId()]);\n    }\n    if (that.socket !== undefined) {\n      // Unpublish stream from VoS gateway\n      if (stream.local && that.localStreams[stream.getId()] !== undefined) {\n        delete that.localStreams[stream.getId()];\n        sendMessage(Unpublish(stream.getUserId()), function (answer) {\n          if (answer === \"error\") {\n            safeCall(onFailure, _ErrorCodes2.default.UNPUBLISH_STREAM_FAILED);\n            _Logger2.default.error(\"Unpublish stream failed\");\n            return;\n          }\n          if ((stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) && stream.url === undefined) {\n            if (stream.pc !== undefined) {\n              stream.pc.close();\n              stream.pc = undefined;\n            }\n          }\n          stream.onClose = undefined;\n          stream.unmuteAudio = undefined;\n          stream.muteAudio = undefined;\n          stream.unmuteVideo = undefined;\n          stream.muteVideo = undefined;\n          onSuccess && onSuccess();\n          // Logger.info(\"Unpublish stream success, uid:\", stream.getId());\n        }, onFailure);\n      } else {\n        safeCall(onFailure, _ErrorCodes2.default.INVALID_LOCAL_STREAM);\n        _Logger2.default.error(\"Invalid local stream\");\n      }\n    } else {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"User not in the session\");\n    }\n  };\n\n  // It subscribes to a remote stream and draws it inside the HTML tag given\n  // by the ID=\"elementID\"\n  that.subscribe = function (stream, onFailure) {\n    var lts = new Date().getTime();\n    //TODO rwrite - for the dtls failed can not raise event to report\n    stream.subscribeLTS = lts;\n\n    if ((typeof stream === \"undefined\" ? \"undefined\" : _typeof(stream)) !== \"object\" || stream === null) {\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_REMOTE_STREAM);\n      _Report.report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: _ErrorCodes2.default.INVALID_REMOTE_STREAM\n      });\n      _Logger2.default.error(\"Invalid remote stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_OPERATION);\n      _Report.report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: _ErrorCodes2.default.INVALID_OPERATION\n      });\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n    if (!stream.local && that.remoteStreams.hasOwnProperty(stream.getId())) {\n      if (stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) {\n        stream.pc = (0, _Connection.Connection)({\n          callback: function callback(offer) {\n            _Logger2.default.debug(\"SDP exchange in subscribe : send offer --  \", JSON.parse(offer));\n            sendSimpleSdp(Subscribe({\n              streamId: stream.getId(),\n              audio: true, video: true,\n              mode: that.mode,\n              codec: that.codec\n            }, offer), function (answer) {\n              if (answer === \"error\") {\n                _Logger2.default.error(\"Subscribe remote stream failed, closing stream \", stream.getId());\n                stream.close();\n                return;\n              }\n              _Logger2.default.debug(\"SDP exchange in subscribe : receive answer --  \", JSON.parse(answer));\n              stream.pc.processSignalingMessage(answer);\n            });\n          },\n          nop2p: true,\n          audio: true,\n          video: true,\n          screen: stream.hasScreen(),\n          isSubscriber: true,\n          iceServers: [],\n          stunServerUrl: that.stunServerUrl,\n          turnServer: that.turnServer\n        });\n\n        stream.pc.onaddstream = function (evt, type) {\n          // Draw on html\n          if (type === \"ontrack\" && evt.track.kind === \"video\" || type === \"onaddstream\") {\n            _Logger2.default.info(\"Remote stream subscribed with uid \", stream.getId());\n            if (type === \"onaddstream\") {\n              that.remoteStreams[stream.getId()].stream = evt.stream;\n            } else {\n              that.remoteStreams[stream.getId()].stream = evt.streams[0];\n            }\n            if (!that.remoteStreams[stream.getId()].hasVideo()) {\n              that.remoteStreams[stream.getId()].disableVideo();\n            } else {\n              if ((0, _Browser.isFireFox)()) {\n                var st = that.remoteStreams[stream.getId()].stream;\n                (0, _Helper.vsResHack)(st, function (videoWidth, videoHeight) {\n                  stream.videoWidth = videoWidth;\n                  stream.videoHeight = videoHeight;\n                }, function (e) {\n                  return _Logger2.default.warning('vsResHack failed:' + e);\n                });\n              }\n            }\n            var subscribeEvt = (0, _Events.StreamEvent)({\n              type: \"stream-subscribed\", stream: that.remoteStreams[stream.getId()] });\n            that.dispatchEvent(subscribeEvt);\n          }\n          stream.unmuteAudio = function () {\n            sendMessage(Control({ \"action\": \"audio-in-on\", \"streamId\": stream.getId() }), function () {}, function () {});\n          };\n          stream.muteAudio = function () {\n            sendMessage(Control({ \"action\": \"audio-in-off\", \"streamId\": stream.getId() }), function () {}, function () {});\n          };\n          stream.unmuteVideo = function () {\n            sendMessage(Control({ \"action\": \"video-in-on\", \"streamId\": stream.getId() }), function () {}, function () {});\n          };\n          stream.muteVideo = function () {\n            sendMessage(Control({ \"action\": \"video-in-off\", \"streamId\": stream.getId() }), function () {}, function () {});\n          };\n        };\n\n        // for argus\n        that.timers[stream.getId()] = setInterval(function () {\n          if (stream && stream.pc && stream.pc.getStats) {\n            stream.pc.getStatsRate(function (stats) {\n              stats.forEach(function (stat) {\n                // Firefox get resolution from stream\n                if (stat.id.indexOf(\"inbound_rtp\") !== -1 && stat.mediaType === \"video\") {\n                  stat.googFrameWidthReceived = stream.videoWidth + '';\n                  stat.googFrameHeightReceived = stream.videoHeight + '';\n                }\n                sendSimpleSdp(SubscribeStats(stream.getId(), stat), null, null);\n              });\n            });\n          }\n        }, 3000);\n\n        // find active-speaker\n        that.audioLevel[stream.getId()] = 0;\n        that.timers[stream.getId() + \"audio\"] = setInterval(function () {\n          if (stream && stream.pc && stream.pc.getStats) {\n            stream.pc.getStats(function (stats) {\n              stats.forEach(function (stat) {\n                if (stat.mediaType === \"audio\") {\n                  //Logger.info(\"[zzz] uid:\"+stream.getId()+\" output level\"+stat.audioOutputLevel);\n                  if (stat.audioOutputLevel > 5000) {\n                    if (that.audioLevel[stream.getId()] < 20) {\n                      that.audioLevel[stream.getId()] += 1;\n                      //Logger.info(\"[xxx] user:\"+stream.getId()+\" counter:\"+that.audioLevel[stream.getId()]);\n                    }\n                    for (var i in that.audioLevel) {\n                      if (parseInt(i) !== stream.getId() && that.audioLevel[i] > 0) {\n                        that.audioLevel[i] -= 1;\n                        //Logger.info(\"[yyy] user:\"+i+\" counter:\"+that.audioLevel[i]+\" stream:\"+stream.getId());\n                      }\n                    }\n                  }\n                  var unsortedKeys = Object.keys(that.audioLevel);\n                  var sortedUids = unsortedKeys.sort(function (uid1, uid2) {\n                    return that.audioLevel[uid2] - that.audioLevel[uid1];\n                  });\n                  if (that.activeSpeaker !== sortedUids[0]) {\n                    var evt = (0, _Events.ClientEvent)({ type: \"active-speaker\", uid: sortedUids[0] });\n                    that.dispatchEvent(evt);\n                    that.activeSpeaker = sortedUids[0];\n                    _Logger2.default.debug(\"Update active speaker:\" + that.activeSpeaker);\n                  }\n                }\n              });\n            });\n          }\n        }, 50);\n\n        stream.pc.oniceconnectionstatechange = function (state) {\n          if (state === \"failed\") {\n            if (that.timers[stream.getId()] != undefined) {\n              clearInterval(that.timers[stream.getId()]);\n              clearInterval(that.timers[stream.getId()] + \"audio\");\n            }\n            sendMessage(P2PLost(), function () {}, function () {});\n            that.socket.disconnect();\n            _Logger2.default.error(\"Subscriber connection is lost\", stream.getId());\n            onFailure && onFailure(_ErrorCodes2.default.PEERCONNECTION_FAILED);\n            _Report.report.subscribe(that.joinInfo.sid, {\n              lts: lts,\n              succ: false,\n              peerid: stream.getId() + \"\",\n              ec: _ErrorCodes2.default.PEERCONNECTION_FAILED\n            });\n          } else if (state === \"connected\") {\n            _Report.report.subscribe(that.joinInfo.sid, {\n              lts: lts,\n              succ: true,\n              peerid: stream.getId() + \"\",\n              ec: null\n            });\n            // Report first frame\n            that.firstFrameTimer.set(stream.getId(), setInterval(function () {\n              if (stream.pc) {\n                stream.pc.getStats(function (stats) {\n                  stats.forEach(function (stat) {\n                    if (stat.id.indexOf(\"recv\") !== -1 || stat.id.indexOf(\"inbound_rtp\") !== -1 || stat.id.indexOf(\"InboundRTP\") !== -1) {\n                      if (stat.mediaType === \"video\") {\n                        if (stat.framesDecoded > 0 || stat.googFramesDecoded > 0) {\n                          clearInterval(that.firstFrameTimer.get(stream.getId()));\n                          that.firstFrameTimer.delete(stream.getId());\n                          _Report.report.firstRemoteFrame(that.joinInfo.sid, {\n                            lts: new Date().getTime(),\n                            peerid: stream.getId() + \"\",\n                            succ: true,\n                            width: +stat.googFrameWidthReceived,\n                            height: +stat.googFrameHeightReceived\n                          });\n                        }\n                      }\n                    }\n                  });\n                });\n              } else {\n                clearInterval(that.firstFrameTimer.get(stream.getId()));\n                that.firstFrameTimer.delete(stream.getId());\n              }\n            }, 100));\n          }\n        };\n      } else {\n        onFailure && onFailure(_ErrorCodes2.default.INVALID_REMOTE_STREAM);\n        _Report.report.subscribe(that.joinInfo.sid, {\n          lts: lts,\n          succ: false,\n          peerid: stream.getId() + \"\",\n          ec: _ErrorCodes2.default.INVALID_REMOTE_STREAM\n        });\n        _Logger2.default.error(\"Invalid remote stream\");\n      }\n    } else {\n      onFailure && onFailure(_ErrorCodes2.default.INVALID_REMOTE_STREAM);\n      _Report.report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: _ErrorCodes2.default.INVALID_REMOTE_STREAM\n      });\n      _Logger2.default.error(\"Invalid remote stream\");\n    }\n  };\n\n  // It unsubscribes from the stream, removing the HTML element\n  that.unsubscribe = function (stream, onFailure) {\n    // Logger.debug(\"Start unsubscribing remote stream with uid\", stream.getId());\n    if ((typeof stream === \"undefined\" ? \"undefined\" : _typeof(stream)) !== \"object\" || stream === null) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_REMOTE_STREAM);\n      _Logger2.default.error(\"Invalid remote stream\");\n      return;\n    }\n\n    if (that.state !== CONNECTED) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n\n    if (that.timers[stream.getId()] != undefined) {\n      clearInterval(that.timers[stream.getId()]);\n      clearInterval(that.timers[stream.getId()] + \"audio\");\n    }\n\n    if (that.audioLevel[stream.getId()] != undefined) {\n      delete that.audioLevel[stream.getId()];\n    }\n\n    if (that.timer_counter[stream.getId()] != undefined) {\n      delete that.timer_counter[stream.getId()];\n    }\n\n    if (!that.remoteStreams.hasOwnProperty(stream.getId())) {\n      safeCall(onFailure, _ErrorCodes2.default.NO_SUCH_REMOTE_STREAM);\n      return;\n    }\n    if (!that.socket) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n\n    if (stream.local) {\n      safeCall(onFailure, _ErrorCodes2.default.INVALID_REMOTE_STREAM);\n      _Logger2.default.error(\"Invalid remote stream\");\n      return;\n    }\n\n    stream.close();\n    delete that.remoteStreams[stream.getId()];\n\n    sendMessage(Unsubscribe(stream.getId()), function (answer) {\n      if (answer === \"error\") {\n        safeCall(onFailure, _ErrorCodes2.default.UNSUBSCRIBE_STREAM_FAILED);\n        _Logger2.default.error(\"Unsubscribe remote stream failed\", stream.getId());\n        return;\n      }\n      _Logger2.default.info(\"Unsubscrib stream success\");\n    }, onFailure);\n  };\n\n  that.setRemoteVideoStreamType = function (stream, streamType) {\n    _Logger2.default.debug(\"Switching remote video stream \" + stream.getId() + \" to \" + streamType);\n    if ((typeof stream === \"undefined\" ? \"undefined\" : _typeof(stream)) !== \"object\" || stream === null) {\n      _Logger2.default.error(\"Invalid remote stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n    if (!stream.local) {\n      switch (streamType) {\n        case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_HIGH:\n        case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_LOW:\n        case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_MEDIUM:\n          break;\n        default:\n          //safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n          return;\n      }\n      sendMessage(SwitchVideoStream(stream.getId(), streamType), null, null);\n    } else {\n      //safeCall(onFailure, ErrorCodes.INVALID_REMOTE_STREAM);\n    }\n  };\n\n  that.startLiveStreaming = function (url, transcodingEnabled) {\n    that.liveStreams.set(url, transcodingEnabled);\n    _Logger2.default.debug(\"Start live streaming \" + url + \" transcodingEnabled \" + transcodingEnabled);\n    if (that.state !== CONNECTED) {\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n    sendMessage(StartLiveStreaming(url, transcodingEnabled), null, null);\n  };\n\n  that.stopLiveStreaming = function (url) {\n    _Logger2.default.debug(\"Stop live streaming \" + url);\n    if (that.state !== CONNECTED) {\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n    that.liveStreams.delete(url);\n    sendMessage(StopLiveStreaming(url), null, null);\n  };\n\n  that.setLiveTranscoding = function (transcoding) {\n    that.transcoding = transcoding;\n    _Logger2.default.debug(\"Set live transcoding \" + transcoding);\n    if (that.state !== CONNECTED) {\n      _Logger2.default.error(\"User is not in the session\");\n      return;\n    }\n    sendMessage(SetLiveTranscoding(transcoding), null, null);\n  };\n\n  var generateInterval = function generateInterval(k) {\n    return Math.min(30, Math.pow(2, k) - 1) * 1000;\n  };\n\n  var recover = function recover() {\n    if (that.key) {\n      _Logger2.default.info(\"Re-joining to channel \" + that.joinInfo.cname);\n      that.join(that.joinInfo, that.key, function (uid) {\n        _Logger2.default.info(\"User \" + uid + \" is re-joined to \" + that.joinInfo.cname);\n        //TODO rewrite\n        for (var streamId in that.localStreams) {\n          if (that.localStreams[streamId] !== undefined) {\n            var stream = that.localStreams[streamId];\n            delete that.localStreams[streamId];\n            if (stream.pc !== undefined) {\n              stream.pc.close();\n              stream.pc = undefined;\n            }\n          }\n        }\n        that.dispatchEvent((0, _Events.ClientEvent)({ type: \"rejoin\" }));\n        // Logger.info(\"Publish the old local stream again\");\n        // that.publish(stream, function (err) {\n        //   Logger.error(\"Publish the old stream failed\");\n        // });\n        if (that.liveStreams && that.liveStreams.size) {\n          that.liveStreams.forEach(function (value, key) {\n            if (value) {\n              that.setLiveTranscoding(that.transcoding);\n            }\n            that.startLiveStreaming(key, value);\n          });\n        }\n      }, function (err) {\n        _Logger2.default.error(\"Re-join to channel failed [\" + err + \"]\");\n        if (err === _ErrorCodes2.default.ERR_INVALID_VENDOR_KEY) {\n          var evt = (0, _Events.StreamEvent)({ type: \"error\", reason: _ErrorCodes2.default.INVALID_KEY });\n          that.dispatchEvent(evt);\n        } else if (err === _ErrorCodes2.default.ERR_INVALID_DYNAMIC_KEY) {\n          var evt = (0, _Events.StreamEvent)({ type: \"error\", reason: _ErrorCodes2.default.INVALID_DYNAMIC_KEY });\n          that.dispatchEvent(evt);\n        } else if (err === _ErrorCodes2.default.ERR_DYNAMIC_KEY_TIMEOUT) {\n          var evt = (0, _Events.StreamEvent)({ type: \"error\", reason: _ErrorCodes2.default.DYNAMIC_KEY_TIMEOUT });\n          that.dispatchEvent(evt);\n          var time = generateInterval(that.attemps);\n          _Logger2.default.error(\"Connect to server failed [Channel key timeout], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n          var timer = setTimeout(function () {\n            that.attemps++;\n            if (that.socket !== undefined) {\n              that.socket.disconnect();\n            }\n          }, time);\n        }\n      });\n    } else {\n      _Logger2.default.error(\"Connection recover failed [Invalid channel key]\");\n    }\n  };\n\n  var createSocket = function createSocket(host) {\n    that.socket = (0, _Websocket2.default)(host, { sid: that.joinInfo.sid });\n  };\n\n  var connectSocket = function connectSocket(joinInfo, callback, error) {\n    // Once we have connected\n    var max_connect_attempts = 10;\n    var connect_timeout_attempt = 0;\n    // Deal with transport close\n    // Sometimes socket.io will disconnect immediately after connected,\n    // we need some strategy to deal with this case.\n\n    // This handles reconnection.\n    // If we try to re-initialize \"that.socket\" each time when connecting,\n    // reconnecting after disconnected from gateway could not result in sucess.\n    // However, we could simply reuse previous created \"that.socket\" to\n    // re-establish the connection between client and gateway, by calling\n    // \"that.socket.socket.connect()\". And we don\"t delete \"that.socket\"\n    // when \"client-disconnect\" event triggered.\n    if (that.socket !== undefined) {\n      that.socket.socket.connect();\n    } else {\n      // Create socket connection.\n      createSocket(joinInfo.gatewayAddr);\n\n      that.socket.on(\"onUplinkStats\", function (args) {\n        if (that.localStreams[that.uid]) {\n          that.localStreams[that.uid].uplinkStats = args;\n        }\n      });\n\n      // Add connect event listener.\n      that.socket.on(\"connect\", function () {\n        that.attemps = 1;\n        sendMessage(Token(joinInfo), callback, error);\n      });\n\n      that.socket.on(\"reconnect\", function () {\n        _Logger2.default.debug(\"Try to reconnect choose server and get gateway list again \");\n        (0, _Server.getGatewayList)(that.joinInfo, function (res) {\n          that.socket.reconnect(res.gateway_addr);\n        });\n      });\n\n      // Add connect_error event listener.\n      that.socket.on(\"connect_error\", function (err) {\n        // Clear peer connection stats timers\n        for (var i in that.timers) {\n          if (that.timers.hasOwnProperty(i)) {\n            clearInterval(that.timers[i]);\n          }\n        }\n\n        for (var i in that.remoteStreams) {\n          if (that.remoteStreams.hasOwnProperty(i)) {\n            var stream = that.remoteStreams[i];\n            // Dispatch peer leave event\n            var evt = (0, _Events.ClientEvent)({ type: \"stream-removed\", uid: stream.getId(), stream: stream });\n            that.dispatchEvent(evt);\n          }\n        }\n\n        removeRemoteStreams();\n        if (isBanned == true) return;\n\n        clearInterval(that.pingTimer);\n        that.state = DISCONNECTED;\n        that.socket = undefined;\n        var evt = (0, _Events.StreamEvent)({ type: \"error\", reason: _ErrorCodes2.default.SOCKET_ERROR });\n        that.dispatchEvent(evt);\n\n        var time = generateInterval(that.attemps);\n        _Logger2.default.error(\"Connect to server error [\" + JSON.stringify(err) + \"], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n        var timer = setTimeout(function () {\n          // We\"ve tried to reconnect so increase the attempts by 1\n          that.attemps++;\n          recover();\n        }, time);\n      });\n\n      that.socket.on(\"disconnect\", function (reason) {\n        if (that.state === DISCONNECTED) return;\n        that.state = DISCONNECTED;\n\n        // Clear peer connection stats timers\n        for (var i in that.timers) {\n          if (that.timers.hasOwnProperty(i)) {\n            clearInterval(that.timers[i]);\n          }\n        }\n\n        for (var i in that.remoteStreams) {\n          if (that.remoteStreams.hasOwnProperty(i)) {\n            var stream = that.remoteStreams[i];\n            // Dispatch peer leave event\n            var evt = (0, _Events.ClientEvent)({ type: \"stream-removed\", uid: stream.getId(), stream: stream });\n            that.dispatchEvent(evt);\n          }\n        }\n\n        removeRemoteStreams();\n        if (isBanned == true) return;\n        clearInterval(that.pingTimer);\n        that.socket = undefined;\n        //safeCall(error, ErrorCodes.SOCKET_DISCONNECTED);\n        var evt = (0, _Events.StreamEvent)({ type: \"error\", reason: _ErrorCodes2.default.SOCKET_DISCONNECTED });\n        that.dispatchEvent(evt);\n\n        var time = generateInterval(that.attemps);\n        _Logger2.default.error(\"Disconnect from server [\" + reason + \"], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n        var timer = setTimeout(function () {\n          // We\"ve tried to reconnect so increment the attempts by 1\n          that.attemps++;\n          recover();\n        }, time);\n      });\n\n      // We receive an event with a new stream.\n      // type can be \"media\" or \"data\"\n      that.socket.on(\"onAddAudioStream\", function (arg) {\n        if (that.remoteStreams[arg.id] === undefined) {\n          var stream = (0, _Stream.Stream)({\n            streamID: arg.id, local: false, audio: arg.audio, video: arg.video,\n            screen: arg.screen, attributes: arg.attributes });\n          that.remoteStreams[arg.id] = stream;\n          var evt = (0, _Events.StreamEvent)({ type: \"stream-added\", stream: stream });\n          that.dispatchEvent(evt);\n        }\n      });\n\n      that.socket.on(\"onAddVideoStream\", function (arg) {\n        _Logger2.default.info(\"Newly added remote stream with uid\", arg.id);\n        if (that.remoteStreams[arg.id] === undefined) {\n          var stream = (0, _Stream.Stream)({\n            streamID: arg.id, local: false, audio: arg.audio, video: arg.video,\n            screen: arg.screen, attributes: arg.attributes });\n          that.remoteStreams[arg.id] = stream;\n          var evt = (0, _Events.StreamEvent)({ type: \"stream-added\", stream: stream });\n          that.dispatchEvent(evt);\n        } else {\n          if (that.remoteStreams[arg.id].stream !== undefined) {\n            that.remoteStreams[arg.id].video = true;\n            that.remoteStreams[arg.id].enableVideo();\n            _Logger2.default.info(\"Stream changed: enable video \" + arg.id);\n            var st = that.remoteStreams[arg.id];\n            var element = st.player.elementID;\n            st.stop();\n            st.play(element);\n          } else {\n            var stream = (0, _Stream.Stream)({\n              streamID: arg.id, local: false, audio: true, video: true,\n              screen: false, attributes: arg.attributes });\n            that.remoteStreams[arg.id] = stream;\n            _Logger2.default.info(\"Stream changed: modify video \" + arg.id);\n          }\n        }\n      });\n\n      // We receive an event of a stream removed\n      that.socket.on(\"onRemoveStream\", function (arg) {\n        var stream = that.remoteStreams[arg.id];\n        if (!stream) {\n          console.log(\"ERROR stream \", arg.id, \" not found onRemoveStream \", arg);\n          return;\n        }\n        delete that.remoteStreams[arg.id];\n        var evt = (0, _Events.StreamEvent)({ type: \"stream-removed\", stream: stream });\n        that.dispatchEvent(evt);\n        stream.close();\n        if (stream.pc !== undefined) {\n          stream.pc.close();\n          stream.pc = undefined;\n        }\n      });\n\n      // We receive an event of local stream published\n      that.socket.on(\"onPublishStream\", function (arg) {\n        var stream = that.localStreams[arg.id];\n        var evt = (0, _Events.StreamEvent)({ type: \"stream-published\", stream: stream });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"mute_audio\", function (arg) {\n        _Logger2.default.info(\"rcv peer mute audio\");\n        var evt = (0, _Events.ClientEvent)({ type: \"mute-audio\", uid: arg.peerid });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"unmute_audio\", function (arg) {\n        _Logger2.default.info(\"rcv peer unmute audio\");\n        var evt = (0, _Events.ClientEvent)({ type: \"unmute-audio\", uid: arg.peerid });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"mute_video\", function (arg) {\n        _Logger2.default.info(\"rcv peer mute video\");\n        var evt = (0, _Events.ClientEvent)({ type: \"mute-video\", uid: arg.peerid });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"unmute_video\", function (arg) {\n        _Logger2.default.info(\"rcv peer unmute video\");\n        var evt = (0, _Events.ClientEvent)({ type: \"unmute-video\", uid: arg.peerid });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"user_banned\", function (arg) {\n        _Logger2.default.info(\"user banned uid:\" + arg.id + \"error:\" + arg.errcode);\n        var evt = (0, _Events.ClientEvent)({ type: \"client-banned\", uid: arg.id, attr: arg.errcode });\n        that.dispatchEvent(evt);\n        isBanned = true;\n        leave();\n      });\n\n      that.socket.on(\"onP2PLost\", function (arg) {\n        _Logger2.default.debug(\"p2plost:\", arg);\n        if (arg.event === 'publish') {\n          var stream = that.localStreams[arg.uid];\n          stream && _Report.report.publish(that.joinInfo.sid, {\n            lts: stream.publishLTS,\n            succ: false,\n            ec: 'DTLS failed'\n          });\n        }\n\n        if (arg.event === 'subscribe') {\n          var _stream = that.remoteStreams[arg.uid];\n          _stream && _Report.report.subscribe(that.joinInfo.sid, {\n            lts: _stream.subscribeLTS,\n            succ: false,\n            peerid: arg.uid + '',\n            ec: 'DTLS failed'\n          });\n        }\n\n        that.socket.disconnect();\n        // var time = generateInterval(that.p2p_attemps) + generateInterval(that.attemps);\n        // Logger.error(\"p2p connection lost, attempt to recover [#\" + that.p2p_attemps + \"] after \" + time / 1000 + \" seconds\");\n        // var timer = setTimeout(function () {\n        //   that.p2p_attemps++;\n        //   if (that.socket !== undefined) {\n        //     that.socket.disconnect();\n        //   }\n        // }, time);\n      });\n\n      // We receive an event of a client leaved\n      that.socket.on(\"onPeerLeave\", function (arg) {\n        var evt = (0, _Events.ClientEvent)({ type: \"peer-leave\", uid: arg.id });\n        if (that.remoteStreams.hasOwnProperty(arg.id)) {\n          evt.stream = that.remoteStreams[arg.id];\n        }\n        that.dispatchEvent(evt);\n\n        if (that.remoteStreams.hasOwnProperty(arg.id)) {\n          _Logger2.default.info(\"closing stream on peer leave\", arg.id);\n          var stream = that.remoteStreams[arg.id];\n          stream.close();\n          delete that.remoteStreams[arg.id];\n          if (stream.pc !== undefined) {\n            stream.pc.close();\n            stream.pc = undefined;\n          }\n        }\n\n        if (that.timers.hasOwnProperty(arg.id)) {\n          clearInterval(that.timers[arg.id]);\n          delete that.timers[arg.id];\n        }\n\n        if (that.audioLevel[arg.id] != undefined) {\n          delete that.audioLevel[arg.id];\n        }\n\n        if (that.timer_counter[arg.id] != undefined) {\n          delete that.timer_counter[arg.id];\n        }\n      });\n\n      that.socket.on(\"onUplinkStats\", function (args) {});\n\n      that.socket.on(\"liveStreamingStarted\", function (args) {\n        var evt = (0, _Events.LiveStreamingEvent)({ type: \"liveStreamingStarted\", url: args.url });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"liveStreamingFailed\", function (args) {\n        var evt = (0, _Events.LiveStreamingEvent)({ type: \"liveStreamingFailed\", url: args.url });\n        that.dispatchEvent(evt);\n      });\n\n      that.socket.on(\"liveStreamingStopped\", function (args) {\n        var evt = (0, _Events.LiveStreamingEvent)({ type: \"liveStreamingStopped\", url: args.url });\n        that.dispatchEvent(evt);\n      });\n      that.socket.on(\"liveTranscodingUpdated\", function (args) {\n        var evt = (0, _Events.LiveStreamingEvent)({ type: \"liveTranscodingUpdated\", reason: args.reason });\n        that.dispatchEvent(evt);\n      });\n    }\n  };\n\n  var sendMessage = function sendMessage(message, callback, error) {\n    if (that.socket === undefined) {\n      safeCall(error, _ErrorCodes2.default.INVALID_OPERATION);\n      _Logger2.default.error(\"No socket available\");\n      return;\n    }\n    try {\n      that.socket.emitSimpleMessage(message, function (respType, result) {\n        if (respType === \"success\") {\n          if (typeof callback === \"function\") {\n            callback(result);\n          }\n        } else {\n          if (typeof error === \"function\") {\n            error(result);\n          }\n        }\n      });\n    } catch (err) {\n      safeCall(error, _ErrorCodes2.default.SOCKET_ERROR);\n      _Logger2.default.error(\"Socket emit message failed\" + JSON.stringify(message));\n      _Logger2.default.error(err);\n    }\n  };\n\n  // It sends a SDP message to the server using socket.io\n  var sendSimpleSdp = function sendSimpleSdp(message, callback) {\n    if (that.socket === undefined) {\n      _Logger2.default.error(\"Error in sendSimpleSdp [socket not ready]\");\n      return;\n    }\n    try {\n      that.socket.emitSimpleMessage(message, function (response, respCallback) {\n        if (callback !== undefined) {\n          callback(response, respCallback);\n        }\n      });\n    } catch (err) {\n      _Logger2.default.error(\"Error in sendSimpleSdp [\" + err + \"]\");\n    }\n  };\n\n  function removeRemoteStreams() {\n    for (var i in that.remoteStreams) {\n      if (that.remoteStreams.hasOwnProperty(i)) {\n        var stream = that.remoteStreams[i];\n        stream.stop();\n        stream.close();\n        delete that.remoteStreams[i];\n        if (stream.pc !== undefined) {\n          stream.pc.close();\n          stream.pc = undefined;\n        }\n      }\n    }\n  }\n\n  return that;\n};\n\nexports.default = GatewayClient;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Signal = __webpack_require__(31);\n\nvar _Signal2 = _interopRequireDefault(_Signal);\n\nvar _Events = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n\nAPI used in Client.js\n\nthat.socket = io.connect(host, {timeout: 10000, reconnection: false, secure: true, transports:['websocket'], upgrade: false});\nthat.socket = io.connect(host, {timeout: 10000, reconnection: false, secure: false, transports:['websocket'], upgrade: false});\n\nthat.socket.connect();          // --> that.socket.socket.connect();\nthat.socket.disconnect();\nthat.socket.disconnect();\n\nthat.socket.on('connect', function () {                         ☑️\nthat.socket.on('connect_error', function (err) {\nthat.socket.on('disconnect', function (reason) {\nthat.socket.on('onAddAudioStream', function (arg) {\nthat.socket.on('onAddVideoStream', function (arg) {\nthat.socket.on('onRemoveStream', function (arg) {\nthat.socket.on('onPublishStream', function (arg) {\nthat.socket.on('onP2PLost', function (arg) {\nthat.socket.on('onPeerLeave', function (arg) {\n\nthat.socket.emit(type, msg, function (respType, msg) {\n    //      sendMessageSocket('token', token, callback, error);\n            sendMessageSocket = function (type, msg, callback, error) {\n            sendMessageSocket('customMessage', msg, function (uid) {\n            sendMessageSocket('customMessage', {\"type\": \"leave\"}, onSuccess, onFailure);\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket('p2p_lost', undefined, function () {}, function () {});\n            sendMessageSocket('unpublish', stream.getId(), function (answer) {\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket('p2p_lost', undefined, function () {}, function () {});\n            sendMessageSocket('unsubscribe', stream.getId(), function (answer) {\n            sendMessageSocket('switchVideoStream', {id: stream.getId(), type: streamType}, null, null);\n\n\nthat.socket.emit(type, options, sdp, function (response, respCallback) {\n    //      sendSDPSocket('publish', {...}, stream.url, function (answer, id) {\n            sendSDPSocket('publish', {...}, offer, function (answer, info) {\n            sendSDPSocket('publish', {...}, ok);\n            sendSDPSocket('publish_stats', {stats: stats}, null, null);\n            sendSDPSocket('subscribe', {...}, offer, function (answer) {\n            sendSDPSocket('subscribe_stats', {...}, null, null);\n\n\n*/\nvar Socket = function Socket(host, spec) {\n\n    var that = {};\n\n    that.connect = function () {\n        spec.host = host;\n        that.signal = (0, _Signal2.default)(spec);\n        that.on = that.signal.on;\n        that.dispatchEvent = that.signal.dispatchEvent;\n\n        that.signal.on('onopen', function (e) {\n            that.signal.onEvent = function (e) {\n                that.dispatchEvent((0, _Events.MediaEvent)({ type: e.event, msg: e }));\n            };\n\n            that.dispatchEvent((0, _Events.MediaEvent)({ type: 'connect', msg: e }));\n        });\n\n        that.signal.on('onError', function (ev) {\n            var m = ev.msg;\n            onError(m.code, 'error');\n        });\n    };\n\n    that.disconnect = function () {\n        that.signal.disconnect();\n    };\n\n    that.close = function () {\n        that.signal.close();\n    };\n\n    that.getURL = function () {\n        return that.signal.getURL();\n    };\n\n    that.reconnect = function (host) {\n        that.signal.creatConnection(host);\n    };\n\n    that.emitSimpleMessage = function (message, callback) {\n        that.signal.sendSignalCommand(message, callback);\n    };\n\n    that.connect();\n    return that;\n};\n\nexports.default = Socket;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Events = __webpack_require__(2);\n\nvar _AgoraCall = __webpack_require__(11);\n\nvar _AgoraCall2 = _interopRequireDefault(_AgoraCall);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _Report = __webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Signal = function Signal(spec) {\n  var that = (0, _Events.EventDispatcher)(spec);\n  that.needReconnect = true;\n  that.isTimeout = false;\n  that.isInit = true;\n\n  // test\n  // spec.host = [\n  //   \"webgw-shaoxing-cucc-1111.agora.io:5867\",\n  //   \"gw.agora.io:5688\",\n  //   \"webgw-shaoxing-cucc-1.agora.io:5867\"\n  // ];\n\n  that.hostIndex = 0;\n  that.requestID = 0;\n  if (spec.host instanceof Array) {\n    that.host = spec.host;\n  } else {\n    that.host = [spec.host];\n  }\n\n  that.Reconnection = function (host) {\n    that.host = host || that.host;\n    that.hostIndex = 0;\n    that.creatConnection();\n  };\n\n  that.getURL = function () {\n    return that.connection.url;\n  };\n\n  that.creatConnection = function () {\n    if (that.hostIndex >= that.host.length) {\n      that.hostIndex = 0;\n      that.dispatchEvent((0, _Events.MediaEvent)({ type: \"reconnect\" }));\n      return;\n    }\n    _Logger2.default.debug(\"start connect:\" + that.host[that.hostIndex]);\n    that.lts = new Date().getTime();\n\n    //agora daily build\n    // that.connection = new WebSocket(\"wss://\" + that.host[that.hostIndex++]);\n    that.connection = new WebSocket(\"wss://webgw-test-5.agora.io:5866\");that.hostIndex++;\n\n    //onopen\n    that.connection.onopen = function (e) {\n      _Logger2.default.debug(\"websockect opened\");\n      that.isTimeout = false;\n      that.isInit = false;\n      clearTimeout(that.timeoutCheck);\n      that.dispatchEvent((0, _Events.MediaEvent)({ type: 'onopen', event: e, socket: that }));\n    };\n\n    //onmessage\n    that.connection.onmessage = function (e) {\n      // Logger.debug(\"websockect onmessage:\", e);\n      var m = JSON.parse(e.data);\n      if (m.hasOwnProperty(\"_id\")) {\n        that.dispatchEvent((0, _Events.MediaEvent)({ type: m._id, msg: m }));\n      } else if (m.hasOwnProperty(\"_type\")) {\n        that.dispatchSocketEvent((0, _Events.MediaEvent)({ type: m._type, msg: m.message }));\n      }\n    };\n\n    //onclose\n    that.connection.onclose = function (e) {\n      if (!that.needReconnect) {\n        _Logger2.default.debug(\"websockect closeed\");\n        (0, _AgoraCall2.default)(spec.onFailure, e);\n        clearTimeout(that.timeoutCheck);\n        that.dispatchEvent((0, _Events.MediaEvent)({ type: 'close', event: e }));\n        that.connection.onopen = undefined;\n        that.connection.onclose = undefined;\n        that.connection.onerror = undefined;\n        that.connection.onmessage = undefined;\n        that.connection = undefined;\n      } else {\n        if (!that.isTimeout && !that.isInit) {\n          that.dispatchEvent((0, _Events.MediaEvent)({ type: 'disconnect', event: e }));\n        } else {\n          _Logger2.default.debug(\"websockect connect timeout\");\n          _Report.report.joinGateway(spec.sid, {\n            lts: that.lts,\n            succ: false,\n            ec: \"timeout\",\n            addr: that.connection.url\n          });\n          that.creatConnection();\n        }\n      }\n    };\n\n    //onerror : \n    // it's very weird that invoke socket.close will triger onerror, \n    // and this callback just return \"error\" but nothing useful details.\n    that.connection.onerror = function (e) {\n      // if (!that.needReconnect) {\n      //   console.log(e);\n      //   AgoraCall(spec.onFailure, e);\n      //   that.dispatchEvent(MediaEvent({type: 'connect_error', event: e}));\n      //   that.connection.onopen = undefined;\n      //   that.connection.onclose = undefined;\n      //   that.connection.onerror = undefined;\n      //   that.connection.onmessage = undefined;\n      //   that.connection = undefined;\n      // }\n    };\n\n    // timeout check\n    var timeoutCheck = setTimeout(function () {\n      if (that.connection && that.connection.readyState != WebSocket.OPEN) {\n        that.isTimeout = true;\n        that.connection.close();\n      }\n    }, 5000);\n  };\n  that.creatConnection();\n\n  that.sendMessage = function (obj, onError) {\n    if (that.connection && that.connection.readyState == WebSocket.OPEN) {\n      that.connection.send(JSON.stringify(obj));\n    } else {\n      // console.log('Connection to gateway lost while sending ' + obj);\n      // console.log('signal connection state ' + that.connection.readyState);\n      onError({ error: 'Gateway not connected' });\n    }\n  };\n\n  that.disconnect = function () {\n    that.needReconnect = true;\n    that.connection.close();\n  };\n\n  that.close = function () {\n    that.needReconnect = false;\n    that.connection.close();\n  };\n\n  that.sendSignalCommand = function (message, callback) {\n    message._id = \"_request_\" + that.requestID;\n    that.requestID += 1;\n    if (!(message._type === 'publish_stats' || message._type === 'subscribe_stats' || message._type === 'publish_stats_low')) {\n      that.on(message._id, function (e) {\n        callback && callback(e.msg._result, e.msg.message);\n        delete that.dispatcher.eventListeners[message._id];\n      });\n    }\n    that.sendMessage(message, function (e) {\n      e.reason = 'NOT_CONNECTED';\n      callback && callback(e.reason, e);\n    });\n  };\n\n  return that;\n};\n\nexports.default = Signal;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simMap = undefined;\n\nvar _Browser = __webpack_require__(3);\n\nvar simMap = function simMap(profile) {\n  var resolution;\n\n  switch (profile) {\n    case \"120p\":\n    case \"120p_1\":\n      resolution = [\"120p_1\", \"120p_1\", \"120p_1\"];\n      break;\n\n    case \"120p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"120p_3\"];\n      break;\n\n    case \"180p\":\n    case \"180p_1\":\n      resolution = [\"90p_1\", \"90p_1\", \"180p_1\"];\n      break;\n\n    case \"180p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"180p_3\"];\n      break;\n\n    case \"180p_4\":\n      resolution = [\"120p_1\", \"120p_1\", \"180p_4\"];\n      break;\n\n    case \"240p\":\n    case \"240p_1\":\n      resolution = [\"120p_1\", \"120p_1\", \"240p_1\"];\n      break;\n\n    case \"240p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"240p_3\"];\n      break;\n\n    case \"240p_4\":\n      resolution = [\"120p_4\", \"120p_4\", \"240p_4\"];\n      break;\n\n    case \"360p\":\n    case \"360p_1\":\n    case \"360p_4\":\n    case \"360p_9\":\n    case \"360p_10\":\n    case \"360p_11\":\n      resolution = [\"90p_1\", \"90p_1\", \"360p_1\"];\n      break;\n\n    case \"360p_3\":\n    case \"360p_6\":\n      resolution = [\"120p_3\", \"120p_3\", \"360p_3\"];\n      break;\n\n    case \"360p_7\":\n    case \"360p_8\":\n      resolution = [\"120p_1\", \"120p_1\", \"360p_7\"];\n      break;\n\n    case \"480p\":\n    case \"480p_1\":\n    case \"480p_2\":\n    case \"480p_4\":\n    case \"480p_10\":\n      resolution = [\"120p_1\", \"120p_1\", \"480p_1\"];\n      break;\n\n    case \"480p_3\":\n    case \"480p_6\":\n      resolution = [\"120p_3\", \"120p_3\", \"480p_3\"];\n      break;\n\n    case \"480p_8\":\n    case \"480p_9\":\n      resolution = [\"120p_4\", \"120p_4\", \"480p_8\"];\n      break;\n\n    case \"720p\":\n    case \"720p_1\":\n    case \"720p_2\":\n    case \"720p_3\":\n      resolution = [\"90p_1\", \"90p_1\", \"720p_1\"];\n      break;\n\n    case \"720p_5\":\n    case \"720p_6\":\n      resolution = [\"120p_1\", \"120p_1\", \"720p_5\"];\n      break;\n\n    case \"1080p\":\n    case \"1080p_1\":\n    case \"1080p_2\":\n    case \"1080p_3\":\n    case \"1080p_5\":\n      resolution = [\"90p_1\", \"90p_1\", \"1080p_1\"];\n      break;\n\n    case \"1440p\":\n    case \"1440p_1\":\n    case \"1440p_2\":\n      resolution = [\"90p_1\", \"90p_1\", \"1440p_1\"];\n      break;\n\n    case \"4k\":\n    case \"4k_1\":\n    case \"4k_3\":\n      resolution = [\"90p_1\", \"90p_1\", \"4k_1\"];\n      break;\n\n    default:\n      resolution = [\"120p_1\", \"120p_1\", \"360p_7\"];\n  }\n\n  if ((0, _Browser.isFireFox)()) {\n    return [resolution[1], 30, 100];\n  } else if ((0, _Browser.isSafari)()) {\n    return [resolution[2], 15, 100];\n  } else {\n    return [resolution[0], 15, 100];\n  }\n};\n\nexports.simMap = simMap;\n\n/***/ }),\n/* 33 */,\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Logger = exports.checkSystemRequirements = exports.getDevices = exports.createStream = exports.createClient = exports.LiveTranscoding = exports.TranscodingUser = exports.VIDEO_CODEC_PROFILE_HIGH = exports.VIDEO_CODEC_PROFILE_MAIN = exports.VIDEO_CODEC_PROFILE_BASELINE = exports.AUDIO_SAMPLE_RATE_48000 = exports.AUDIO_SAMPLE_RATE_44100 = exports.AUDIO_SAMPLE_RATE_32000 = undefined;\n\nvar _Client = __webpack_require__(28);\n\nvar _Stream = __webpack_require__(7);\n\nvar _Helper = __webpack_require__(1);\n\nvar _Logger = __webpack_require__(0);\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.AUDIO_SAMPLE_RATE_32000 = _Client.AUDIO_SAMPLE_RATE_32000;\nexports.AUDIO_SAMPLE_RATE_44100 = _Client.AUDIO_SAMPLE_RATE_44100;\nexports.AUDIO_SAMPLE_RATE_48000 = _Client.AUDIO_SAMPLE_RATE_48000;\nexports.VIDEO_CODEC_PROFILE_BASELINE = _Client.VIDEO_CODEC_PROFILE_BASELINE;\nexports.VIDEO_CODEC_PROFILE_MAIN = _Client.VIDEO_CODEC_PROFILE_MAIN;\nexports.VIDEO_CODEC_PROFILE_HIGH = _Client.VIDEO_CODEC_PROFILE_HIGH;\nexports.TranscodingUser = _Client.TranscodingUser;\nexports.LiveTranscoding = _Client.LiveTranscoding;\nexports.createClient = _Client.createClient;\nexports.createStream = _Stream.createStream;\nexports.getDevices = _Stream.getDevices;\nexports.checkSystemRequirements = _Helper.checkSystemRequirements;\nexports.Logger = _Logger2.default;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(36);\nvar bytesToUuid = __webpack_require__(38);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// AgoraRTC-production.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 34);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 604b90e491f3c8ca8ff0","import {getTimestamp} from './Time'\n\n\n/*\n * API to write logs based on traditional logging mechanisms: debug, trace, info, warning, error\n */\nvar Logger = (function () {\n  \"use strict\";\n  var DEBUG = 0, INFO = 1, WARNING = 2, ERROR = 3, NONE = 4, logLevel = DEBUG, setLogLevel, log, debug, info, warning, error;\n\n  // It sets the new log level. We can set it to NONE if we do not want to print logs\n  setLogLevel = function (level) {\n    if (level > NONE) {\n      level = NONE;\n    } else if (level < DEBUG) {\n      level = DEBUG;\n    }\n    logLevel = level;\n  };\n\n  // Generic function to print logs for a given level: [DEBUG, TRACE, INFO, WARNING, ERROR]\n  log = function () {\n    var level = arguments[0];\n    var args = arguments;\n    if (level < logLevel) {\n      return;\n    }\n    switch (level) {\n    case DEBUG:\n      args[0] = getTimestamp() + ' DEBUG:';\n      console.log.apply(console, args);\n      break;\n    case INFO:\n      args[0] = getTimestamp() + ' INFO:';\n      console.log.apply(console, args);\n      break;\n    case WARNING:\n      args[0] = getTimestamp() + ' WARN:';\n      console.warn.apply(console, args);\n      break;\n    case ERROR:\n      args[0] = getTimestamp() + ' ERROR:';\n      console.error.apply(console, args);\n      break;\n    default:\n      args[0] = getTimestamp() + ' DEFAULT:';\n      console.log.apply(console, args);\n      return;\n    }\n  };\n\n  // It prints debug logs\n  debug = function () {\n    var args = [DEBUG];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints info logs\n  info = function () {\n    var args = [INFO];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints warning logs\n  warning = function () {\n    var args = [WARNING];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  // It prints error logs\n  error = function () {\n    var args = [ERROR];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    log.apply(this, args);\n  };\n\n  return {\n    DEBUG: DEBUG,\n    INFO: INFO,\n    WARNING: WARNING,\n    ERROR: ERROR,\n    NONE: NONE,\n    setLogLevel: setLogLevel,\n    log: log,\n    debug: debug,\n    info: info,\n    warning: warning,\n    error: error\n  };\n}());\n\nexport default Logger\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Logger.js","import * as Browser from './utils/Browser';\nimport Logger from './utils/Logger';\nimport uuidv4 from 'uuid/v4';\n\nvar checkSystemRequirements = function() {\n  var PC = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia || (navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n  var webSocket = window.WebSocket;\n  var isAPISupport = !!PC && !!getUserMedia && !!webSocket;\n\n\tvar isVendorAndVersionSupport = false;\n\tLogger.debug(Browser.getBrowserInfo(), \"isAPISupport:\"+isAPISupport);\n\t\n\tif(Browser.isChrome() && Browser.getBrowserVersion() >= 58) {\n\t\tif (Browser.getBrowserOS() !== 'iOS') {\n\t\t\tisVendorAndVersionSupport = true;\n\t\t}\n\t}\n\n  if(Browser.isFireFox() && Browser.getBrowserVersion() >= 56) {\n    isVendorAndVersionSupport = true;\n  }\n\n  if(Browser.isOpera() && Browser.getBrowserVersion() >= 45) {\n    isVendorAndVersionSupport = true;\n  }\n\n  if(Browser.isSafari() && Browser.getBrowserVersion() >= 11) {\n    isVendorAndVersionSupport = true;\n  }\n\n  // if(Browser.isWeChatBrowser() || Browser.isQQBrowser()) {\n  //   isVendorAndVersionSupport = true;\n  // }\n\n  if (!Browser.isSupportedPC() && !Browser.isSupportedMobile()) {\n    isVendorAndVersionSupport = false;\n  }\n\n  return isAPISupport && isVendorAndVersionSupport;\n}\n\nvar safeCall = function() {\n  var callback = arguments[0];\n  if (typeof callback === \"function\") {\n    var args = Array.prototype.slice.call(arguments, 1);\n    callback.apply(null, args);\n  }\n};\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nvar audioLevelHelper = function(stream){\n  this.audioContext = audioContext;\n  this.sourceNode = stream.otWebkitAudioSource || this.audioContext.createMediaStreamSource(stream);\n  this.analyser = this.audioContext.createAnalyser();\n  this.timeDomainData = new Uint8Array(this.analyser.frequencyBinCount);\n  this.sourceNode.connect(this.analyser);\n\n  this.getAudioLevel = function() {\n    if (this.analyser) {\n      this.analyser.getByteTimeDomainData(this.timeDomainData);\n\n      // varies from 0 to 255\n      let max = 0;\n      for (let idx = 0; idx < this.timeDomainData.length; idx++) {\n        max = Math.max(max, Math.abs(this.timeDomainData[idx] - 128));\n      }\n\n      // normalize the collected level to match the range delivered by\n      // the getStats' audioOutputLevel\n      return max / 128;\n    } else {\n      Logger.warning(\"can't find analyser in audioLevelHelper\");\n      return 0;\n    }\n  }\n  return this;\n}\n\nfunction generateSessionId() {\n  return uuidv4().replace(/-/g,\"\").toUpperCase();\n  // return 'xxxxxxxxxxxxxx4xxxxyxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n  //   var r = Math.random() * 16 | 0,\n  //   v= c=='x' ? r : r & 0x3 | 0x8;\n  //   return v.toString(16).toUpperCase();\n  // });\n}\n\n\nvar CSCrashRecord = {\n  shouldBlock: function() {\n    if(localStorage) {\n      var record = JSON.parse(localStorage.getItem(\"agoraCSCrashRecord\"));\n      return record && record.length > 6 ? (new Date().getTime() - record[record.length - 6] - 10000) < 0 ? true : false : false;\n    } else {\n      return false;\n    }\n  },\n  record: function(date) {\n    if(localStorage) {\n      var record = JSON.parse(localStorage.getItem(\"agoraCSCrashRecord\"));\n      record = !record || record.length > 50 ? [] : record;\n      record.push(date);\n      localStorage.setItem(\"agoraCSCrashRecord\", JSON.stringify(record));\n    }\n  }\n}\n\nvar vsResHack = function(stream, onSuccess, onFailure) {\n  try {\n    let video = document.createElement('video');\n    video.setAttribute('autoplay', '');\n    video.setAttribute('muted', '');\n    // in iOS, not this attribute will not trigger 'playing' event\n    video.setAttribute('playsinline', '');\n    video.setAttribute('style', 'width:1px;high:1px;');\n    document.body.appendChild(video);\n    \n    video.addEventListener('playing', ev => {\n      // Firefox will triger this event twice\n      if(Browser.isFireFox()) {\n        if(video.videoWidth) {\n          onSuccess(video.videoWidth, video.videoHeight);\n          document.body.removeChild(video);\n        }\n      } else {\n        onSuccess(video.videoWidth, video.videoHeight);\n        document.body.removeChild(video);\n      }\n    });\n    video.srcObject = stream;\n  } catch (error) {\n    onFailure(error);\n  }\n}\n\n\nexport {\n  checkSystemRequirements, \n  generateSessionId,\n  audioLevelHelper,\n  CSCrashRecord,\n  vsResHack,\n  safeCall\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/Helper.js","/*\n * Class EventDispatcher provides event handling to sub-classes.\n * It is inherited from Publisher, Room, etc.\n */\nvar EventDispatcher = function () {\n    \"use strict\";\n    var that = {};\n    // Private vars\n    that.dispatcher = {};\n    that.dispatcher.eventListeners = {};\n\n    // Public functions\n\n    // It adds an event listener attached to an event type.\n    that.addEventListener = function (eventType, listener) {\n        if (that.dispatcher.eventListeners[eventType] === undefined) {\n            that.dispatcher.eventListeners[eventType] = [];\n        }\n        that.dispatcher.eventListeners[eventType].push(listener);\n    };\n\n    that.on = that.addEventListener;\n\n    // It removes an available event listener.\n    that.removeEventListener = function (eventType, listener) {\n        var index;\n        index = that.dispatcher.eventListeners[eventType].indexOf(listener);\n        if (index !== -1) {\n            that.dispatcher.eventListeners[eventType].splice(index, 1);\n        }\n    };\n\n    // It dispatch a new event to the event listeners, based on the type\n    // of event. All events are intended to be LicodeEvents.\n    that.dispatchEvent = function (event) {\n        var listener;\n        for (listener in that.dispatcher.eventListeners[event.type]) {\n            if (that.dispatcher.eventListeners[event.type].hasOwnProperty(listener) &&\n               typeof that.dispatcher.eventListeners[event.type][listener] === 'function') {\n                that.dispatcher.eventListeners[event.type][listener](event);\n            }\n        }\n    };\n\n    that.dispatchSocketEvent = function (event) {\n        var listener;\n        for (listener in that.dispatcher.eventListeners[event.type]) {\n            if (that.dispatcher.eventListeners[event.type].hasOwnProperty(listener) &&\n               typeof that.dispatcher.eventListeners[event.type][listener] === 'function') {\n                that.dispatcher.eventListeners[event.type][listener](event.msg);\n            }\n        }\n    };\n\n    return that;\n};\n\n// **** EVENTS ****\n\n/*\n * Class LicodeEvent represents a generic Event in the library.\n * It handles the type of event, that is important when adding\n * event listeners to EventDispatchers and dispatching new events.\n * A LicodeEvent can be initialized this way:\n * var event = LicodeEvent({type: \"room-connected\"});\n */\nvar LicodeEvent = function (spec) {\n    \"use strict\";\n    var that = {};\n\n    // Event type. Examples are: 'room-connected', 'stream-added', etc.\n    that.type = spec.type;\n\n    return that;\n};\n\n/*\n * Class StreamEvent represents an event related to a stream. It is a LicodeEvent.\n * It is usually initialized this way:\n * var streamEvent = StreamEvent({type:\"stream-added\", stream:stream1});\n * Event types:\n * 'stream-added' - indicates that there is a new stream available in the room.\n * 'stream-removed' - shows that a previous available stream has been removed from the room.\n */\nvar StreamEvent = function (spec) {\n    \"use strict\";\n    var that = LicodeEvent(spec);\n\n    // The stream related to this event.\n    that.stream = spec.stream;\n    that.reason = spec.reason;\n    that.msg = spec.msg;\n\n    return that;\n};\n\n/*\n * Class ClientEvent represents an event related to a client. It is a LicodeEvent.\n * It is usually initialized this way:\n * var clientEvent = ClientEvent({type:\"client-left\", uid: user, attr: attributes});\n * Event types:\n * 'client-connected' - points out that the user has been successfully connected.\n * 'client-disconnected' - shows that the user has been already disconnected.\n * 'client-joined' - indicates that there is a new client joined.\n * 'client-left' - indicates that a client has left.\n *\n * NOTE: 'client-connected' event shall always trigger 'client-joined' event,\n * while 'client-disconnected' event shall always trigger 'client-left' event;\n */\nvar ClientEvent = function (spec) {\n  \"use strict\";\n  var that = LicodeEvent(spec);\n  that.uid = spec.uid;\n  that.attr = spec.attr;\n  that.stream = spec.stream;\n  return that;\n};\n\n/*\n * Class MediaEvent represents an event related to a getUserMedia(). It is a LicodeEvent.\n * It usually initializes as:\n * var mediaEvent = MediaEvent({})\n * Event types:\n * 'access-accepted' - indicates that the user has accepted to share his camera and microphone\n * 'warning' - details are included in the event message (msg)\n * 'error' - details are included in the event message (msg)\n */\nvar MediaEvent = function (spec) {\n    \"use strict\";\n    var that = LicodeEvent(spec);\n    that.msg = spec.msg;\n    return that;\n};\n\nvar LiveStreamingEvent = function (spec) {\n    \"use strict\";\n    var that = LicodeEvent(spec);\n    that.url = spec.url;\n    that.reason = spec.reason;\n    return that;\n};\n\nexport {EventDispatcher, StreamEvent, ClientEvent, MediaEvent, LiveStreamingEvent}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Events.js","var isChrome = function() {\n\tvar info = getBrowserInfo();\n\treturn info.name && info.name === 'Chrome';\n}\n\nvar isSafari = function() {\n\tvar info = getBrowserInfo()\n\treturn info.name && info.name === 'Safari';\n}\n\nvar isFireFox = function() {\n\tvar info = getBrowserInfo()\n\treturn info.name && info.name === 'Firefox';\n}\n\nvar isOpera = function() {\n\tvar info = getBrowserInfo()\n\treturn info.name && info.name === 'OPR';\n}\n\nvar isQQBrowser = function() {\n\tvar info = getBrowserInfo()\n\treturn info.name && info.name === 'MQQBrowser';\n}\n\nvar isWeChatBrowser = function() {\n\tvar info = getBrowserInfo()\n\treturn info.name && info.name === 'MicroMessenger';\n}\n\nvar isSupportedPC = function() {\n\tvar os = getBrowserOS();\n\treturn os === 'Linux' || os === 'Mac OS X' || os === 'Mac OS' || os.indexOf(\"Windows\") !== -1;\n}\n\nvar isSupportedMobile = function() {\n\tvar os = getBrowserOS();\n\treturn os === 'Android' || os === 'iOS'; \n}\n\nvar getBrowserVersion = function() {\n\tvar info = getBrowserInfo();\n\treturn info.version;\n}\n\nvar getBrowserOS = function() {\n\tvar info = getBrowserInfo();\n\treturn info.os;\n}\n\nvar _getBrowserInfo = function() {\n\tvar ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || []; \n\n\t// TODO: copy from Stack OverFlow, I don't think it works\n\tif(/trident/i.test(M[1])){\n\t\ttem=/\\brv[ :]+(\\d+)/g.exec(ua) || []; \n\t\treturn {name:'IE',version:(tem[1]||'')};\n\t}   \n\n\t// for opera\n\tif(M[1]==='Chrome'){\n\t\ttem=ua.match(/(OPR(?=\\/))\\/?(\\d+)/i);\n\t\tif(tem!=null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for QQ\n\tif(M[1]==='Chrome'){\n\t\ttem=ua.match(/(mqqbrowser(?=\\/))\\/?(\\d+)/i);\n\t\tif(tem!=null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for weChat\n\tif(M[1]==='Chrome'){\n\t\ttem=ua.match(/(micromessenger(?=\\/))\\/?(\\d+)/i);\n\t\tif(tem!=null) {\n\t\t\tM = tem;\n\t\t}\n\t}\n\n\t// for Safari version\n\tif(M[1]==='Safari'){\n\t\tif((tem=ua.match(/version\\/(\\d+)/i))!=null) {\n\t\t\tM[2] = tem[1];\n\t  }\n\t}\n\n\tvar os = undefined;\n\tvar clientStrings = [\n\t\t{s:'Windows 10', r:/(Windows 10.0|Windows NT 10.0)/},\n\t\t{s:'Windows 8.1', r:/(Windows 8.1|Windows NT 6.3)/},\n\t\t{s:'Windows 8', r:/(Windows 8|Windows NT 6.2)/},\n\t\t{s:'Windows 7', r:/(Windows 7|Windows NT 6.1)/},\n\t\t{s:'Windows Vista', r:/Windows NT 6.0/},\n\t\t{s:'Windows Server 2003', r:/Windows NT 5.2/},\n\t\t{s:'Windows XP', r:/(Windows NT 5.1|Windows XP)/},\n\t\t{s:'Windows 2000', r:/(Windows NT 5.0|Windows 2000)/},\n\t\t{s:'Windows ME', r:/(Win 9x 4.90|Windows ME)/},\n\t\t{s:'Windows 98', r:/(Windows 98|Win98)/},\n\t\t{s:'Windows 95', r:/(Windows 95|Win95|Windows_95)/},\n\t\t{s:'Windows NT 4.0', r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},\n\t\t{s:'Windows CE', r:/Windows CE/},\n\t\t{s:'Windows 3.11', r:/Win16/},\n\t\t{s:'Android', r:/Android/},\n\t\t{s:'Open BSD', r:/OpenBSD/},\n\t\t{s:'Sun OS', r:/SunOS/},\n\t\t{s:'Linux', r:/(Linux|X11)/},\n\t\t{s:'iOS', r:/(iPhone|iPad|iPod)/},\n\t\t{s:'Mac OS X', r:/Mac OS X/},\n\t\t{s:'Mac OS', r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},\n\t\t{s:'QNX', r:/QNX/},\n\t\t{s:'UNIX', r:/UNIX/},\n\t\t{s:'BeOS', r:/BeOS/},\n\t\t{s:'OS/2', r:/OS\\/2/},\n\t\t{s:'Search Bot', r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/}\n\t];\n\tfor (var id in clientStrings) {\n\t\t\tvar cs = clientStrings[id];\n\t\t\tif (cs.r.test(navigator.userAgent)) {\n\t\t\t\tos = cs.s;\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\n\treturn {\n\t\tname: M[1],\n\t\tversion: M[2],\n\t\tos: os \n\t};\n}\n\nvar getBrowserInfo = (function() {\n\tvar info = _getBrowserInfo();\n\treturn function() {\n\t\treturn info;\n\t}\n})();\n\nexport {\n\tgetBrowserInfo,\n\tgetBrowserVersion,\n\tgetBrowserOS,\n\tisChrome,\n\tisSafari,\n\tisFireFox,\n\tisOpera,\n\tisQQBrowser,\n\tisWeChatBrowser,\n\tisSupportedPC,\n\tisSupportedMobile\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Browser.js","var GIT_VERSION = \"DEFINE_GIT_VERSION\";\n\nvar VERSION = \"2.1.0\";\n// var WEBCS_DOMAIN = \"webcs-1.agora.io\";\n// var WEBCS_DOMAIN_BACKUP_LIST = [\n//   \"webcs-2.agora.io\",\n//   \"webcs-3.agora.io\",\n//   \"webcs-4.agora.io\",\n// ];\nvar WEBCS_DOMAIN = [\n  \"webcs-1.agora.io\",\n  \"webcs-2.agora.io\",\n]\nvar WEBCS_DOMAIN_BACKUP_LIST = [\n  \"webcs-3.agora.io\",\n  \"webcs-4.agora.io\",\n];\n\nvar EVENT_REPORT_DOMAIN = \"webcollector-1.agora.io\";\nvar EVENT_REPORT_BACKUP_DOMAIN = \"webcollector-2.agora.io\";\n\nvar WEBCS_BACKUP_CONNECT_TIMEOUT = 6000;\nvar HTTP_CONNECT_TIMEOUT = 5000;\n\n\nexport {\n  GIT_VERSION,\n  VERSION,\n  WEBCS_DOMAIN,\n  WEBCS_DOMAIN_BACKUP_LIST,\n\n  EVENT_REPORT_DOMAIN,\n  EVENT_REPORT_BACKUP_DOMAIN,\n\n  WEBCS_BACKUP_CONNECT_TIMEOUT,\n  HTTP_CONNECT_TIMEOUT,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Config.js","/*\n * View class represents a HTML component\n * Every view is an EventDispatcher.\n */\n\nimport {EventDispatcher} from '../Events'\n\nvar View = function (spec) {\n  \"use strict\";\n\n  var that = EventDispatcher(spec);\n\n  // Variables\n\n  // URL where it will look for icons and assets\n  that.url = \".\";\n  return that;\n};\n\nexport default View\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/View.js","import * as config from './Config';\nimport Logger from './utils/Logger'\nimport {post, shouldUseHttps} from './utils/Request'\n\nconst SESSION_INIT       = 'session_init';\nconst JOIN_CHOOSE_SERVER = 'join_choose_server';\nconst JOIN_GATEWAY       = 'join_gateway';\nconst PUBLISH            = 'publish';\nconst SUBSCRIBE          = 'subscribe';\nconst FIRST_REMOTE_FRAME = 'first_remote_frame';\nconst STREAM_SWITCH      = 'stream_switch';\nconst AUDIO_SENDING_STOPPED = 'audio_sending_stopped';\nconst VIDEO_SENDING_STOPPED = 'video_sending_stopped';\n\n\nvar base = {\n  type: null,\n  sid: null,\n  lts: null,\n  succ: null,\n  cname: null,\n  uid: null,\n  peerid: null,\n  cid: null,\n  elaps: null,\n  extend: null,\n  vid: 0,\n}\n\nvar report = (function() {\n    var that = {};\n    that.list = {};\n    that.url = shouldUseHttps() ? \n    `https://${config.EVENT_REPORT_DOMAIN}:6443/events/report` :\n    `http://${config.EVENT_REPORT_DOMAIN}:6080/events/report`;\n\n    that.urlBackup = shouldUseHttps() ? \n    `https://${config.EVENT_REPORT_BACKUP_DOMAIN}:6443/events/report` :\n    `http://${config.EVENT_REPORT_BACKUP_DOMAIN}\":6080/events/report`;\n  \n    that.sessionInit = function(sid, param) {\n      param.sid = sid;\n      var head = Object.assign(base, param);\n      // the first time join\n      if(!that.list[sid]) {\n        head.startTime = +new Date();\n      }\n      var si = Object.assign({}, head);\n      \n      delete head.appid;\n      delete head.mode;\n      that.list[sid] = head;\n      \n      si.extend = null;\n      si.ver = config.VERSION;\n      si.type = SESSION_INIT;\n      si.browser = navigator.userAgent;\n      si.lts = +new Date();\n      si.elaps = si.lts - si.startTime;\n      that.send(si);\n    }\n  \n    that.joinChooseServer = function(sid, param, coverHead) {\n      var jcs;\n      // when multi cs request, only the first result will cover the head\n      if(coverHead) {\n        jcs = Object.assign(that.list[sid], param);  \n      } else {\n        jcs = Object.assign({}, that.list[sid], param);  \n      }\n      jcs.type = JOIN_CHOOSE_SERVER;\n      var endTime = +new Date();\n      jcs.ev_elaps = endTime - jcs.lts;\n      jcs.elaps = endTime - jcs.startTime;\n      jcs.lts = endTime;\n      jcs.serverList = JSON.stringify(jcs.serverList);\n      that.send(jcs);\n    }\n  \n    that.joinGateway = function(sid, param) {\n      var jg = Object.assign(that.list[sid], param);\n      jg.type = JOIN_GATEWAY;\n      var endTime = +new Date();\n      jg.ev_elaps = endTime - jg.lts;\n      jg.elaps = endTime - jg.startTime;\n      jg.lts = endTime;\n      that.send(jg);\n    }\n  \n    that.publish = function(sid, param) {\n      var pu = Object.assign({}, that.list[sid], param);\n      pu.type = PUBLISH;\n      // We have a previous LTS which is defined as a timestamp of start point. Now a new LTS is created for the end point. And ev_elapse is the difference between peers.\n      var endTime = +new Date();\n      pu.ev_elaps = endTime - pu.lts;\n      pu.elaps = endTime - pu.startTime;\n      pu.lts = endTime;\n      that.send(pu);\n    }\n  \n    that.subscribe = function(sid, param) {\n      var sub = Object.assign({}, that.list[sid], param);\n      sub.type = SUBSCRIBE;\n      // We have a previous LTS which is defined as a timestamp of start point. Now a new LTS is created for the end point. And ev_elapse is the difference between peers.\n      var endTime = +new Date();\n      sub.ev_elaps = endTime - sub.lts;\n      sub.elaps = endTime - sub.startTime;\n      sub.lts = endTime;\n      that.send(sub);\n    }\n\n    that.firstRemoteFrame = function(sid, param) {\n      var frf = Object.assign({}, that.list[sid], param);\n      frf.type = FIRST_REMOTE_FRAME;\n      // frf.elaps = null;\n      frf.lts = +new Date();\n      frf.elaps = frf.lts - frf.startTime;\n      that.send(frf);\n    }\n\n    that.streamSwitch = function(sid, param) {\n      var ss = Object.assign({}, that.list[sid], param);\n      ss.type = STREAM_SWITCH;\n      ss.isdual = param.isdual;\n      ss.lts = +new Date();\n      ss.elaps = ss.lts - ss.startTime;\n      that.send(ss);\n    }\n\n    that.audioSendingStopped = function(sid, param) {\n      var ass = Object.assign({}, that.list[sid], param);\n      ass.type = AUDIO_SENDING_STOPPED;\n      ass.lts = +new Date();\n      ass.elaps = ass.lts - ass.startTime;\n      that.send(ass);\n    }\n\n    that.videoSendingStopped = function(sid, param) {\n      var vss = Object.assign({}, that.list[sid], param);\n      vss.type = VIDEO_SENDING_STOPPED;\n      vss.lts = +new Date();\n      vss.elaps = vss.lts - vss.startTime;\n      that.send(vss);\n    }\n\n    that.send = function(data) {\n      try {\n        post(that.url, data, null, function(e) {\n          post(that.urlBackup, data, null, function(e) {\n            // user should not see anything about report\n            // Logger.warning(\"Event report failed\");\n          }, {timeout: 10000});\n        }, {timeout: 10000});\n      } catch (error) {\n        // won't throw out error\n      }\n    }\n    return that;\n  })();\n\nexport {\n  report,\n  SESSION_INIT,\n  JOIN_CHOOSE_SERVER,\n  JOIN_GATEWAY,\n  PUBLISH,\n  SUBSCRIBE,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Report2.js","import VideoPlayer from './views/VideoPlayer'\nimport AudioPlayer from './views/AudioPlayer'\nimport {GetUserMedia} from './Connection'\nimport {EventDispatcher} from './Events'\nimport Logger from './utils/Logger'\nimport {isFireFox, isChrome} from './utils/Browser'\nimport {publishStatsFilter, subscribeStatsFilter} from './Stats'\nimport {audioLevelHelper, vsResHack} from \"./Helper\"\nimport {report} from \"./Report2\"\n\n/*\n * Class Stream represents a local or a remote Stream in the client.\n * It will handle the WebRTC stream and identify the stream and\n * where it should be drawn.\n */\nvar Stream = function (spec) {\n  \"use strict\";\n  var that = EventDispatcher();\n\n  // TODO: rewrite\n  // use to create low stream\n  that.params = Object.assign({}, spec);\n\n  that.stream = spec.stream;\n  that.aux_stream = undefined;\n  that.url = spec.url;\n  that.onClose = undefined;\n  that.local = false;\n  that.video = !!spec.video;\n  that.audio = !!spec.audio;\n  that.screen = !!spec.screen;\n  that.screenAttributes = {width: 1920, height: 1080, maxFr: 5, minFr: 1};\n  that.videoSize = spec.videoSize;\n  that.player = undefined;\n  that.audioLevelHelper = null;\n  spec.attributes = spec.attributes || {};\n\n  that.videoEnabled = true;\n  that.audioEnabled = true;\n  that.lowStream = null;\n\n  that.videoWidth = 0;\n  that.videoHeight = 0;\n\n  that.mirror = spec.mirror === false ? false : true;\n\n  if (that.videoSize !== undefined &&\n      (!(that.videoSize instanceof Array) || that.videoSize.length !== 4)) {\n    throw Error(\"Invalid Video Size\");\n  } else {\n    that.videoSize = [640, 480, 640, 480];\n  }\n\n  if (spec.local === undefined || spec.local === true) {\n    that.local = true;\n  }\n\n  that.initialized = !that.local;\n\n  function isLegacyChrome () {\n    return window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./) !== null &&\n      window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] <= 35;\n  }\n\n  function isFirefox () {\n    return window.navigator.userAgent.match(\"Firefox\") !== null;\n  }\n\n  function getReso(w, h) {\n    return {\n      width: {ideal: w},\n      height: {ideal: h},\n      deviceId: spec.cameraId ? {exact: spec.cameraId} : undefined\n    };\n  }\n\n  var supportedVideoList = {\n    'true': true,\n    'unspecified': true,\n    '90p_1' : getReso(160, 90),\n    '120p_1' : getReso(160, 120),\n    '120p_3' : getReso(120, 120),\n    '120p_4' : getReso(212, 120),\n    '180p_1' : getReso(320, 180),\n    '180p_3' : getReso(180, 180),\n    '180p_4' : getReso(240, 180),\n    '240p_1' : getReso(320, 240),\n    '240p_3' : getReso(240, 240),\n    '240p_4' : getReso(424, 240),\n    '360p_1' : getReso(640, 360),\n    '360p_3' : getReso(360, 360),\n    '360p_4' : getReso(640, 360),\n    '360p_6' : getReso(360, 360),\n    '360p_7' : getReso(480, 360),\n    '360p_8' : getReso(480, 360),\n    '360p_9' : getReso(640, 360),\n    '360p_10': getReso(640, 360),\n    '360p_11': getReso(640, 360),\n    '480p_1' : getReso(640, 480),\n    '480p_2' : getReso(640, 480),\n    '480p_3' : getReso(480, 480),\n    '480p_4' : getReso(640, 480),\n    '480p_6' : getReso(480, 480),\n    '480p_8' : getReso(848, 480),\n    '480p_9' : getReso(848, 480),\n    '480p_10': getReso(640, 480),\n    '720p_1' : getReso(1280, 720),\n    '720p_2' : getReso(1280, 720),\n    '720p_3' : getReso(1280, 720),\n    '720p_5' : getReso(960, 720),\n    '720p_6' : getReso(960, 720),\n    '1080p_1': getReso(1920, 1080),\n    '1080p_2': getReso(1920, 1080),\n    '1080p_3': getReso(1920, 1080),\n    '1080p_5': getReso(1920, 1080),\n    '1440p_1': getReso(2560, 1440),\n    '1440p_2': getReso(2560, 1440),\n    '4k_1'   : getReso(3840, 2160),\n    '4k_3'   : getReso(3840, 2160)\n  };\n\n  that.unmuteAudio = undefined;\n  that.muteAudio = undefined;\n  that.unmuteVideo = undefined;\n  that.muteVideo = undefined;\n\n  that.setVideoResolution = function(resolution) {\n    resolution += '';\n    if (supportedVideoList[resolution] !== undefined) {\n      spec.video = supportedVideoList[resolution];\n      spec.attributes = spec.attributes || {};\n      spec.attributes.resolution = resolution;\n      return true;\n    }\n    return false;\n  };\n\n  that.setVideoFrameRate = function(framerate) {\n    if(isFireFox()) {\n      return false;\n    }\n\n    if (typeof framerate === 'object' &&\n        framerate instanceof Array && framerate.length > 1) {\n      spec.attributes = spec.attributes || {};\n      spec.attributes.minFrameRate = framerate[0];\n      spec.attributes.maxFrameRate = framerate[1];\n      return true;\n    }\n    return false;\n  };\n\n  that.setVideoBitRate = function(bitrate) {\n    if (typeof bitrate === 'object' &&\n        bitrate instanceof Array && bitrate.length > 1) {\n      spec.attributes = spec.attributes || {};\n      spec.attributes.minVideoBW = bitrate[0];\n      spec.attributes.maxVideoBW = bitrate[1];\n      return true;\n    }\n    return false;\n  };\n\n  // Public functions\n  that.setScreenProfile = function (profile) {\n    if (typeof profile == 'string' && that.screen) {\n      switch (profile) {\n      case '480p_1':\n        that.screenAttributes.width = 640;\n        that.screenAttributes.height = 480;\n        that.screenAttributes.maxFr = 5;\n        that.screenAttributes.minFr = 1;\n        break;\n      case '480p_2':\n        that.screenAttributes.width = 640;\n        that.screenAttributes.height = 480;\n        that.screenAttributes.maxFr = 30;\n        that.screenAttributes.minFr = 25;\n        break;\n      case '720p_1':\n        that.screenAttributes.width = 1280;\n        that.screenAttributes.height = 720;\n        that.screenAttributes.maxFr = 5;\n        that.screenAttributes.minFr = 1;\n        break;\n      case '720p_2':\n        that.screenAttributes.width = 1280;\n        that.screenAttributes.height = 720;\n        that.screenAttributes.maxFr = 30;\n        that.screenAttributes.minFr = 25;\n        break;\n      case '1080p_1':\n        that.screenAttributes.width = 1920;\n        that.screenAttributes.height = 1080;\n        that.screenAttributes.maxFr = 5;\n        that.screenAttributes.minFr = 1;\n        break;\n      case '1080p_2':\n        that.screenAttributes.width = 1920;\n        that.screenAttributes.height = 1080;\n        that.screenAttributes.maxFr = 30;\n        that.screenAttributes.minFr = 25;\n        break;\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  that.setVideoProfileCustom = function(profile) {\n    that.setVideoResolution(profile[0]);\n    that.setVideoFrameRate([profile[1], profile[1]]);\n    that.setVideoBitRate([profile[2], profile[2]]);\n  }\n\n  that.setVideoProfile = function (profile) {\n    that.profile = profile;\n    if (typeof profile == 'string' && that.video) {\n      switch (profile) {\n      case '120p':\n      case '120P':\n      case '120p_1':\n      case '120P_1':\n        that.setVideoResolution('120p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 65]);\n        break;\n      case '120p_3':\n      case '120P_3':\n        that.setVideoResolution('120p_3');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 50]);\n        break;\n      case '180p':\n      case '180P':\n      case '180p_1':\n      case '180P_1':\n        that.setVideoResolution('180p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 140]);\n        break;\n      case '180p_3':\n      case '180P_3':\n        that.setVideoResolution('180p_3');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 100]);\n        break;\n      case '180p_4':\n      case '180P_4':\n        that.setVideoResolution('180p_4');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 120]);\n        break;\n      case '240p':\n      case '240P':\n      case '240p_1':\n      case '240P_1':\n        that.setVideoResolution('240p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 200]);\n        break;\n      case '240p_3':\n      case '240P_3':\n        that.setVideoResolution('240p_3');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 140]);\n        break;\n      case '240p_4':\n      case '240P_4':\n        that.setVideoResolution('240p_4');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([10, 220]);\n        break;\n      case '360p':\n      case '360P':\n      case '360p_1':\n      case '360P_1':\n        that.setVideoResolution('360p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 400]);\n        break;\n      case '360p_3':\n      case '360P_3':\n        that.setVideoResolution('360p_3');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 260]);\n        break;\n      case '360p_4':\n      case '360P_4':\n        that.setVideoResolution('360p_4');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 600]);\n        break;\n      case '360p_6':\n      case '360P_6':\n        that.setVideoResolution('360p_6');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 400]);\n        break;\n      case '360p_7':\n      case '360P_7':\n        that.setVideoResolution('360p_7');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 320]);\n        break;\n      case '360p_8':\n      case '360P_8':\n        that.setVideoResolution('360p_8');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 490]);\n        break;\n      case '360p_9':\n      case '360P_9':\n        that.setVideoResolution('360p_9');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 800]);\n        break;\n      case '360p_10':\n      case '360P_10':\n        that.setVideoResolution('360p_10');\n        that.setVideoFrameRate([24, 24]);\n        that.setVideoBitRate([20, 800]);\n        break;\n      case '360p_11':\n      case '360P_11':\n        that.setVideoResolution('360p_11');\n        that.setVideoFrameRate([24, 24]);\n        that.setVideoBitRate([20, 1000]);\n        break;\n      case '480p':\n      case '480P':\n      case '480p_1':\n      case '480P_1':\n        that.setVideoResolution('480p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 500]);\n        break;\n      case '480p_2':\n      case '480P_2':\n        that.setVideoResolution('480p_2');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 1000]);\n        break;\n      case '480p_3':\n      case '480P_3':\n        that.setVideoResolution('480p_3');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 400]);\n        break;\n      case '480p_4':\n      case '480P_4':\n        that.setVideoResolution('480p_4');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 750]);\n        break;\n      case '480p_6':\n      case '480P_6':\n        that.setVideoResolution('480p_6');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 600]);\n        break;\n      case '480p_8':\n      case '480P_8':\n        that.setVideoResolution('480p_8');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 610]);\n        break;\n      case '480p_9':\n      case '480P_9':\n        that.setVideoResolution('480p_9');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([20, 930]);\n        break;\n      case '480p_10':\n      case '480P_10':\n        that.setVideoResolution('480p_10');\n        that.setVideoFrameRate([10, 10]);\n        that.setVideoBitRate([20, 400]);\n        break;\n      case '720p':\n      case '720P':\n      case '720p_1':\n      case '720P_1':\n        that.setVideoResolution('720p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([30, 1130]);\n        break;\n      case '720p_2':\n      case '720P_2':\n        that.setVideoResolution('720p_2');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([30, 2000]);\n        break;\n      case '720p_3':\n      case '720P_3':\n        that.setVideoResolution('720p_3');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([30, 1710]);\n        break;\n      case '720p_5':\n      case '720P_5':\n        that.setVideoResolution('720p_5');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([30, 910]);\n        break;\n      case '720p_6':\n      case '720P_6':\n        that.setVideoResolution('720p_6');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([30, 1380]);\n        break;\n      case '1080p':\n      case '1080P':\n      case '1080p_1':\n      case '1080P_1':\n        that.setVideoResolution('1080p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([50, 2080]);\n        break;\n      case '1080p_2':\n      case '1080P_2':\n        that.setVideoResolution('1080p_2');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([50, 3000]);\n        break;\n      case '1080p_3':\n      case '1080P_3':\n        that.setVideoResolution('1080p_3');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([50, 3150]);\n        break;\n      case '1080p_5':\n      case '1080P_5':\n        that.setVideoResolution('1080p_5');\n        that.setVideoFrameRate([60, 60]);\n        that.setVideoBitRate([50, 4780]);\n        break;\n      case '1440p':\n      case '1440P':\n      case '1440p_1':\n      case '1440P_1':\n        that.setVideoResolution('1440p_1');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([50, 4850]);\n        break;\n      case '1440p_2':\n      case '1440P_2':\n        that.setVideoResolution('1440p_2');\n        that.setVideoFrameRate([60, 60]);\n        that.setVideoBitRate([50, 7350]);\n        break;\n      case '4k':\n      case '4K':\n      case '4k_1':\n      case '4K_1':\n        that.setVideoResolution('4k_1');\n        that.setVideoFrameRate([30, 30]);\n        that.setVideoBitRate([50, 8910]);\n        break;\n      case '4k_3':\n      case '4K_3':\n        that.setVideoResolution('4k_3');\n        that.setVideoFrameRate([60, 60]);\n        that.setVideoBitRate([50, 13500]);\n        break;\n      default:\n        that.setVideoResolution('480p_1');\n        that.setVideoFrameRate([15, 15]);\n        that.setVideoBitRate([20, 500]);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  that.getId = function () {\n    return spec.streamID;\n  };\n\n  that.getAttributes = function () {\n    if (spec.screen) {\n      return that.screenAttributes;\n    } else {\n      return spec.attributes;\n    }\n  };\n\n  // Indicates if the stream has audio activated\n  that.hasAudio = function () {\n    return that.audio;\n  };\n\n  // Indicates if the stream has video activated\n  that.hasVideo = function () {\n    return that.video;\n  };\n\n  // Indicates if the stream has screen activated\n  that.hasScreen = function () {\n    return that.screen;\n  };\n\n  // Indicates if the video track is in playing\n  that.isVideoOn = function () {\n    return (that.hasVideo && that.videoEnabled);\n  }\n\n  // Indicates if the audio track is in playing\n  that.isAudioOn = function () {\n    return (that.hasAudio && that.audioEnabled);\n  }\n\n\n  // Initializes the stream and tries to retrieve a stream from local video and audio\n  // We need to call this method before we can publish it in the client.\n  that.init = function (onSuccess, onFailure) {\n    var lts = new Date().getTime();\n\n    var init_retry = arguments[2];\n    if (init_retry === undefined) {\n      init_retry = 2;\n    } // do not write: var init_retry = arguments[1] || 2;\n    if (that.initialized === true) {\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'warning',\n          msg: 'STREAM_ALREADY_INITIALIZED'\n        });\n      }\n      return;\n    }\n    if (that.local !== true) {\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'warning',\n          msg: 'STREAM_NOT_LOCAL'\n        });\n      }\n      return;\n    }\n    try {\n      if ((spec.audio || spec.video || spec.screen) && spec.url === undefined) {\n        Logger.debug(\"Requested access to local media\");\n        var videoOpt = spec.video;\n        if (spec.screen) {\n          var constraints = {video: videoOpt, audio: spec.audio, screen: true, data: true, extensionId: spec.extensionId, attributes: that.screenAttributes, fake: spec.fake};\n        } else {\n          var constraints = {video: videoOpt, audio: spec.audio, fake: spec.fake};\n          if (!isLegacyChrome()) {\n            var minFr = 30;\n            var maxFr = 30;\n            if (spec.attributes.minFrameRate !== undefined)\n              minFr = spec.attributes.minFrameRate;\n            if (spec.attributes.maxFrameRate !== undefined)\n              maxFr = spec.attributes.maxFrameRate;\n\n            if (!isFirefox()) {\n              if (constraints.audio === true) {\n                constraints.audio = spec.microphoneId ? {deviceId: {exact: spec.microphoneId} } : true;\n              }\n              if (constraints.video === true) {\n                constraints.video = {width: {ideal: that.videoSize[0]}, height: {ideal: that.videoSize[1]}, frameRate: {ideal: minFr, max: maxFr}};\n                that.setVideoBitRate([500, 500]);\n              } else if (typeof constraints.video === 'object') {\n                constraints.video.frameRate = {ideal: minFr, max: maxFr};\n              }\n            } else {\n              if (constraints.video === true) { // video profile not set, use default\n                constraints.video = {width: {ideal: that.videoSize[0]}, height: {ideal: that.videoSize[1]}, frameRate: {ideal: minFr, max: maxFr}};\n                that.setVideoBitRate([500, 500]);\n              } else if (typeof constraints.video === 'object') {\n                constraints.video.frameRate = {ideal: minFr, max: maxFr};\n              }\n            }\n          }\n        }\n        Logger.debug(constraints);\n        var constraints_copy = Object.assign({}, constraints);\n        GetUserMedia(constraints_copy, function (stream) {\n          Logger.debug(\"User has granted access to local media\");\n          that.dispatchEvent({type: 'accessAllowed'});\n          that.stream = stream;\n          that.initialized = true;\n          onSuccess && onSuccess();\n          // get video resolution from <video>\n          if(that.hasVideo()) {\n            vsResHack(stream, (videoWidth, videoHeight) => {\n              that.videoWidth = videoWidth;\n              that.videoHeight = videoHeight;\n            }, (e) => {\n              Logger.warning('vsResHack failed:' + e);\n            })\n          }\n          // when user click button 'stop sharing' on chrome\n          if(spec.screen && isChrome() && that.stream && that.stream.getVideoTracks()[0]) {\n            that.stream.getVideoTracks()[0].onended = () => {\n              that.dispatchEvent({type: 'stopScreenSharing'});\n            }\n          }\n          // report accurate video resolution demo in [sdk].ui.js::videoplayer.js, thru <1>.\n          // 1. from ui display (require ui): $('$streamid')[0].videoWidth, $('$streamid')[0].videoHeight\n          // 2. from webrtc_internals (stream should be published): stream.pc.peerConnection.getStats(function(stats){stats.result();});\n          // 2.1. new method? E.g., stream.getFrameResolution() when pc id ready.\n        }, function (error) {\n          var err = {type: 'error', msg: error.name || error};\n          switch (err.msg) {\n          // below - internally handled\n          case 'Starting video failed':       // firefox: camera possessed by other process?\n          case 'TrackStartError':             // chrome: probably resolution not supported\n            that.videoSize = undefined;\n            if (init_retry > 0) {\n              setTimeout(function () {\n                that.init(onSuccess, onFailure, init_retry-1);\n              }, 1);\n              return;\n            } else {\n              err.msg = 'MEDIA_OPTION_INVALID';\n            }\n            break;\n            // below - exposed\n          case 'DevicesNotFoundError':        // chrome\n            err.msg = 'DEVICES_NOT_FOUND';\n            break;\n          case 'NotSupportedError':           // chrome\n            err.msg = 'NOT_SUPPORTED';\n            break;\n          case 'PermissionDeniedError':       // chrome\n            err.msg = 'PERMISSION_DENIED';\n            that.dispatchEvent({type: 'accessDenied'});\n            break;\n          case 'PERMISSION_DENIED':           // firefox\n            that.dispatchEvent({type: 'accessDenied'});\n            break;\n          case 'InvalidStateError':          // chrome\n              err.msg = 'PERMISSION_DENIED';\n              that.dispatchEvent({type: 'accessDenied'});\n              break;\n          case 'NotAllowedError':           // firefox\n            that.dispatchEvent({type: 'accessDenied'});\n            break;\n          case 'ConstraintNotSatisfiedError': // chrome\n            err.msg = 'CONSTRAINT_NOT_SATISFIED';\n            break;\n          default:\n            if (!err.msg) {\n              err.msg = 'UNDEFINED';\n            }\n          }\n          Logger.error('Media access:', err.msg);\n          if (typeof onFailure === 'function') {\n            onFailure(err);\n          }\n        });\n\n        if (spec.screen && spec.audio) {\n          var theConfig = {video: false, audio: constraints.audio};\n          Logger.debug(theConfig);\n          GetUserMedia(theConfig, function (stream) {\n            Logger.info(\"User has granted access to auxiliary local media.\");\n            that.dispatchEvent({type: 'accessAllowed'});\n            that.aux_stream = stream;\n          }, function (error) {\n            var err = {type: 'error', msg: error.name || error};\n            switch (err.msg) {\n            // below - internally handled\n            case 'Starting video failed':       // firefox: camera possessed by other process?\n            case 'TrackStartError':             // chrome: probably resolution not supported\n              that.videoSize = undefined;\n              if (init_retry > 0) {\n                setTimeout(function () {\n                  that.init(onSuccess, onFailure, init_retry-1);\n                }, 1);\n                return;\n              } else {\n                err.msg = 'MEDIA_OPTION_INVALID';\n              }\n              break;\n              // below - exposed\n            case 'DevicesNotFoundError':        // chrome\n              err.msg = 'DEVICES_NOT_FOUND';\n              break;\n            case 'NotSupportedError':           // chrome\n              err.msg = 'NOT_SUPPORTED';\n              break;\n            case 'PermissionDeniedError':       // chrome\n              err.msg = 'PERMISSION_DENIED';\n              that.dispatchEvent({type: 'accessDenied'});\n              break;\n            case 'InvalidStateError':          // chrome\n              err.msg = 'PERMISSION_DENIED';\n              that.dispatchEvent({type: 'accessDenied'});\n              break;\n            case 'PERMISSION_DENIED':           // firefox\n              that.dispatchEvent({type: 'accessDenied'});\n              break;\n            case 'NotAllowedError':           // firefox\n              that.dispatchEvent({type: 'accessDenied'});\n              break;\n            case 'ConstraintNotSatisfiedError': // chrome\n              err.msg = 'CONSTRAINT_NOT_SATISFIED';\n              break;\n            default:\n              if (!err.msg) {\n                err.msg = 'UNDEFINED';\n              }\n            }\n            Logger.error('Media access:', err.msg);\n            if (typeof onFailure === 'function') {\n              onFailure(err);\n            }\n          });\n        }\n      } else {\n        if (typeof onFailure === 'function') {\n          onFailure({\n            type: 'warning',\n            msg: 'STREAM_HAS_NO_MEDIA_ATTRIBUTES'\n          })\n        }\n      }\n    } catch (e) {\n      Logger.error('Stream init:', e);\n      if (typeof onFailure === 'function') {\n        onFailure({\n          type: 'error',\n          msg: e.message || e\n        })\n      }\n    }\n  };\n\n  that.close = function () {\n    Logger.debug('Close stream with id', spec.streamID);\n    if (that.stream !== undefined) {\n      var tracks = that.stream.getTracks();\n      for (var t in tracks) {\n        if (tracks.hasOwnProperty(t)) {\n          tracks[t].stop();\n        }\n      }\n      that.stream = undefined;\n    }\n\n    that.initialized = false;\n\n    that.unmuteAudio = undefined;\n    that.muteAudio = undefined;\n    that.unmuteVideo = undefined;\n    that.muteVideo = undefined;\n\n    if(that.lowStream) {\n      that.lowStream.close();\n    }\n  };\n\n  that.enableAudio = function () {\n    Logger.debug('Enable audio stream with id', spec.streamID);\n    if (that.hasAudio() &&\n        that.initialized &&\n        that.stream !== undefined &&\n        that.stream.getAudioTracks()[0].enabled !== true) {\n      if (that.unmuteAudio !== undefined) {\n        that.unmuteAudio();\n      }\n      that.audioEnabled = true;\n      that.stream.getAudioTracks()[0].enabled = true;\n      return true;\n    }\n    return false;\n  };\n\n  that.disableAudio = function () {\n    Logger.debug('Disable audio stream with id', spec.streamID);\n    if (that.hasAudio() &&\n        that.initialized &&\n        that.stream !== undefined &&\n        that.stream.getAudioTracks()[0].enabled) {\n      if (that.muteAudio !== undefined) {\n        that.muteAudio();\n      }\n      that.audioEnabled = false;\n      that.stream.getAudioTracks()[0].enabled = false;\n\n      // only loacl stream will have sid\n      if(that.sid) {\n        report.audioSendingStopped(that.sid, {\n          succ: true,\n          reason: 'muteAudio'\n        })\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.enableVideo = function () {\n    Logger.debug('Enable video stream with id', spec.streamID);\n    if (that.initialized &&\n        that.stream !== undefined &&\n        that.stream.getVideoTracks().length &&\n        that.stream.getVideoTracks()[0].enabled !== true) {\n      if (that.unmuteVideo !== undefined) {\n        that.unmuteVideo();\n      }\n      that.videoEnabled = true;\n      that.stream.getVideoTracks()[0].enabled = true;\n      if(that.lowStream) {\n        that.lowStream.enableVideo();\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.disableVideo = function () {\n    Logger.debug('Disable video stream with id', spec.streamID);\n    if (that.initialized &&\n        that.stream !== undefined &&\n        that.stream.getVideoTracks().length &&\n        that.stream.getVideoTracks()[0].enabled) {\n      if (that.muteVideo !== undefined) {\n        that.muteVideo();\n      }\n      that.videoEnabled = false;\n      that.stream.getVideoTracks()[0].enabled = false;\n      if(that.lowStream) {\n        that.lowStream.disableVideo();\n      }\n\n      // only loacl stream will have sid\n      if(that.sid) {\n        report.videoSendingStopped(that.sid, {\n          succ: true,\n          reason: 'muteVideo'\n        })\n      }\n      return true;\n    }\n    return false;\n  };\n\n  that.play = function (elementID, assetsURL) {\n    var options = undefined;\n    that.showing = false;\n    if (!that.local || that.video || that.screen) { //that.hasVideo() may be changed\n      if (elementID !== undefined) {\n        that.player = new VideoPlayer({id: that.getId(), stream: that, elementID: elementID, options: options, url: assetsURL});\n        that.showing = true;\n      }\n    } else if (that.hasAudio()) {\n      that.player = new AudioPlayer({id: that.getId(), stream: that, elementID: elementID, options: options, url: assetsURL});\n      that.showing = true;\n    }\n  };\n\n  that.stop = function () {\n    Logger.debug('Stop stream player with id', spec.streamID);\n    if (that.player !== undefined) {\n      that.player.destroy();\n    }\n  }\n\n\n  that.getStats = function(cb) {\n    if(that.pc && that.pc.getStats) {\n      that.pc.getStats(function(stats) {\n        if(that.pc.isSubscriber) {\n          var filterStats = subscribeStatsFilter(stats);\n          if(isFireFox()) {\n            filterStats.videoReceivedResolutionHeight = that.videoHeight + '';\n            filterStats.videoReceivedResolutionWidth = that.videoWidth + '';\n          }\n          cb && cb(subscribeStatsFilter(stats));\n        } else {\n          var filterStats = publishStatsFilter(stats);\n          if(!isChrome()) {\n            filterStats.videoSendResolutionHeight = that.videoHeight + '';\n            filterStats.videoSendResolutionWidth = that.videoWidth + '';\n          }\n          if(!isChrome() && that.uplinkStats) {\n            filterStats.videoSendBandwidth = that.uplinkStats.uplink_available_bandwidth + \"\";\n            filterStats.videoSendPacketsLost = that.uplinkStats.uplink_cumulative_lost + \"\";\n          }\n          cb && cb(filterStats);\n        }\n      })\n    } else {\n      Logger.warning(\"use getStats after peerConnection established\");\n    }\n  }  \n\n  that.getAudioLevel = function() {\n    if(that.audioLevelHelper) {\n      return that.audioLevelHelper.getAudioLevel();\n    } else {\n      if(that.stream) {\n        if(that.stream.getAudioTracks().length !== 0) {\n          that.audioLevelHelper = new audioLevelHelper(that.stream);\n          return that.audioLevelHelper.getAudioLevel();\n        } else {\n          Logger.warning(\"can't get audioLevel beacuse no audio trace in stream\");  \n        }\n      } else {\n        Logger.warning(\"can't get audioLevel beacuse no stream exist\");\n        return 0;\n      }\n    }\n  }\n\n  return that;\n};\n\nvar createStream = function(spec) {\n  Logger.debug('Create stream with id', spec.streamID);\n  return Stream(spec);\n};\n\nvar getDevices = function(onSuccess, onFailure) {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n    Logger.warning(\"enumerateDevices() not supported.\");\n    onFailure && onFailure(\"enumerateDevices() not supported\");\n  }\n\n  navigator.mediaDevices.enumerateDevices()\n  .then(devices => onSuccess(devices))\n  .catch(err => onFailure && onFailure(err.name + ': ' + err.message));\n}\n\nexport {Stream, createStream, getDevices}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Stream.js","var ErrorCodes = {\n    FAILED: 'FAILED',\n    INVALID_KEY: 'INVALID_KEY',\n    INVALID_OPERATION: 'INVALID_OPERATION',\n    INVALID_PARAMETER: 'INVALID_PARAMETER',\n    INVALID_LOCAL_STREAM: 'INVALID_LOCAL_STREAM',\n    INVALID_REMOTE_STREAM: 'INVALID_REMOTE_STREAM',\n    INVALID_DYNAMIC_KEY: 'INVALID_DYNAMIC_KEY',\n    DYNAMIC_KEY_TIMEOUT: 'DYNAMIC_KEY_TIMEOUT',\n    NO_VOCS_AVAILABLE: 'NO_VOCS_AVAILABLE',\n    NO_VOS_AVAILABLE: 'ERR_NO_VOS_AVAILABLE',\n    JOIN_CHANNEL_TIMEOUT: 'ERR_JOIN_CHANNEL_TIMEOUT',\n    NO_AVAILABLE_CHANNEL: 'NO_AVAILABLE_CHANNEL',\n    LOOKUP_CHANNEL_TIMEOUT: 'LOOKUP_CHANNEL_TIMEOUT',\n    LOOKUP_CHANNEL_REJECTED: 'LOOKUP_CHANNEL_REJECTED',\n    OPEN_CHANNEL_TIMEOUT: 'OPEN_CHANNEL_TIMEOUT',\n    OPEN_CHANNEL_REJECTED: 'OPEN_CHANNEL_REJECTED',\n    REQUEST_DEFERRED: 'REQUEST_DEFERRED',\n\n    SOCKET_ERROR: 'SOCKET_ERROR',\n    SOCKET_DISCONNECTED: 'SOCKET_DISCONNECTED',\n    PEERCONNECTION_FAILED: 'PEERCONNECTION_FAILED',\n    CONNECT_GATEWAY_ERROR: 'CONNECT_GATEWAY_ERROR',\n\n    SERVICE_NOT_AVAILABLE: 'SERVICE_NOT_AVAILABLE',\n    JOIN_CHANNEL_FAILED: 'JOIN_CHANNEL_FAILED',\n    PUBLISH_STREAM_FAILED: 'PUBLISH_STREAM_FAILED',\n    UNPUBLISH_STREAM_FAILED: 'UNPUBLISH_STREAM_FAILED',\n    SUBSCRIBE_STREAM_FAILED: 'SUBSCRIBE_STREAM_FAILED',\n    UNSUBSCRIBE_STREAM_FAILED: 'UNSUBSCRIBE_STREAM_FAILED',\n    NO_SUCH_REMOTE_STREAM: 'NO_SUCH_REMOTE_STREAM',\n\n    ERR_FAILED: '1',\n    ERR_INVALID_VENDOR_KEY: '101',\n    ERR_INVALID_CHANNEL_NAME: '102',\n    WARN_NO_AVAILABLE_CHANNEL: '103',\n    WARN_LOOKUP_CHANNEL_TIMEOUT: '104',\n    WARN_LOOKUP_CHANNEL_REJECTED: '105',\n    WARN_OPEN_CHANNEL_TIMEOUT: '106',\n    WARN_OPEN_CHANNEL_REJECTED: '107',\n    WARN_REQUEST_DEFERRED: '108',\n    ERR_DYNAMIC_KEY_TIMEOUT: '109',\n    ERR_INVALID_DYNAMIC_KEY: '110',\n    ERR_NO_VOCS_AVAILABLE: '2000',\n    ERR_NO_VOS_AVAILABLE: '2001',\n    ERR_JOIN_CHANNEL_TIMEOUT: '2002',\n\n    // for dualStream\n    IOS_NOT_SUPPORT: 'iOS not support dualStream',\n    SHARING_SCREEN_NOT_SUPPORT: 'sharing screen not support dualStream',\n    STILL_ON_PUBLISHING: 'Can\\'t open or close low-Stream when publishing or unpublish high-stream',\n};\n\nexport default ErrorCodes\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ErrorCodes.js","/*global window, document, clearTimeout, setTimeout */\n\n/*\n * Bar represents the bottom menu bar of every mediaPlayer.\n * It contains a Speaker and an icon.\n * Every Bar is a View.\n * Ex.: var bar = Bar({elementID: element, id: id});\n */\nimport View from './View'\nimport Speaker from './Speaker'\n\nvar Bar = function (spec) {\n    \"use strict\";\n    var that = View({}),\n        waiting,\n        show;\n\n    // Variables\n\n    // DOM element in which the Bar will be appended\n    that.elementID = spec.elementID;\n\n    // Bar ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('id', 'bar_' + that.id);\n\n    // Bottom bar\n    that.bar = document.createElement('div');\n    that.bar.setAttribute('style', 'width: 100%; height: 15%; max-height: 30px; position: absolute; bottom: 0; right: 0; background-color: rgba(255,255,255,0.62)');\n    that.bar.setAttribute('id', 'subbar_' + that.id);\n\n    // Lynckia icon\n    that.link = document.createElement('a');\n    that.link.setAttribute('href', 'http://www.lynckia.com/');\n    that.link.setAttribute('target', '_blank');\n\n    that.logo = document.createElement('img');\n    that.logo.setAttribute('style', 'width: 100%; height: 100%; max-width: 30px; position: absolute; top: 0; left: 2px;');\n    that.logo.setAttribute('alt', 'Lynckia');\n    //that.logo.setAttribute('src', that.url + '/assets/star.svg');\n\n    // Private functions\n    show = function (displaying) {\n        if (displaying !== 'block') {\n            displaying = 'none';\n        } else {\n            clearTimeout(waiting);\n        }\n\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: absolute; bottom: 0; right: 0; display:' + displaying);\n    };\n\n    // Public functions\n\n    that.display = function () {\n        show('block');\n    };\n\n    that.hide = function () {\n        waiting = setTimeout(show, 1000);\n    };\n\n    document.getElementById(that.elementID).appendChild(that.div);\n    that.div.appendChild(that.bar);\n    // that.bar.appendChild(that.link);\n    // that.link.appendChild(that.logo);\n\n    // Speaker component\n    if (!spec.stream.screen && (spec.options === undefined || spec.options.speaker === undefined || spec.options.speaker === true)) {\n        that.speaker = new Speaker({elementID: 'subbar_' + that.id, id: that.id, stream: spec.stream, media: spec.media, url: that.url});\n    }\n\n    that.display();\n    that.hide();\n\n    return that;\n};\n\nexport default Bar\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Bar.js","import ChromeCanaryStack from './webrtc-stacks/ChromeCanaryStack'\nimport ChromeStableStack from './webrtc-stacks/ChromeStableStack'\nimport SafariStableStack from './webrtc-stacks/SafariStableStack'\nimport FcStack from './webrtc-stacks/FcStack'\nimport FirefoxStack from './webrtc-stacks/FirefoxStack'\nimport Logger from './utils/Logger'\n\nvar sessionId = 103;\n\nvar Connection = function (spec) {\n  \"use strict\";\n  var that = {};\n\n  spec.session_id = (sessionId += 1);\n\n  // Check which WebRTC Stack is installed.\n  if (typeof window == \"undefined\" || !window.navigator) {\n    Logger.error('Publish/subscribe video/audio streams not supported yet');\n    that = FcStack(spec);\n  } else if (window.navigator.userAgent.match(\"Firefox\") !== null) {\n    // Firefox\n    that.browser = \"mozilla\";\n    that = FirefoxStack(spec);\n  } else if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n    // Safari.\n    Logger.debug(\"Safari\");\n    that = SafariStableStack(spec);\n    that.browser = \"safari\";\n  } else if (window.navigator.userAgent.indexOf(\"MSIE \")) {\n    // Internet Explorer.\n    //Logger.debug(\"IE\");\n    that = ChromeStableStack(spec);\n    that.browser = \"ie\";\n  } else if (window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] >= 26) {\n    // Google Chrome Stable.\n    //Logger.debug(\"Stable\");\n    that = ChromeStableStack(spec);\n    that.browser = \"chrome-stable\";\n  } else if (window.navigator.userAgent.toLowerCase().indexOf(\"chrome\") >= 40) {\n    // Google Chrome Canary.\n    //Logger.debug(\"Canary!\");\n    that = ChromeCanaryStack(spec);\n    that.browser = \"chrome-canary\";\n  } else {\n    // None.\n    that.browser = \"none\";\n    throw \"WebRTC stack not available\";\n  }\n  return that;\n};\n\nvar GetUserMedia = function (config, callback, error) {\n  \"use strict\";\n\n  navigator.getMedia = (navigator.getUserMedia ||\n                        navigator.webkitGetUserMedia ||\n                        navigator.mozGetUserMedia ||\n                        navigator.msGetUserMedia);\n  if (config.screen) {\n    Logger.debug(\"Screen access requested\");\n    if (window.navigator.userAgent.match(\"Firefox\") !== null) {\n      //firefox\n      var theConfig = {};\n      if(config.video.mandatory != undefined){\n        theConfig.video = config.video;\n        theConfig.video.mediaSource = 'window' || 'screen';\n      }else{\n        theConfig = { video: { mediaSource: 'window' || 'screen' }};\n      }\n      navigator.getMedia(theConfig,callback,error);\n    } else if (window.navigator.userAgent.match(\"Chrome\") !==null) {\n      //chrome\n      if (window.navigator.appVersion.match(/Chrome\\/([\\w\\W]*?)\\./)[1] < 34) {\n        error({code: \"This browser does not support screen sharing\"});\n        return;\n      }\n      var extensionId = \"okeephmleflklcdebijnponpabbmmgeo\";\n      if (config.extensionId){\n        Logger.debug(\"extensionId supplied, using \" + config.extensionId);\n        extensionId = config.extensionId;\n      }\n      Logger.debug(\"Screen access on chrome stable, looking for extension\");\n      try {\n        chrome.runtime.sendMessage(\n            extensionId,\n            { getStream: true },\n            function (response) {\n              if (response === undefined) {\n                Logger.debug(\"Access to screen denied\");\n                var theError = {code: \"Access to screen denied\"};\n                error(theError);\n                return;\n              }\n              var theId = response.streamId;\n              var mWidth = config.attributes.width;\n              var mHeight = config.attributes.height;\n              var maxFr = config.attributes.maxFr;\n              var minFr = config.attributes.minFr;\n              theConfig = {\n                video: { mandatory:\n                  { chromeMediaSource: 'desktop',  chromeMediaSourceId: theId, maxHeight: mHeight, maxWidth: mWidth, maxFrameRate: maxFr, minFrameRate: minFr}}};\n              navigator.getMedia(theConfig,callback,error);\n        });\n      } catch (e) {\n        Logger.debug(\"AgoraRTC screensharing plugin is not accessible\");\n        var theError = {code: \"no_plugin_present\"};\n        error(theError);\n        return;\n      }\n    } else {\n      Logger.debug(\"This browser does not support screenSharing\");\n    }\n  } else if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n    navigator.mediaDevices.getUserMedia(config).then(callback).catch(error);\n  } else {\n    if (typeof navigator == 'undefined' || !navigator.getMedia) {\n      Logger.error('Video/audio streams not supported yet');\n    } else {\n      navigator.getMedia(config, callback, error);\n    }\n  }\n};\n\nexport {Connection, GetUserMedia}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Connection.js","var AgoraCall = function (callback) {\n    if (callback) {\n        callback.apply(this, [].slice.call(arguments,1));\n    }\n};\n\nexport default AgoraCall\n\n\n// WEBPACK FOOTER //\n// ./src/utils/AgoraCall.js","import * as config from '../Config';\n\nvar post = function (url, data, success, failure) {\n  var xhr = new XMLHttpRequest();\n  xhr.timeout = data.timeout || config.HTTP_CONNECT_TIMEOUT;\n  xhr.open(\"POST\", url, true);\n  xhr.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\");\n  xhr.onload = function (e) {\n    success && success(xhr.responseText);\n  };\n  xhr.onerror = function (e) {\n    failure && failure(e, url);\n  };\n  xhr.ontimeout = function (e) {\n    failure && failure(e, url);\n  }\n  xhr.send(JSON.stringify(data));\n};\n\nvar shouldUseHttps = function() {\n  return \"https:\" == document.location.protocol ? true : false;\n}\n\nexport { post, shouldUseHttps };\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Request.js","import * as config from './Config';\nimport Logger from \"./utils/Logger\"\nimport ErrorCodes from \"./utils/ErrorCodes\"\nimport {post, shouldUseHttps} from './utils/Request';\nimport {report} from \"./Report2\";\nimport { CSCrashRecord } from './Helper';\n\nvar requestChooseServer = function(url, option, onSuccess, onFailure) {\n  var lts = new Date().getTime();\n\n  var csOption = {\n    key: option.appId,\n    cname: option.cname,\n    uid: option.uid\n  }\n\n  post(url, csOption, function (res) {\n    var response = JSON.parse(res);\n    var error = response.error;\n\n    if (error != undefined) {\n      report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: error,\n      })\n      onFailure(\"Get server node failed [\" + error + \"]\", url);\n\n    } else {\n      onSuccess(response, url);\n    }\n  }, function (e, url) {\n    if(e.type === \"timeout\") {\n      report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: \"timeout\",\n      })\n      onFailure(\"Connect choose server timeout\", url);\n\n    } else {\n      report.joinChooseServer(option.sid, {\n        lts: lts,\n        succ: false,\n        csAddr: url,\n        serverList: null,\n        ec: \"server_wrong\",\n      })\n      // onFailure(\"Connect choose server error\", url);\n    }\n  });\n}\n\nvar requestGatewayList = function(joinInfo, onSuccess, onFailure) {\n  var lts = new Date().getTime();\n  var connected = false;\n  CSCrashRecord.record(lts);\n\n  var success = function(response, url) {\n    if(!connected) {\n      clearTimeout(st);\n      connected = true;\n      Logger.debug(\"Get gateway address:\", response.gateway_addr);\n      onSuccess(response);\n\n      report.joinChooseServer(joinInfo.sid,{\n        lts: lts,\n        succ: true,\n        csAddr: url,\n        serverList: response.gateway_addr,\n        cid: response.cid + \"\",\n        uid: response.uid + \"\",\n        ec: null,\n      }, true);\n\n    } else {\n      report.joinChooseServer(joinInfo.sid,{\n        lts: lts,\n        succ: true,\n        csAddr: url,\n        serverList: response.gateway_addr,\n        cid: response.cid + \"\",\n        uid: response.uid + \"\",\n        ec: null,\n      }, false);\n    }\n  }\n\n  var failed = function(e, url) {\n    Logger.error(e, url);\n  }\n\n  var domainlist = config.WEBCS_DOMAIN\n  for (var i = 0; i < domainlist.length; ++i) { \n    var csURL;\n    csURL = shouldUseHttps() ? \n      \"https://\" + domainlist[i] + \":5668/getwebgw/jsonp\" :\n      \"http://\" + domainlist[i] + \":5669/getwebgw/jsonp\";\n    // Logger.debug(\"Connect to backup_choose_server:\", csURL);\n    requestChooseServer(csURL, joinInfo, success, failed);\n  }\n\n  var st = setTimeout(function() {\n    if(!connected) {\n      var backupList = config.WEBCS_DOMAIN_BACKUP_LIST;\n      for (var i = 0; i < backupList.length; ++i) { \n        var csURL;\n        csURL = shouldUseHttps() ? \n          \"https://\" + backupList[i] + \":5668/getwebgw/jsonp\" :\n          \"http://\" + backupList[i] + \":5669/getwebgw/jsonp\";\n        // Logger.debug(\"Connect to backup_choose_server:\", csURL);\n        requestChooseServer(csURL, joinInfo, success, failed);\n      }\n    }\n  }, 1000);\n  \n  setTimeout(function() {\n    if(!connected) {\n      onFailure();\n    }\n  }, config.WEBCS_BACKUP_CONNECT_TIMEOUT);\n}\n\n//TODO: put it in Controll layer\nvar getGatewayList = function(param, onSuccess, onFailure) {\n  var isSuccess = false;\n  var timer = null;\n  var times = 1;\n\n  var request = function() {\n    // To prevent so many request that make server crash.\n    if(CSCrashRecord.shouldBlock()) {\n      Logger.warning(\"CS connetion crash too many times in 10s\");\n      return onFailure && onFailure();\n    }\n\n    if(!isSuccess) {\n      requestGatewayList(param, function(gatewayAddr) {\n        isSuccess = true;\n        clearTimeout(timer);\n        onSuccess(gatewayAddr);\n      }, function() {\n        // Backoff mechanism is reconnecting after double previous time,like 1,2,4,8,16,32... until 3600.\n        Logger.debug(\"Request gateway list will be restart in \"+ times +\"s\");\n        timer = setTimeout(function() {\n          request();\n        }, times * 1000);  \n        times = times >= 3600 ? 3600 : times*2;\n      });    \n\n    }\n  }\n  request();\n}\n\nexport {getGatewayList}\n\n\n// WEBPACK FOOTER //\n// ./src/Server.js","var getTimestamp = function() {\n\tvar date = new Date();\n\treturn  date.toTimeString().split(\" \")[0] + \":\" + date.getMilliseconds();\n}\n\nexport {\n\tgetTimestamp\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Time.js","/*global window, console, document, webkitURL*/\n/*\n * VideoPlayer represents a Licode video component that shows either a local or a remote video.\n * Ex.: var player = VideoPlayer({id: id, stream: stream, elementID: elementID});\n * A VideoPlayer is also a View component.\n */\nimport View from './View'\nimport Bar from './Bar'\nimport ResizeSensor from 'css-element-queries/src/ResizeSensor'\nimport Logger from '../utils/Logger'\nimport {attachMediaStream} from '../vendor/adapter'\n\nvar VideoPlayer = function (spec) {\n    \"use strict\";\n\n    var that = View({}),\n        onmouseover,\n        onmouseout;\n\n    // Variables\n\n    // VideoPlayer ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Stream that the VideoPlayer will play\n    that.stream = spec.stream.stream;\n\n    // DOM element in which the VideoPlayer will be appended\n    that.elementID = spec.elementID;\n\n    // Public functions\n\n    // It will stop the VideoPlayer and remove it from the HTML\n    that.destroy = function () {\n        // document.getElementById('video'+that.id).srcObject = null;\n        // document.getElementById('audio'+that.id).srcObject = null;\n        that.video.srcObject = null;\n        that.audio.srcObject = null;\n        that.video.pause();\n        delete that.resizer;\n        document.getElementById(that.div.id) && that.parentNode.removeChild(that.div);\n    };\n\n    that.resize = function () {\n\n        var width = that.container.offsetWidth,\n            height = that.container.offsetHeight;\n\n        if (spec.stream.screen) {\n\n            if (width * (3 / 4) < height) {\n\n                that.video.style.width = width + \"px\";\n                that.video.style.height = (3 / 4) * width + \"px\";\n\n                that.video.style.top = -((3 / 4) * width / 2 - height / 2) + \"px\";\n                that.video.style.left = \"0px\";\n\n            } else {\n\n                that.video.style.height = height + \"px\";\n                that.video.style.width = (4 / 3) * height + \"px\";\n\n                that.video.style.left = -((4 / 3) * height / 2 - width / 2) + \"px\";\n                that.video.style.top = \"0px\";\n\n            }\n        } else {\n            if (width !== that.containerWidth || height !== that.containerHeight) {\n\n                if (width * (3 / 4) > height) {\n\n                    that.video.style.width = width + \"px\";\n                    that.video.style.height = (3 / 4) * width + \"px\";\n\n                    that.video.style.top = -((3 / 4) * width / 2 - height / 2) + \"px\";\n                    that.video.style.left = \"0px\";\n\n                } else {\n\n                    that.video.style.height = height + \"px\";\n                    that.video.style.width = (4 / 3) * height + \"px\";\n\n                    that.video.style.left = -((4 / 3) * height / 2 - width / 2) + \"px\";\n                    that.video.style.top = \"0px\";\n\n                }\n            }\n        }\n\n        that.containerWidth = width;\n        that.containerHeight = height;\n\n    };\n\n    /*window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n        document.getElementById(key).value = unescape(value);\n    });*/\n\n    //Logger.debug('Creating URL from stream ' + that.stream);\n    //var myURL = window.URL || webkitURL;\n    //that.stream_url = myURL.createObjectURL(that.stream);\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('id', 'player_' + that.id);\n    if (spec.stream.video) {\n      that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; background-color: black; overflow: hidden;');\n    } else {\n      that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; overflow: hidden;');\n    }\n\n    // Loader icon\n    //that.loader = document.createElement('img');\n    //that.loader.setAttribute('style', 'width: 16px; height: 16px; position: absolute; top: 50%; left: 50%; margin-top: -8px; margin-left: -8px');\n    //that.loader.setAttribute('id', 'back_' + that.id);\n    //that.loader.setAttribute('src', that.url + '/assets/loader.gif');\n\n    // Video tag\n    that.video = document.createElement('video');\n    that.video.setAttribute('id', 'video' + that.id);\n    if(spec.stream.local && !spec.stream.screen) {\n        if(spec.stream.mirror) {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; transform: rotateY(180deg);');\n        } else {\n            that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; ');\n        }\n    } else {\n\tif (spec.stream.video) {\n          that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute;');\n          if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n            that.video.setAttribute('controls', '');\n          }\n\t} else if (spec.stream.screen) {\n          that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute;');\n\t} else {\n          that.video.setAttribute('style', 'width: 100%; height: 100%; position: absolute; display: none;');\n\t}\n    }\n    that.video.setAttribute('autoplay', '');\n    that.video.setAttribute('muted', '');\n    that.video.setAttribute('playsinline', '');\n\n    if (spec.stream.local) {\n        that.video.volume = 0;\n        that.video.setAttribute('muted', '');\n    }\n\n    // Audio tag\n    that.audio = document.createElement('audio');\n    that.audio.setAttribute('id', 'audio' + that.id);\n    that.audio.setAttribute('autoplay', '');\n\n    if (spec.stream.local) {\n        that.audio.volume = 0;\n        that.audio.setAttribute('muted', '');\n    }\n\n    if (that.elementID !== undefined) {\n        document.getElementById(that.elementID).appendChild(that.div);\n        that.container = document.getElementById(that.elementID);\n    } else {\n        document.body.appendChild(that.div);\n        that.container = document.body;\n    }\n\n    that.parentNode = that.div.parentNode;\n\n    //that.div.appendChild(that.loader);\n    that.div.appendChild(that.video);\n    that.div.appendChild(that.audio);\n    that.video.addEventListener(\"playing\", function (evt) {\n        var display = function () {\n            if (that.video.videoWidth * that.video.videoHeight > 4) { // why remote video size initially is 2*2 in chrome?\n                Logger.debug('video dimensions:', that.video.videoWidth, that.video.videoHeight);\n                return;\n            }\n            setTimeout(display, 50);\n        };\n        display();\n    });\n\n    that.containerWidth = 0;\n    that.containerHeight = 0;\n\n    that.resizer = new ResizeSensor(that.container, that.resize);\n\n    that.resize();\n\n    attachMediaStream(document.getElementById('video'+that.id), spec.stream.stream);\n    attachMediaStream(document.getElementById('audio'+that.id), spec.stream.stream);\n\n    return that;\n};\n\nexport default VideoPlayer\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/VideoPlayer.js","/*global window, console, document */\n/*\n * Speaker represents the volume icon that will be shown in the mediaPlayer, for example.\n * It manages the volume level of the media tag given in the constructor.\n * Every Speaker is a View.\n * Ex.: var speaker = Speaker({elementID: element, media: mediaTag, id: id});\n */\nimport View from './View'\n\nvar Speaker = function (spec) {\n    \"use strict\";\n    var that = View({}),\n        show,\n        mute,\n        unmute,\n        lastVolume = 50;\n\n    // Variables\n\n    // DOM element in which the Speaker will be appended\n    that.elementID = spec.elementID;\n\n    // media tag\n    that.media = spec.media;\n\n    // Speaker id\n    that.id = spec.id;\n\n    // Assets URL\n    if (spec.url !== undefined) {\n      that.url = spec.url;\n    }\n\n    // MediaStream\n    that.stream = spec.stream;\n\n    // Container\n    that.div = document.createElement('div');\n    that.div.setAttribute('style', 'width: 40%; height: 100%; max-width: 32px; position: absolute; right: 0;z-index:0;');\n\n    // Volume icon\n    that.icon = document.createElement('img');\n    that.icon.setAttribute('id', 'volume_' + that.id);\n    that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n    that.icon.setAttribute('style', 'width: 80%; height: 100%; position: absolute;');\n    that.div.appendChild(that.icon);\n\n\n    if (!that.stream.local) {\n\n        // Volume bar\n        that.picker = document.createElement('input');\n        that.picker.setAttribute('id', 'picker_' + that.id);\n        that.picker.type = \"range\";\n        that.picker.min = 0;\n        that.picker.max = 100;\n        that.picker.step = 10;\n        that.picker.value = lastVolume;\n        that.picker.setAttribute(\"orient\", \"vertical\"); //  FireFox supports range sliders as of version 23\n\n\tthat.div.appendChild(that.picker);\n        that.media.volume = that.picker.value / 100;\n        that.media.muted = false;\n\n        that.picker.oninput = function () {\n            if (that.picker.value > 0) {\n                that.media.muted = false;\n                that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            } else {\n                that.media.muted = true;\n                that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            }\n            that.media.volume = that.picker.value / 100;\n        };\n\n        // Private functions\n        show = function (displaying) {\n            that.picker.setAttribute('style', 'background: transparent; width: 32px; height: 100px; position: absolute; bottom: 90%; z-index: 1;' + that.div.offsetHeight + 'px; right: 0px; -webkit-appearance: slider-vertical; display: ' + displaying);\n        };\n\n        mute = function () {\n            that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            lastVolume = that.picker.value;\n            that.picker.value = 0;\n            that.media.volume = 0;\n            that.media.muted = true;\n        };\n\n        unmute = function () {\n            that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            that.picker.value = lastVolume;\n            that.media.volume = that.picker.value / 100;\n            that.media.muted = false;\n        };\n\n        that.icon.onclick = function () {\n            if (that.media.muted) {\n                unmute();\n            } else {\n                mute();\n            }\n        };\n\n        // Public functions\n        that.div.onmouseover = function () {\n            show('block');\n        };\n\n        that.div.onmouseout = function () {\n            show('none');\n        };\n\n        show('none');\n\n    } else {\n\n        mute = function () {\n            that.media.muted = true;\n            that.icon.setAttribute('src', that.url + '/assets/mute48.png');\n            //that.stream.stream.getAudioTracks()[0].enabled = false;\n        };\n\n        unmute = function () {\n            that.media.muted = false;\n            that.icon.setAttribute('src', that.url + '/assets/sound48.png');\n            //that.stream.stream.getAudioTracks()[0].enabled = true;\n        };\n\n        that.icon.onclick = function () {\n            if (that.media.muted) {\n                unmute();\n            } else {\n                mute();\n            }\n        };\n    }\n\n    document.getElementById(that.elementID).appendChild(that.div);\n    return that;\n};\n\nexport default Speaker\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Speaker.js","/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n;\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(this, function () {\n\n    //Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // Only used for the dirty checking, so the event callback count is limted to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        function (fn) {\n            return window.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function() {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call();\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            }\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         * @param {HTMLElement} element\n         * @param {String}      prop\n         * @returns {String|Number}\n         */\n        function getComputedStyle(element, prop) {\n            if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else if (window.getComputedStyle) {\n                return window.getComputedStyle(element, null).getPropertyValue(prop);\n            } else {\n                return element.style[prop];\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element.resizedAttached) {\n                element.resizedAttached = new EventQueue();\n                element.resizedAttached.add(resized);\n            } else if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.className = 'resize-sensor';\n            var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;';\n            var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n\n            element.resizeSensor.style.cssText = style;\n            element.resizeSensor.innerHTML =\n                '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + '\"></div>' +\n                '</div>' +\n                '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' +\n                    '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' +\n                '</div>';\n            element.appendChild(element.resizeSensor);\n\n            if (getComputedStyle(element, 'position') == 'static') {\n                element.style.position = 'relative';\n            }\n\n            var expand = element.resizeSensor.childNodes[0];\n            var expandChild = expand.childNodes[0];\n            var shrink = element.resizeSensor.childNodes[1];\n            var dirty, rafId, newWidth, newHeight;\n            var lastWidth = element.offsetWidth;\n            var lastHeight = element.offsetHeight;\n\n            var reset = function() {\n                expandChild.style.width = '100000px';\n                expandChild.style.height = '100000px';\n\n                expand.scrollLeft = 100000;\n                expand.scrollTop = 100000;\n\n                shrink.scrollLeft = 100000;\n                shrink.scrollTop = 100000;\n            };\n\n            reset();\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = newWidth;\n                lastHeight = newHeight;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call();\n                }\n            };\n\n            var onScroll = function() {\n                newWidth = element.offsetWidth;\n                newHeight = element.offsetHeight;\n                dirty = newWidth != lastWidth || newHeight != lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if(elem.resizedAttached && typeof ev == \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    return ResizeSensor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-element-queries/src/ResizeSensor.js\n// module id = 18\n// module chunks = 0 1","/*\n *  Copyright (c) 2014 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n\n/* More information about these options at jshint.com/docs/options */\n/* jshint browser: true, camelcase: true, curly: true, devel: true,\n eqeqeq: true, forin: false, globalstrict: true, node: true,\n quotmark: single, undef: true, unused: strict */\n/* global mozRTCIceCandidate, mozRTCPeerConnection, Promise,\n mozRTCSessionDescription, webkitRTCPeerConnection, MediaStreamTrack */\n/* exported trace,requestUserMedia */\n\n'use strict';\n\nvar getUserMedia = null;\nvar attachMediaStream = null;\nvar reattachMediaStream = null;\nvar webrtcDetectedBrowser = null;\nvar webrtcDetectedVersion = null;\nvar webrtcMinimumVersion = null;\nvar webrtcUtils = {\n    log: function() {\n        // suppress console.log output when being included as a module.\n        if (typeof module !== 'undefined' ||\n            typeof require === 'function' && typeof define === 'function') {\n            return;\n        }\n        console.log.apply(console, arguments);\n    },\n    extractVersion: function(uastring, expr, pos) {\n        var match = uastring.match(expr);\n        return match && match.length >= pos && parseInt(match[pos]);\n    }\n};\n\nfunction trace(text) {\n    // This function is used for logging.\n    if (text[text.length - 1] === '\\n') {\n        text = text.substring(0, text.length - 1);\n    }\n    if (window.performance) {\n        var now = (window.performance.now() / 1000).toFixed(3);\n        webrtcUtils.log(now + ': ' + text);\n    } else {\n        webrtcUtils.log(text);\n    }\n}\n\nif (typeof window === 'object') {\n    if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n            get: function() {\n                // If prefixed srcObject property exists, return it.\n                // Otherwise use the shimmed property, _srcObject\n                return 'mozSrcObject' in this ? this.mozSrcObject : this._srcObject;\n            },\n            set: function(stream) {\n                if ('mozSrcObject' in this) {\n                    this.mozSrcObject = stream;\n                } else {\n                    // Use _srcObject as a private property for this shim\n                    this._srcObject = stream;\n                    // TODO: revokeObjectUrl(this.src) when !stream to release resources?\n                    this.src = URL.createObjectURL(stream);\n                }\n            }\n        });\n    }\n    // Proxy existing globals\n    getUserMedia = window.navigator && window.navigator.getUserMedia;\n}\n\n// Attach a media stream to an element.\nattachMediaStream = function(element, stream) {\n    element.srcObject = stream;\n};\n\nreattachMediaStream = function(to, from) {\n    to.srcObject = from.srcObject;\n};\n\nif (typeof window === 'undefined' || !window.navigator) {\n    webrtcUtils.log('This does not appear to be a browser');\n    webrtcDetectedBrowser = 'not a browser';\n} else if (navigator.mozGetUserMedia && window.mozRTCPeerConnection) {\n    webrtcUtils.log('This appears to be Firefox');\n\n    webrtcDetectedBrowser = 'firefox';\n\n    // the detected firefox version.\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n        /Firefox\\/([0-9]+)\\./, 1);\n\n    // the minimum firefox version still supported by adapter.\n    webrtcMinimumVersion = 31;\n\n    // The RTCPeerConnection object.\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (webrtcDetectedVersion < 38) {\n            // .urls is not supported in FF < 38.\n            // create RTCIceServers with a single url.\n            if (pcConfig && pcConfig.iceServers) {\n                var newIceServers = [];\n                for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                    var server = pcConfig.iceServers[i];\n                    if (server.hasOwnProperty('urls')) {\n                        for (var j = 0; j < server.urls.length; j++) {\n                            var newServer = {\n                                url: server.urls[j]\n                            };\n                            if (server.urls[j].indexOf('turn') === 0) {\n                                newServer.username = server.username;\n                                newServer.credential = server.credential;\n                            }\n                            newIceServers.push(newServer);\n                        }\n                    } else {\n                        newIceServers.push(pcConfig.iceServers[i]);\n                    }\n                }\n                pcConfig.iceServers = newIceServers;\n            }\n        }\n        return new mozRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n    };\n\n    // The RTCSessionDescription object.\n    if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = mozRTCSessionDescription;\n    }\n\n    // The RTCIceCandidate object.\n    if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = mozRTCIceCandidate;\n    }\n\n    // getUserMedia constraints shim.\n    getUserMedia = function(constraints, onSuccess, onError) {\n        var constraintsToFF37 = function(c) {\n            if (typeof c !== 'object' || c.require) {\n                return c;\n            }\n            var require = [];\n            Object.keys(c).forEach(function(key) {\n                if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                    return;\n                }\n                var r = c[key] = (typeof c[key] === 'object') ?\n                    c[key] : {ideal: c[key]};\n                if (r.min !== undefined ||\n                    r.max !== undefined || r.exact !== undefined) {\n                    require.push(key);\n                }\n                if (r.exact !== undefined) {\n                    if (typeof r.exact === 'number') {\n                        r.min = r.max = r.exact;\n                    } else {\n                        c[key] = r.exact;\n                    }\n                    delete r.exact;\n                }\n                if (r.ideal !== undefined) {\n                    c.advanced = c.advanced || [];\n                    var oc = {};\n                    if (typeof r.ideal === 'number') {\n                        oc[key] = {min: r.ideal, max: r.ideal};\n                    } else {\n                        oc[key] = r.ideal;\n                    }\n                    c.advanced.push(oc);\n                    delete r.ideal;\n                    if (!Object.keys(r).length) {\n                        delete c[key];\n                    }\n                }\n            });\n            if (require.length) {\n                c.require = require;\n            }\n            return c;\n        };\n        if (webrtcDetectedVersion < 38) {\n            webrtcUtils.log('spec: ' + JSON.stringify(constraints));\n            if (constraints.audio) {\n                constraints.audio = constraintsToFF37(constraints.audio);\n            }\n            if (constraints.video) {\n                constraints.video = constraintsToFF37(constraints.video);\n            }\n            webrtcUtils.log('ff37: ' + JSON.stringify(constraints));\n        }\n        return navigator.mozGetUserMedia(constraints, onSuccess, onError);\n    };\n\n    navigator.getUserMedia = getUserMedia;\n\n    // Shim for mediaDevices on older versions.\n    if (!navigator.mediaDevices) {\n        navigator.mediaDevices = {getUserMedia: requestUserMedia,\n            addEventListener: function() { },\n            removeEventListener: function() { }\n        };\n    }\n    navigator.mediaDevices.enumerateDevices =\n        navigator.mediaDevices.enumerateDevices || function() {\n            return new Promise(function(resolve) {\n                var infos = [\n                    {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n                    {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n                ];\n                resolve(infos);\n            });\n        };\n\n    if (webrtcDetectedVersion < 41) {\n        // Work around http://bugzil.la/1169665\n        var orgEnumerateDevices =\n            navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n        navigator.mediaDevices.enumerateDevices = function() {\n            return orgEnumerateDevices().then(undefined, function(e) {\n                if (e.name === 'NotFoundError') {\n                    return [];\n                }\n                throw e;\n            });\n        };\n    }\n} else if (navigator.webkitGetUserMedia && window.webkitRTCPeerConnection) {\n    webrtcUtils.log('This appears to be Chrome');\n\n    webrtcDetectedBrowser = 'chrome';\n\n    // the detected chrome version.\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n    // the minimum chrome version still supported by adapter.\n    webrtcMinimumVersion = 38;\n\n    // The RTCPeerConnection object.\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n            pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints); // jscs:ignore requireCapitalizedConstructors\n        var origGetStats = pc.getStats.bind(pc);\n        pc.getStats = function(selector, successCallback, errorCallback) { // jshint ignore: line\n            var self = this;\n            var args = arguments;\n\n            // If selector is a function then we are in the old style stats so just\n            // pass back the original getStats format to avoid breaking old users.\n            if (arguments.length > 0 && typeof selector === 'function') {\n                return origGetStats(selector, successCallback);\n            }\n\n            var fixChromeStats = function(response) {\n                var standardReport = {};\n                var reports = response.result();\n                reports.forEach(function(report) {\n                    var standardStats = {\n                        id: report.id,\n                        timestamp: report.timestamp,\n                        type: report.type\n                    };\n                    report.names().forEach(function(name) {\n                        standardStats[name] = report.stat(name);\n                    });\n                    standardReport[standardStats.id] = standardStats;\n                });\n\n                return standardReport;\n            };\n\n            if (arguments.length >= 2) {\n                var successCallbackWrapper = function(response) {\n                    args[1](fixChromeStats(response));\n                };\n\n                return origGetStats.apply(this, [successCallbackWrapper, arguments[0]]);\n            }\n\n            // promise-support\n            return new Promise(function(resolve, reject) {\n                if (args.length === 1 && selector === null) {\n                    origGetStats.apply(self, [\n                        function(response) {\n                            resolve.apply(null, [fixChromeStats(response)]);\n                        }, reject]);\n                } else {\n                    origGetStats.apply(self, [resolve, reject]);\n                }\n            });\n        };\n\n        return pc;\n    };\n\n    // add promise support\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = webkitRTCPeerConnection.prototype[method];\n        webkitRTCPeerConnection.prototype[method] = function() {\n            var self = this;\n            if (arguments.length < 1 || (arguments.length === 1 &&\n                typeof(arguments[0]) === 'object')) {\n                var opts = arguments.length === 1 ? arguments[0] : undefined;\n                return new Promise(function(resolve, reject) {\n                    nativeMethod.apply(self, [resolve, reject, opts]);\n                });\n            } else {\n                return nativeMethod.apply(this, arguments);\n            }\n        };\n    });\n\n    ['setLocalDescription', 'setRemoteDescription',\n        'addIceCandidate'].forEach(function(method) {\n        var nativeMethod = webkitRTCPeerConnection.prototype[method];\n        webkitRTCPeerConnection.prototype[method] = function() {\n            var args = arguments;\n            var self = this;\n            return new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0],\n                    function() {\n                        resolve();\n                        if (args.length >= 2) {\n                            args[1].apply(null, []);\n                        }\n                    },\n                    function(err) {\n                        reject(err);\n                        if (args.length >= 3) {\n                            args[2].apply(null, [err]);\n                        }\n                    }]\n                );\n            });\n        };\n    });\n\n    // getUserMedia constraints shim.\n    var constraintsToChrome = function(c) {\n        if (typeof c !== 'object' || c.mandatory || c.optional) {\n            return c;\n        }\n        var cc = {};\n        Object.keys(c).forEach(function(key) {\n            if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n                return;\n            }\n            var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n            if (r.exact !== undefined && typeof r.exact === 'number') {\n                r.min = r.max = r.exact;\n            }\n            var oldname = function(prefix, name) {\n                if (prefix) {\n                    return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n                }\n                return (name === 'deviceId') ? 'sourceId' : name;\n            };\n            if (r.ideal !== undefined) {\n                cc.optional = cc.optional || [];\n                var oc = {};\n                if (typeof r.ideal === 'number') {\n                    oc[oldname('min', key)] = r.ideal;\n                    cc.optional.push(oc);\n                    oc = {};\n                    oc[oldname('max', key)] = r.ideal;\n                    cc.optional.push(oc);\n                } else {\n                    oc[oldname('', key)] = r.ideal;\n                    cc.optional.push(oc);\n                }\n            }\n            if (r.exact !== undefined && typeof r.exact !== 'number') {\n                cc.mandatory = cc.mandatory || {};\n                cc.mandatory[oldname('', key)] = r.exact;\n            } else {\n                ['min', 'max'].forEach(function(mix) {\n                    if (r[mix] !== undefined) {\n                        cc.mandatory = cc.mandatory || {};\n                        cc.mandatory[oldname(mix, key)] = r[mix];\n                    }\n                });\n            }\n        });\n        if (c.advanced) {\n            cc.optional = (cc.optional || []).concat(c.advanced);\n        }\n        return cc;\n    };\n\n    getUserMedia = function(constraints, onSuccess, onError) {\n        if (constraints.audio) {\n            constraints.audio = constraintsToChrome(constraints.audio);\n        }\n        if (constraints.video) {\n            constraints.video = constraintsToChrome(constraints.video);\n        }\n        webrtcUtils.log('chrome: ' + JSON.stringify(constraints));\n        return navigator.webkitGetUserMedia(constraints, onSuccess, onError);\n    };\n    navigator.getUserMedia = getUserMedia;\n\n    if (!navigator.mediaDevices) {\n        navigator.mediaDevices = {getUserMedia: requestUserMedia,\n            enumerateDevices: function() {\n                return new Promise(function(resolve) {\n                    var kinds = {audio: 'audioinput', video: 'videoinput'};\n                    return MediaStreamTrack.getSources(function(devices) {\n                        resolve(devices.map(function(device) {\n                            return {label: device.label,\n                                kind: kinds[device.kind],\n                                deviceId: device.id,\n                                groupId: ''};\n                        }));\n                    });\n                });\n            }};\n    }\n\n    // A shim for getUserMedia method on the mediaDevices object.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (!navigator.mediaDevices.getUserMedia) {\n        navigator.mediaDevices.getUserMedia = function(constraints) {\n            return requestUserMedia(constraints);\n        };\n    } else {\n        // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n        // function which returns a Promise, it does not accept spec-style\n        // constraints.\n        var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n        navigator.mediaDevices.getUserMedia = function(c) {\n            webrtcUtils.log('spec:   ' + JSON.stringify(c)); // whitespace for alignment\n            c.audio = constraintsToChrome(c.audio);\n            c.video = constraintsToChrome(c.video);\n            webrtcUtils.log('chrome: ' + JSON.stringify(c));\n            return origGetUserMedia(c);\n        };\n    }\n\n    // Dummy devicechange event methods.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n        navigator.mediaDevices.addEventListener = function() {\n            webrtcUtils.log('Dummy mediaDevices.addEventListener called.');\n        };\n    }\n    if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n        navigator.mediaDevices.removeEventListener = function() {\n            webrtcUtils.log('Dummy mediaDevices.removeEventListener called.');\n        };\n    }\n\n    // Attach a media stream to an element.\n    attachMediaStream = function(element, stream) {\n        if (webrtcDetectedVersion >= 43) {\n            element.srcObject = stream;\n        } else if (typeof element.src !== 'undefined') {\n            element.src = URL.createObjectURL(stream);\n        } else {\n            webrtcUtils.log('Error attaching stream to element.');\n        }\n    };\n    reattachMediaStream = function(to, from) {\n        if (webrtcDetectedVersion >= 43) {\n            to.srcObject = from.srcObject;\n        } else {\n            to.src = from.src;\n        }\n    };\n\n} else if (navigator.mediaDevices && navigator.userAgent.match(\n        /Edge\\/(\\d+).(\\d+)$/)) {\n    webrtcUtils.log('This appears to be Edge');\n    webrtcDetectedBrowser = 'edge';\n\n    webrtcDetectedVersion = webrtcUtils.extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n\n    // the minimum version still supported by adapter.\n    webrtcMinimumVersion = 12;\n} else {\n    webrtcUtils.log('Browser does not appear to be WebRTC-capable');\n}\n\n// Returns the result of getUserMedia as a Promise.\nfunction requestUserMedia(constraints) {\n    return new Promise(function(resolve, reject) {\n        getUserMedia(constraints, resolve, reject);\n    });\n}\n\nvar webrtcTesting = {};\ntry {\n    Object.defineProperty(webrtcTesting, 'version', {\n        set: function(version) {\n            webrtcDetectedVersion = version;\n        }\n    });\n} catch (e) {}\n\nif (typeof module !== 'undefined') {\n    var RTCPeerConnection;\n    if (typeof window !== 'undefined') {\n        RTCPeerConnection = window.RTCPeerConnection;\n    }\n    module.exports = {\n        RTCPeerConnection: RTCPeerConnection,\n        getUserMedia: getUserMedia,\n        attachMediaStream: attachMediaStream,\n        reattachMediaStream: reattachMediaStream,\n        webrtcDetectedBrowser: webrtcDetectedBrowser,\n        webrtcDetectedVersion: webrtcDetectedVersion,\n        webrtcMinimumVersion: webrtcMinimumVersion,\n        webrtcTesting: webrtcTesting,\n        webrtcUtils: webrtcUtils\n        //requestUserMedia: not exposed on purpose.\n        //trace: not exposed on purpose.\n    };\n} else if ((typeof require === 'function') && (typeof define === 'function')) {\n    // Expose objects and functions when RequireJS is doing the loading.\n    define([], function() {\n        return {\n            RTCPeerConnection: window.RTCPeerConnection,\n            getUserMedia: getUserMedia,\n            attachMediaStream: attachMediaStream,\n            reattachMediaStream: reattachMediaStream,\n            webrtcDetectedBrowser: webrtcDetectedBrowser,\n            webrtcDetectedVersion: webrtcDetectedVersion,\n            webrtcMinimumVersion: webrtcMinimumVersion,\n            webrtcTesting: webrtcTesting,\n            webrtcUtils: webrtcUtils\n            //requestUserMedia: not exposed on purpose.\n            //trace: not exposed on purpose.\n        };\n    });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/vendor/adapter.js","/*global window, console, document, webkitURL*/\n/*\n * AudioPlayer represents a Licode Audio component that shows either a local or a remote Audio.\n * Ex.: var player = AudioPlayer({id: id, stream: stream, elementID: elementID});\n * A AudioPlayer is also a View component.\n */\nimport View from './View'\nimport Bar from './Bar'\nimport Logger from '../utils/Logger'\nimport { isSafari } from '../utils/Browser'\n\nvar AudioPlayer = function (spec) {\n    \"use strict\";\n\n    var that = View({}),\n        onmouseover,\n        onmouseout;\n\n    // Variables\n\n    // AudioPlayer ID\n    that.id = spec.id;\n\n    // Assets URL\n    that.url = spec.url;\n\n    // Stream that the AudioPlayer will play\n    that.stream = spec.stream.stream;\n\n    // DOM element in which the AudioPlayer will be appended\n    that.elementID = spec.elementID;\n\n    // Audio tag\n    that.audio = document.createElement('audio');\n    that.audio.setAttribute('id', 'stream' + that.id);\n    that.audio.setAttribute('style', 'width: 100%; height: 100%; position: absolute');\n    that.audio.setAttribute('autoplay', 'autoplay');\n\n    if(spec.stream.local) {\n        that.audio.volume = 0;\n    }\n\n    if(spec.stream.local) {\n        that.audio.volume = 0;\n    }\n\n\n    if (that.elementID !== undefined) {\n\n        // It will stop the AudioPlayer and remove it from the HTML\n        that.destroy = function () {\n            that.audio.pause();\n            //clearInterval(that.resize);\n            that.parentNode.removeChild(that.div);\n        };\n\n        onmouseover = function () {\n            that.bar.display();\n        };\n\n        onmouseout = function () {\n            that.bar.hide();\n        };\n\n        // Container\n        that.div = document.createElement('div');\n        that.div.setAttribute('id', 'player_' + that.id);\n        that.div.setAttribute('style', 'width: 100%; height: 100%; position: relative; overflow: hidden;');\n\n        document.getElementById(that.elementID).appendChild(that.div);\n        that.container = document.getElementById(that.elementID);\n\n        that.parentNode = that.div.parentNode;\n\n        that.div.appendChild(that.audio);\n\n        // Bottom Bar\n        that.bar = new Bar({elementID: 'player_' + that.id, id: that.id, stream: spec.stream, media: that.audio, options: spec.options, url: that.url});\n\n        if (spec.stream.local) {\n          that.div.onmouseover = onmouseout;\n        } else { \n          that.div.onmouseover = onmouseover;\n        }\n        that.div.onmouseout = onmouseout;\n\n    } else {\n        // It will stop the AudioPlayer and remove it from the HTML\n        that.destroy = function () {\n            that.audio.pause();\n            //clearInterval(that.resize);\n            that.parentNode.removeChild(that.audio);\n        };\n\n        document.body.appendChild(that.audio);\n        that.parentNode = document.body;\n    }\n\n    Logger.debug('Creating URL from stream ' + that.stream);\n    if(isSafari()) {\n        that.audio.srcObject = that.stream;\n    } else {\n        var myURL = window.URL || webkitURL;\n        that.stream_url = myURL.createObjectURL(that.stream);\n        that.audio.src = that.stream_url;    \n    }\n\n    return that;\n};\n\nexport default AudioPlayer\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/AudioPlayer.js","import Logger from '../utils/Logger'\n\nvar ChromeCanaryStack = function (spec) {\n    \"use strict\";\n\n    var that = {},\n        WebkitRTCPeerConnection = webkitRTCPeerConnection;\n\n    that.pc_config = {\n        \"iceServers\": []\n    };\n\n    that.con = {'optional': [{'DtlsSrtpKeyAgreement': true}]};\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({\"url\": url});\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({\"url\": spec.stunServerUrl});\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new WebkitRTCPeerConnection(that.pc_config, that.con);\n\n    that.peerConnection.onicecandidate = function (event) {\n        //Logger.debug(\"PeerConnection: \", spec.session_id);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            Logger.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n            that.iceCandidateCount += 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var setMaxBW = function (sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            Logger.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring), sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n\n                sd.sdp = setMaxBW(sd.sdp);\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        that.peerConnection.addStream(stream);\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n//        var i;\n//        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n//            if (that.localStreams[i] === stream) {\n//                that.localStreams[i] = null;\n//            }\n//        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                that.peerConnection.createOffer(function (sessionDescription) {\n\n                    //sessionDescription.sdp = newOffer.replace(/a=ice-options:google-ice\\r\\n/g, \"\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n                    Logger.debug(\"Changed\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        Logger.debug('Not sending a new offer');\n                    }\n\n                }, function(err) {\n                    Logger.debug('peer connection create offer failed ', err);\n                }, that.mediaConstraints);\n\n\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                //Logger.debug('Sent SDP is ' + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        Logger.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n\n                }, function(err) {\n                    Logger.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = (that.sequenceNumber += 1);\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = (that.roapSessionId += 1);\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    that.peerConnection.onopen = function () {\n        if (that.onopen) {\n            that.onopen();\n        }\n    };\n\n    that.peerConnection.onaddstream = function (stream) {\n        if (that.onaddstream) {\n            that.onaddstream(stream);\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexport default ChromeCanaryStack\n\n\n\n// WEBPACK FOOTER //\n// ./src/webrtc-stacks/ChromeCanaryStack.js","import Logger from '../utils/Logger'\n\nvar ChromeStableStack = function (spec) {\n    \"use strict\";\n\n    var that = {},\n        //WebkitRTCPeerConnection = webkitRTCPeerConnection;\n        WebkitRTCPeerConnection = RTCPeerConnection;\n    that.isSubscriber = spec.isSubscriber;\n    that.pc_config = {\n        \"iceServers\": []\n    };\n\n    that.con = {'optional': [{'DtlsSrtpKeyAgreement': true}]};\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({\"url\": url});\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({\"url\": spec.stunServerUrl});\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new WebkitRTCPeerConnection(that.pc_config, that.con);\n\n    that.peerConnection.onicecandidate = function (event) {\n        //Logger.debug(\"PeerConnection: \", spec.session_id);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            Logger.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n\t    clearTimeout(that.timeout);\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n\t    //Logger.debug(event.candidate);\n\t    if (that.iceCandidateCount === 0) {\n\t      that.timeout = setTimeout(function() {\n                if (that.moreIceComing) {\n                  that.moreIceComing = false;\n\t\t  that.markActionNeeded();\n\t        }\n\t      }, 1000);\n\t    }\n\t    that.iceCandidateCount = that.iceCandidateCount + 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var filterSdp = function (sdp) {\n      var a, r;\n      if (spec.screen) {\n        sdp = sdp.replace(\"a=x-google-flag:conference\\r\\n\", '');\n      }\n      return sdp;\n    }\n\n    var setMaxBW = function (sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            Logger.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring), sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n                sd.sdp = filterSdp(sd.sdp);\n                sd.sdp = setMaxBW(sd.sdp);\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    that.getStatsRate = function(callback) {\n        that.getStats(function(stats) {\n            callback(stats);\n        });\n    }\n\n    that.getStats = function(callback) {\n      that.peerConnection.getStats(null, function(stats) {\n        var filterList = [];\n        var originList = [];\n        var timeStamp = null;\n        Object.keys(stats).forEach(function(stat) {\n          var report = stats[stat];\n          originList.push(report);\n          if (report.type === 'ssrc' || report.type === 'VideoBwe') {\n            timeStamp = report.timestamp;\n            filterList.push(report);\n          }\n        });\n        filterList.push({\n            id: \"time\",\n            startTime: that.connectedTime,\n            timestamp: timeStamp || new Date(),\n        })\n        callback(filterList, originList);\n      });\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        that.peerConnection.addStream(stream);\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n//        var i;\n//        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n//            if (that.localStreams[i] === stream) {\n//                that.localStreams[i] = null;\n//            }\n//        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                that.peerConnection.createOffer(function (sessionDescription) {\n\n                    //sessionDescription.sdp = newOffer.replace(/a=ice-options:google-ice\\r\\n/g, \"\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:0 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n                    //sessionDescription.sdp = newOffer.replace(/a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:.*\\r\\n/g, \"a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:eUMxlV2Ib6U8qeZot/wEKHw9iMzfKUYpOPJrNnu3\\r\\n\");\n\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n                    //Logger.debug(\"Changed\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        Logger.debug('Not sending a new offer');\n                    }\n\n                }, function(err) {\n                    Logger.debug('peer connection create offer failed ', err);\n                }, that.mediaConstraints);\n\n\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                //Logger.debug('Sent SDP is ' + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        Logger.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n\n                }, function(err) {\n                    Logger.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = (that.sequenceNumber += 1);\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = (that.roapSessionId += 1);\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    //that.peerConnection.onopen = function () {\n    //    if (that.onopen) {\n    //        that.onopen();\n    //    }\n    //};\n\n    that.peerConnection.ontrack = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"ontrack\");\n        }\n    };\n\n    that.peerConnection.onaddstream = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"onaddstream\");\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if(e.currentTarget.iceConnectionState === \"connected\") {\n            that.connectedTime = new Date();\n        }\n\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexport default ChromeStableStack\n\n\n\n// WEBPACK FOOTER //\n// ./src/webrtc-stacks/ChromeStableStack.js","import Logger from '../utils/Logger'\n\nvar SafariStableStack = function (spec) {\n    \"use strict\";\n\n    var that = {},\n        //WebkitRTCPeerConnection = webkitRTCPeerConnection;\n        WebkitRTCPeerConnection = RTCPeerConnection;\n\n    that.isSubscriber = spec.isSubscriber;\n    that.pc_config = {\n        \"iceServers\": [{urls: [\"stun:72.251.224.27:3478\"]}],\n        \"bundlePolicy\": \"max-bundle\"\n    };\n\n    that.con = {'optional': [{'DtlsSrtpKeyAgreement': true}]};\n\n    if (spec.iceServers instanceof Array) {\n        that.pc_config.iceServers = spec.iceServers;\n    } else {\n        if (spec.stunServerUrl) {\n            if (spec.stunServerUrl instanceof Array) {\n                spec.stunServerUrl.map(function (url) {\n                    if (typeof url === 'string' && url !== '') {\n                        that.pc_config.iceServers.push({\"url\": url});\n                    }\n                });\n            } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n                that.pc_config.iceServers.push({\"url\": spec.stunServerUrl});\n            }\n        }\n\n        if (spec.turnServer) {\n            if (spec.turnServer instanceof Array) {\n                spec.turnServer.map(function (turn) {\n                    if (typeof turn.url === 'string' && turn.url !== '') {\n                        that.pc_config.iceServers.push({\n                            \"username\": turn.username,\n                            \"credential\": turn.password,\n                            \"url\": turn.url\n                        });\n                    }\n                });\n            } else if (typeof spec.turnServer.url === 'string' && spec.turnServer.url !== '') {\n                that.pc_config.iceServers.push({\n                    \"username\": spec.turnServer.username,\n                    \"credential\": spec.turnServer.password,\n                    \"url\": spec.turnServer.url\n                });\n            }\n        }\n    }\n\n    if (spec.audio === undefined) {\n        spec.audio = true;\n    }\n\n    if (spec.video === undefined) {\n        spec.video = true;\n    }\n\n    that.mediaConstraints = {\n        'mandatory': {\n            'OfferToReceiveVideo': spec.video,\n            'OfferToReceiveAudio': spec.audio\n        }\n    };\n\n    that.roapSessionId = 103;\n\n    that.peerConnection = new RTCPeerConnection({\"iceServers\": [{urls: [\"stun:webcs.agora.io:3478\", \"stun:stun.l.google.com:19302\"]}], \"bundlePolicy\": \"max-bundle\"});\n\n    that.peerConnection.onicecandidate = function (event) {\n        Logger.debug(\"PeerConnection: \", spec.session_id, event);\n        if (!event.candidate) {\n            // At the moment, we do not renegotiate when new candidates\n            // show up after the more flag has been false once.\n            Logger.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n\t    clearTimeout(that.timeout);\n            if (that.ices === undefined) {\n                that.ices = 0;\n            }\n            that.ices = that.ices + 1;\n            if (that.ices >= 1 && that.moreIceComing) {\n                that.moreIceComing = false;\n                that.markActionNeeded();\n            }\n        } else {\n\t    //Logger.debug(event.candidate);\n\t    if (that.iceCandidateCount === 0) {\n\t      that.timeout = setTimeout(function() {\n                if (that.moreIceComing) {\n                  that.moreIceComing = false;\n\t\t  that.markActionNeeded();\n\t        }\n\t      }, 1000);\n\t    }\n\t    that.iceCandidateCount = that.iceCandidateCount + 1;\n        }\n    };\n\n    //Logger.debug(\"Created webkitRTCPeerConnnection with config \\\"\" + JSON.stringify(that.pc_config) + \"\\\".\");\n\n    var filterSdp = function (sdp) {\n      var a, r;\n      if (spec.screen) {\n        sdp = sdp.replace(\"a=x-google-flag:conference\\r\\n\", '');\n      }\n      return sdp;\n    }\n\n    var setMaxBW = function (sdp) {\n        var a, r;\n        if (spec.minVideoBW && spec.maxVideoBW) {\n            a = sdp.match(/m=video.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxVideoBW + \"\\r\\n\";\n            //if (spec.mode === 'live') { //h.264\n            //  r = a[0] + \"a=fmtp:107 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //} else { //vp8\n            //  r = a[0] + \"a=fmtp:100 x-google-min-bitrate=\" + spec.minVideoBW + \"; x-google-max-bitrate=\" + spec.maxVideoBW + \"\\r\\n\";\n            //}\n            sdp = sdp.replace(a[0], r);\n            Logger.debug('Set Video Bitrate - min:' + spec.minVideoBW + \" max:\" + spec.maxVideoBW);\n        }\n\n        if (spec.maxAudioBW) {\n            a = sdp.match(/m=audio.*\\r\\n/);\n            r = a[0] + \"b=AS:\" + spec.maxAudioBW + \"\\r\\n\";\n            sdp = sdp.replace(a[0], r);\n        }\n\n        return sdp;\n    };\n\n    /**\n     * This function processes signalling messages from the other side.\n     * @param {string} msgstring JSON-formatted string containing a ROAP message.\n     */\n    that.processSignalingMessage = function (msgstring) {\n        // Offer: Check for glare and resolve.\n        // Answer/OK: Remove retransmit for the msg this is an answer to.\n        // Send back \"OK\" if this was an Answer.\n        //Logger.debug('Activity on conn ' + that.sessionId);\n        var msg = JSON.parse(msgstring), sd;\n        that.incomingMessage = msg;\n\n        if (that.state === 'new') {\n            if (msg.messageType === 'OFFER') {\n                // Initial offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'offer-sent') {\n            if (msg.messageType === 'ANSWER') {\n\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'answer'\n                };\n\n                //Logger.debug(\"Received ANSWER: \", sd.sdp);\n                sd.sdp = filterSdp(sd.sdp);\n                sd.sdp = setMaxBW(sd.sdp);\n                sd.sdp = sd.sdp.replace(/a=x-google-flag:conference\\r\\n/g, \"\");\n\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n                that.sendOK();\n                that.state = 'established';\n\n            } else if (msg.messageType === 'pr-answer') {\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'pr-answer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                // No change to state, and no response.\n            } else if (msg.messageType === 'offer') {\n                // Glare processing.\n                that.error('Not written yet');\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n\n        } else if (that.state === 'established') {\n            if (msg.messageType === 'OFFER') {\n                // Subsequent offer.\n                sd = {\n                    sdp: msg.sdp,\n                    type: 'offer'\n                };\n                that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd));\n\n                that.state = 'offer-received';\n                // Allow other stuff to happen, then reply.\n                that.markActionNeeded();\n            } else {\n                that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n            }\n        }\n    };\n\n    var outbound_rtp_audio = {\n      id: \"\",\n      type: \"\",\n      mediaType: \"\",\n      googCodecName: \"opus\",\n      aecDivergentFilterFraction: \"0\",\n      audioInputLevel: \"0\",\n      bytesSent: \"0\",\n      packetsSent: \"0\",\n      googEchoCancellationReturnLoss: \"0\",\n      googEchoCancellationReturnLossEnhancement: \"0\"\n    };\n\n    var outbound_rtp_video = {\n      id: \"\",\n      type: \"\",\n      mediaType: \"\",\n      googCodecName: spec.codec === \"h264\" ? \"H264\" : \"VP8\",\n      bytesSent: \"0\",\n      packetsLost: \"0\",\n      packetsSent: \"0\",\n      googAdaptationChanges: \"0\",\n      googAvgEncodeMs: \"0\",\n      googEncodeUsagePercent: \"0\",\n      googFirsReceived: \"0\",\n      googFrameHeightSent: \"0\",\n      googFrameHeightInput: \"0\",\n      googFrameRateInput: \"0\",\n      googFrameRateSent: \"0\",\n      googFrameWidthSent: \"0\",\n      googFrameWidthInput: \"0\",\n      googNacksReceived: \"0\",\n      googPlisReceived: \"0\",\n      googRtt: \"0\",\n      googFramesEncoded: \"0\",\n    };\n\n    var inbound_rtp_audio = {\n      id: \"\",\n      type: \"\",\n      mediaType: \"\",\n      audioOutputLevel: \"0\",\n      bytesReceived: \"0\",\n      packetsLost: \"0\",\n      packetsReceived: \"0\",\n      googAccelerateRate: \"0\",\n      googCurrentDelayMs: \"0\",\n      googDecodingCNG: \"0\",\n      googDecodingCTN: \"0\",\n      googDecodingCTSG: \"0\",\n      googDecodingNormal: \"0\",\n      googDecodingPLC: \"0\",\n      googDecodingPLCCNG: \"0\",\n      googExpandRate: \"0\",\n      googJitterBufferMs: \"0\",\n      googJitterReceived: \"0\",\n      googPreemptiveExpandRate: \"0\",\n      googPreferredJitterBufferMs: \"0\",\n      googSecondaryDecodedRate: \"0\",\n      googSpeechExpandRate: \"0\"\n    };\n\n    var inbound_rtp_video = {\n      id: \"\",\n      type: \"\",\n      mediaType: \"\",\n      googTargetDelayMs: \"0\",\n      packetsLost: \"0\",\n      googDecodeMs: \"0\",\n      googMaxDecodeMs: \"0\",\n      googRenderDelayMs: \"0\",\n      googFrameWidthReceived: \"0\",\n      googFrameHeightReceived: \"0\",\n      googFrameRateReceived: \"0\",\n      googFrameRateDecoded: \"0\",\n      googFrameRateOutput: \"0\",\n      googFramesDecoded: \"0\",\n      googFrameReceived: \"0\",\n\n      googJitterBufferMs: \"0\",\n      googCurrentDelayMs: \"0\",\n      googMinPlayoutDelayMs: \"0\",\n      googNacksSent: \"0\",\n      googPlisSent: \"0\",\n      googFirsSent: \"0\",\n      bytesReceived: \"0\",\n      packetsReceived: \"0\",\n    };\n\n    var bweforvideo = {\n      id: \"bweforvideo\",\n      type: \"VideoBwe\",\n      googAvailableSendBandwidth: \"0\",\n      googAvailableReceiveBandwidth: \"0\",\n      googActualEncBitrate: \"0\",\n      googRetransmitBitrate: \"0\",\n      googTargetEncBitrate: \"0\",\n      googBucketDelay: \"0\",\n      googTransmitBitrate: \"0\",\n    }\n\n    var lastFramesEncoded = 0;\n    var lastFramesDecoded = 0;\n    var lastFramesReceived = 0;\n\n\n    that.getStatsRate = function(callback) {\n      that.getStats(function(stats) {\n        stats.forEach(function(report) {\n            if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                if(report.googFramesEncoded) {\n                    report.googFrameRateSent = ((report.googFramesEncoded - lastFramesEncoded) / 3).toString();\n                    lastFramesEncoded = report.googFramesEncoded;\n                }\n            }\n            if (report.type === 'inbound-rtp' && report.id.indexOf(\"55543\") != -1) {\n                // if googFrameRateReceived or googFrameRateDecoded is \"null\" or \"undefined\", it will sent \"NAN\" to server and make server crash\n                if(report.googFrameRateReceived) {\n                    report.googFrameRateReceived = ((report.googFrameReceived - lastFramesReceived) / 3).toString();\n                    lastFramesReceived = report.googFrameReceived;\n                }\n                if(report.googFrameRateDecoded) {\n                    report.googFrameRateDecoded = ((report.googFramesDecoded - lastFramesDecoded) / 3).toString();\n                    lastFramesDecoded = report.googFramesDecoded;\n                }\n            }\n        })\n        callback(stats);\n      });\n    }\n\n    that.getStats = function(callback) {\n        var originList = [];\n      that.peerConnection.getStats().then(function (stats) {\n        var list = [];\n        stats.forEach(report => {\n            originList.push(report);\n            if (report.type === 'outbound-rtp' && report.mediaType === 'audio') {\n                outbound_rtp_audio.id = report.id;\n                outbound_rtp_audio.type = report.type;\n                outbound_rtp_audio.mediaType = report.mediaType;\n                outbound_rtp_audio.bytesSent = report.bytesSent.toString();\n                outbound_rtp_audio.packetsSent = report.packetsSent.toString();\n            }\n            if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                outbound_rtp_video.id = report.id;\n                outbound_rtp_video.type = report.type;\n                outbound_rtp_video.mediaType = report.mediaType;\n                outbound_rtp_video.bytesSent = report.bytesSent.toString();\n                outbound_rtp_video.packetsSent = report.packetsSent.toString();\n                outbound_rtp_video.googPlisReceived = report.pliCount.toString();\n                outbound_rtp_video.googNacksReceived = report.nackCount.toString();\n                outbound_rtp_video.googFirsReceived = report.firCount.toString();\n                outbound_rtp_video.googFramesEncoded = report.framesEncoded.toString();\n            }\n            if (report.type === 'inbound-rtp' && report.id.indexOf(\"44444\") != -1) {\n                inbound_rtp_audio.id = report.id;\n                inbound_rtp_audio.type = report.type;\n                inbound_rtp_audio.mediaType = \"audio\";\n                inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n                inbound_rtp_audio.bytesReceived = report.bytesReceived.toString();\n                inbound_rtp_audio.packetsLost = report.packetsLost.toString();\n                inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n                inbound_rtp_audio.googJitterReceived = report.jitter.toString();\n            }\n            if (report.type === 'inbound-rtp' && report.id.indexOf(\"55543\") != -1) {\n                inbound_rtp_video.id = report.id;\n                inbound_rtp_video.type = report.type;\n                inbound_rtp_video.mediaType = \"video\";\n                inbound_rtp_video.packetsReceived = report.packetsReceived.toString();\n                inbound_rtp_video.bytesReceived = report.bytesReceived.toString();\n                inbound_rtp_video.packetsLost = report.packetsLost.toString();\n                inbound_rtp_video.googJitterBufferMs = report.jitter.toString();\n                inbound_rtp_video.googNacksSent = report.nackCount.toString();\n                inbound_rtp_video.googPlisSent = report.pliCount.toString();\n                inbound_rtp_video.googFirsSent = report.firCount.toString();\n            }\n            if (report.type === 'track' && report.id.indexOf(\"55543\") != -1) {\n                inbound_rtp_video.googFrameWidthReceived = report.frameWidth.toString();\n                inbound_rtp_video.googFrameHeightReceived = report.frameHeight.toString();\n                inbound_rtp_video.googFrameReceived = report.framesReceived.toString();\n                inbound_rtp_video.googFramesDecoded = report.framesDecoded.toString();                \n            } \n            if (report.type === 'track' && report.id.indexOf(\"44444\") != -1) {\n                inbound_rtp_audio.audioOutputLevel = report.audioLevel + \"\";\n                outbound_rtp_audio.audioInputLevel = report.audioLevel + \"\";\n            }\n            if (report.type === 'candidate-pair') {\n                if(report.availableIncomingBitrate == 0) {\n                    bweforvideo.googAvailableSendBandwidth = report.availableOutgoingBitrate + \"\";\n                } else {\n                    bweforvideo.googAvailableReceiveBandwidth = report.availableIncomingBitrate + \"\";\n                }\n            }\n        });\n        var filterList = [bweforvideo, outbound_rtp_audio, outbound_rtp_video, inbound_rtp_audio, inbound_rtp_video];\n        filterList.push({\n            id: \"time\",\n            startTime: that.connectedTime,\n            timestamp: new Date(),\n        })\n        callback(filterList, originList);\n      }).catch(function (error) {\n          console.error(error);\n      });\n    };\n\n    /**\n     * Adds a stream - this causes signalling to happen, if needed.\n     * @param {MediaStream} stream The outgoing MediaStream to add.\n     */\n    that.addStream = function (stream) {\n        if (window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n          stream.getTracks().forEach(track => that.peerConnection.addTrack(track, stream));\n        } else {\n          that.peerConnection.addStream(stream);\n        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Removes a stream.\n     * @param {MediaStream} stream The MediaStream to remove.\n     */\n    that.removeStream = function () {\n//        var i;\n//        for (i = 0; i < that.peerConnection.localStreams.length; ++i) {\n//            if (that.localStreams[i] === stream) {\n//                that.localStreams[i] = null;\n//            }\n//        }\n        that.markActionNeeded();\n    };\n\n    /**\n     * Closes the connection.\n     */\n    that.close = function () {\n        that.state = 'closed';\n        that.peerConnection.close();\n    };\n\n    /**\n     * Internal function: Mark that something happened.\n     */\n    that.markActionNeeded = function () {\n        that.actionNeeded = true;\n        that.doLater(function () {\n            that.onstablestate();\n        });\n    };\n\n    /**\n     * Internal function: Do something later (not on this stack).\n     * @param {function} what Callback to be executed later.\n     */\n    that.doLater = function (what) {\n        // Post an event to myself so that I get called a while later.\n        // (needs more JS/DOM info. Just call the processing function on a delay\n        // for now.)\n        window.setTimeout(what, 1);\n    };\n\n    /**\n     * Internal function called when a stable state\n     * is entered by the browser (to allow for multiple AddStream calls or\n     * other interesting actions).\n     * This function will generate an offer or answer, as needed, and send\n     * to the remote party using our onsignalingmessage function.\n     */\n    that.onstablestate = function () {\n        var mySDP;\n        if (that.actionNeeded) {\n            if (that.state === 'new' || that.state === 'established') {\n                // See if the current offer is the same as what we already sent.\n                // If not, no change is needed.\n\n                if (spec.isSubscriber && window.navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n                    var audioReceiver = that.peerConnection.addTransceiver(\"audio\");\n                    var videoReceiver = that.peerConnection.addTransceiver(\"video\");\n                    audioReceiver.setDirection(\"recvonly\");\n                    videoReceiver.setDirection(\"recvonly\");\n                }\n                that.peerConnection.createOffer(that.mediaConstraints).then(function (sessionDescription) {\n                    sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n\n                    if(!spec.isSubscriber) {\n                        // Solve the video orientation issue between iOS Safari and Firefox.\n                        sessionDescription.sdp = sessionDescription.sdp.replace(/a=extmap:4 urn:3gpp:video-orientation\\r\\n/g, \"\");\n                    }\n                    \n                    //Logger.debug(\"Offer\", sessionDescription.sdp);\n\n                    var newOffer = sessionDescription.sdp;\n\n                    if (newOffer !== that.prevOffer) {\n\n                        that.peerConnection.setLocalDescription(sessionDescription);\n\n                        that.state = 'preparing-offer';\n                        that.markActionNeeded();\n                        return;\n                    } else {\n                        Logger.debug('Not sending a new offer');\n                    }\n\n                }).catch(function(err) {\n                    Logger.debug('peer connection create offer failed ', err);\n                });\n\n\n            } else if (that.state === 'preparing-offer') {\n                // Don't do anything until we have the ICE candidates.\n                if (that.moreIceComing) {\n                    return;\n                }\n\n\n                // Now able to send the offer we've already prepared.\n                that.prevOffer = that.peerConnection.localDescription.sdp;\n                //Logger.debug(\"Sending OFFER: \" + that.prevOffer);\n                that.sendMessage('OFFER', that.prevOffer);\n                // Not done: Retransmission on non-response.\n                that.state = 'offer-sent';\n\n            } else if (that.state === 'offer-received') {\n\n                that.peerConnection.createAnswer(function (sessionDescription) {\n                    that.peerConnection.setLocalDescription(sessionDescription);\n                    that.state = 'offer-received-preparing-answer';\n\n                    if (!that.iceStarted) {\n                        var now = new Date();\n                        Logger.debug(now.getTime() + ': Starting ICE in responder');\n                        that.iceStarted = true;\n                    } else {\n                        that.markActionNeeded();\n                        return;\n                    }\n\n                }, function(err) {\n                    Logger.debug('peer connection create answer failed ', err);\n                }, that.mediaConstraints);\n\n            } else if (that.state === 'offer-received-preparing-answer') {\n                if (that.moreIceComing) {\n                    return;\n                }\n\n                mySDP = that.peerConnection.localDescription.sdp;\n\n                that.sendMessage('ANSWER', mySDP);\n                that.state = 'established';\n            } else {\n                that.error('Dazed and confused in state ' + that.state + ', stopping here');\n            }\n            that.actionNeeded = false;\n        }\n    };\n\n    /**\n     * Internal function to send an \"OK\" message.\n     */\n    that.sendOK = function () {\n        that.sendMessage('OK');\n    };\n\n    /**\n     * Internal function to send a signalling message.\n     * @param {string} operation What operation to signal.\n     * @param {string} sdp SDP message body.\n     */\n    that.sendMessage = function (operation, sdp) {\n        var roapMessage = {};\n        roapMessage.messageType = operation;\n        roapMessage.sdp = sdp; // may be null or undefined\n        if (operation === 'OFFER') {\n            roapMessage.offererSessionId = that.sessionId;\n            roapMessage.answererSessionId = that.otherSessionId; // may be null\n            roapMessage.seq = (that.sequenceNumber += 1);\n            // The tiebreaker needs to be neither 0 nor 429496725.\n            roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n        } else {\n            roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n            roapMessage.answererSessionId = that.sessionId;\n            roapMessage.seq = that.incomingMessage.seq;\n        }\n        that.onsignalingmessage(JSON.stringify(roapMessage));\n    };\n\n    /**\n     * Internal something-bad-happened function.\n     * @param {string} text What happened - suitable for logging.\n     */\n    that.error = function (text) {\n        throw 'Error in RoapOnJsep: ' + text;\n    };\n\n    that.sessionId = (that.roapSessionId += 1);\n    that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n    that.actionNeeded = false;\n    that.iceStarted = false;\n    that.moreIceComing = true;\n    that.iceCandidateCount = 0;\n    that.onsignalingmessage = spec.callback;\n\n    that.peerConnection.ontrack = function (evt) {\n        if (that.onaddstream) {\n            that.onaddstream(evt, \"ontrack\");\n        }\n    };\n\n    that.peerConnection.onremovestream = function (stream) {\n        if (that.onremovestream) {\n            that.onremovestream(stream);\n        }\n    };\n\n    that.peerConnection.oniceconnectionstatechange = function (e) {\n        if(e.currentTarget.iceConnectionState === \"connected\") {\n            that.connectedTime = new Date();\n        }\n\n        if (that.oniceconnectionstatechange) {\n            that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n        }\n    };\n\n    // Variables that are part of the public interface of PeerConnection\n    // in the 28 January 2012 version of the webrtc specification.\n    that.onaddstream = null;\n    that.onremovestream = null;\n    that.state = 'new';\n    // Auto-fire next events.\n    that.markActionNeeded();\n    return that;\n};\n\nexport default SafariStableStack\n\n\n\n// WEBPACK FOOTER //\n// ./src/webrtc-stacks/SafariStableStack.js","var FcStack = function () {\n  \"use strict\";\n\n  var that = {};\n  that.addStream = function () {};\n\n  return that;\n};\n\nexport default FcStack\n\n\n\n// WEBPACK FOOTER //\n// ./src/webrtc-stacks/FcStack.js","import Logger from '../utils/Logger'\n\nvar FirefoxStack = function (spec) {\n  \"use strict\";\n\n  var that = {},\n      WebkitRTCPeerConnection = mozRTCPeerConnection,\n      RTCSessionDescription = mozRTCSessionDescription;\n  var hasStream = false;\n  that.isSubscriber = spec.isSubscriber;\n  that.pc_config = {\n    \"iceServers\": []\n  };\n\n  // currently firefox does not support turn\n  if (spec.iceServers instanceof Array) {\n    spec.iceServers.map(function (server) {\n      if (server.url.indexOf('stun:') === 0) {\n        that.pc_config.iceServers.push({\"url\": server.url});\n      }\n    });\n  } else {\n    if (spec.stunServerUrl) {\n      if (spec.stunServerUrl instanceof Array) {\n        spec.stunServerUrl.map(function (url) {\n          if (typeof url === 'string' && url !== '') {\n            that.pc_config.iceServers.push({\"url\": url});\n          }\n        });\n      } else if (typeof spec.stunServerUrl === 'string' && spec.stunServerUrl !== '') {\n        that.pc_config.iceServers.push({\"url\": spec.stunServerUrl});\n      }\n    }\n  }\n\n  if (spec.audio === undefined) {\n    spec.audio = true;\n  }\n\n  if (spec.video === undefined) {\n    spec.video = true;\n  }\n\n  that.mediaConstraints = {\n    offerToReceiveAudio: spec.audio,\n    offerToReceiveVideo: spec.video,\n    mozDontOfferDataChannel: true\n  };\n\n  that.roapSessionId = 103;\n\n  that.peerConnection = new RTCPeerConnection(that.pc_config);\n\n  that.peerConnection.onicecandidate = function (event) {\n    if (!event.candidate) {\n      // At the moment, we do not renegotiate when new candidates\n      // show up after the more flag has been false once.\n      Logger.debug(\"PeerConnection State: \" + that.peerConnection.iceGatheringState);\n\n      if (that.ices === undefined) {\n        that.ices = 0;\n      }\n      that.ices = that.ices + 1;\n      if (that.ices >= 1 && that.moreIceComing) {\n        that.moreIceComing = false;\n        that.markActionNeeded();\n      }\n    } else {\n      that.iceCandidateCount += 1;\n    }\n  };\n\n  that.processSignalingMessage = function (msgstring) {\n    // Offer: Check for glare and resolve.\n    // Answer/OK: Remove retransmit for the msg this is an answer to.\n    // Send back \"OK\" if this was an Answer.\n    //Logger.debug('Activity on conn ' + that.sessionId);\n    var msg = JSON.parse(msgstring), sd;\n    that.incomingMessage = msg;\n\n    if (that.state === 'new') {\n      if (msg.messageType === 'OFFER') {\n        // Initial offer.\n        msg.sdp = setMaxBW(msg.sdp);\n        sd = { sdp: msg.sdp, type: 'offer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function() {\n          Logger.debug(\"setRemoteDescription succeeded\");\n        }, function(error) {\n          Logger.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n        that.state = 'offer-received';\n        // Allow other stuff to happen, then reply.\n        that.markActionNeeded();\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    } else if (that.state === 'offer-sent') {\n      if (msg.messageType === 'ANSWER') {\n        msg.sdp = setMaxBW(msg.sdp);\n        msg.sdp = msg.sdp.replace(/ generation 0/g, \"\");\n        msg.sdp = msg.sdp.replace(/ udp /g, \" UDP \");\n        msg.sdp = msg.sdp.replace(/a=group:BUNDLE audio video/, \"a=group:BUNDLE sdparta_0 sdparta_1\");\n        msg.sdp = msg.sdp.replace(/a=mid:audio/, \"a=mid:sdparta_0\");\n        msg.sdp = msg.sdp.replace(/a=mid:video/, \"a=mid:sdparta_1\");\n\n\t    sd = { sdp: msg.sdp, type: 'answer' };\n        //Logger.debug(\"Received ANSWER: \", sd.sdp);\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function() {\n          Logger.debug(\"setRemoteDescription succeeded\");\n        }, function(error) {\n          Logger.info(\"setRemoteDescription failed: \" + error);\n        });\n        that.sendOK();\n        that.state = 'established';\n      } else if (msg.messageType === 'pr-answer') {\n        sd = { sdp: msg.sdp, type: 'pr-answer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function() {\n          Logger.debug(\"setRemoteDescription succeeded\");\n        }, function(error) {\n          Logger.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n      // No change to state, and no response.\n      } else if (msg.messageType === 'offer') {\n        // Glare processing.\n        that.error('Not written yet');\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    } else if (that.state === 'established') {\n      if (msg.messageType === 'OFFER') {\n        // Subsequent offer.\n        sd = { sdp: msg.sdp, type: 'offer' };\n        that.peerConnection.setRemoteDescription(new RTCSessionDescription(sd), function() {\n          Logger.debug(\"setRemoteDescription succeeded\");\n        }, function(error) {\n          Logger.info(\"setRemoteDescription failed: \" + error.name);\n        });\n\n        that.state = 'offer-received';\n        // Allow other stuff to happen, then reply.\n        that.markActionNeeded();\n      } else {\n        that.error('Illegal message for this state: ' + msg.messageType + ' in state ' + that.state);\n      }\n    }\n  };\n\n  var outbound_rtp_audio = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"opus\",\n    googCodecName: \"opus\",\n    aecDivergentFilterFraction: \"0\",\n    audioInputLevel: \"0\",\n    bytesSent: \"0\",\n    packetsSent: \"0\",\n    googEchoCancellationReturnLoss: \"0\",\n    googEchoCancellationReturnLossEnhancement: \"0\"\n  };\n\n  var outbound_rtp_video = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    googCodecName: spec.codec === \"h264\" ? \"H264\" : \"VP8\",\n    bytesSent: \"0\",\n    packetsLost: \"0\",\n    packetsSent: \"0\",\n    googAdaptationChanges: \"0\",\n    googAvgEncodeMs: \"0\",\n    googEncodeUsagePercent: \"0\",\n    googFirsReceived: \"0\",\n    googFrameHeightSent: \"0\",\n    googFrameHeightInput: \"0\",\n    googFrameRateInput: \"0\",\n    googFrameRateSent: \"0\",\n    googFrameWidthSent: \"0\",\n    googFrameWidthInput: \"0\",\n    googNacksReceived: \"0\",\n    googPlisReceived: \"0\",\n    googRtt: \"0\"\n  };\n\n  var inbound_rtp_audio = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    audioOutputLevel: \"0\",\n    bytesReceived: \"0\",\n    packetsLost: \"0\",\n    packetsReceived: \"0\",\n    googAccelerateRate: \"0\",\n    googCurrentDelayMs: \"0\",\n    googDecodingCNG: \"0\",\n    googDecodingCTN: \"0\",\n    googDecodingCTSG: \"0\",\n    googDecodingNormal: \"0\",\n    googDecodingPLC: \"0\",\n    googDecodingPLCCNG: \"0\",\n    googExpandRate: \"0\",\n    googJitterBufferMs: \"0\",\n    googJitterReceived: \"0\",\n    googPreemptiveExpandRate: \"0\",\n    googPreferredJitterBufferMs: \"0\",\n    googSecondaryDecodedRate: \"0\",\n    googSpeechExpandRate: \"0\"\n  };\n\n  var inbound_rtp_video = {\n    id: \"\",\n    type: \"\",\n    mediaType: \"\",\n    googTargetDelayMs: \"0\",\n    packetsLost: \"0\",\n    googDecodeMs: \"0\",\n    googMaxDecodeMs: \"0\",\n    googRenderDelayMs: \"0\",\n    googFrameWidthReceived: \"0\",\n    googFrameHeightReceived: \"0\",\n    googFrameRateReceived: \"0\",\n    googFrameRateDecoded: \"0\",\n    googFrameRateOutput: \"0\",\n    googJitterBufferMs: \"0\",\n    googCurrentDelayMs: \"0\",\n    googMinPlayoutDelayMs: \"0\",\n    googNacksSent: \"0\",\n    googPlisSent: \"0\",\n    googFirsSent: \"0\",\n    bytesReceived: \"0\",\n    packetsReceived: \"0\",\n    googFramesDecoded: \"0\",\n  };\n\n  var lastFramesDecoded = 0;\n\n  that.getStatsRate = function(callback) {\n    that.getStats(function(stats) {\n      stats.forEach(function(report) {\n          if (report.type === 'inboundrtp' && report.mediaType === 'video') {\n              if(report.googFrameRateDecoded) {\n                  report.googFrameRateDecoded = ((report.googFramesDecoded - lastFramesDecoded) / 3).toString();\n                  lastFramesDecoded = report.googFramesDecoded;\n              }\n          }\n      })\n      callback(stats);\n    });\n  }\n\n  that.getStats = function(callback) {\n    that.peerConnection.getStats().then(function(stats) {\n      var originList = [];\n      Object.keys(stats).forEach(function(stat) {\n        var report = stats[stat];\n        originList.push(report); \n        if (report.type === 'outboundrtp' && report.mediaType === 'video') {\n          outbound_rtp_video.id = report.id;\n          outbound_rtp_video.type = report.type;\n          outbound_rtp_video.mediaType = report.mediaType;\n          outbound_rtp_video.bytesSent = report.bytesSent.toString();\n          outbound_rtp_video.packetsSent = report.packetsSent.toString();\n          outbound_rtp_video.googPlisReceived = report.pliCount.toString();\n          outbound_rtp_video.googNacksReceived = report.nackCount.toString();\n          outbound_rtp_video.googFirsReceived = report.firCount.toString();\n          outbound_rtp_video.googFrameRateSent = report.framerateMean.toString();\n        }\n        if (report.type === 'outboundrtp' && report.mediaType === 'audio') {\n          outbound_rtp_audio.id = report.id;\n          outbound_rtp_audio.type = report.type;\n          outbound_rtp_audio.mediaType = report.mediaType;\n          outbound_rtp_audio.bytesSent = report.bytesSent.toString();\n          outbound_rtp_audio.packetsSent = report.packetsSent.toString();\n        }\n        if (report.type === 'inboundrtp' && report.mediaType === 'audio' && !report.isRemote) {\n          inbound_rtp_audio.id = report.id;\n          inbound_rtp_audio.type = report.type;\n          inbound_rtp_audio.mediaType = report.mediaType;\n          inbound_rtp_audio.bytesReceived = report.bytesReceived.toString();\n          inbound_rtp_audio.packetsLost = report.packetsLost.toString();\n          inbound_rtp_audio.packetsReceived = report.packetsReceived.toString();\n          inbound_rtp_audio.googJitterReceived = report.jitter.toString();\n        }\n        if (report.type === 'inboundrtp' && report.mediaType === 'video' && !report.isRemote) {\n          inbound_rtp_video.id = report.id;\n          inbound_rtp_video.type = report.type;\n          inbound_rtp_video.mediaType = report.mediaType;\n          inbound_rtp_video.bytesReceived = report.bytesReceived.toString();\n          inbound_rtp_video.googFrameRateReceived = report.framerateMean.toString();\n          inbound_rtp_video.googFramesDecoded = report.framesDecoded.toString();\n          inbound_rtp_video.packetsLost = report.packetsLost.toString();\n          inbound_rtp_video.packetsReceived = report.packetsReceived.toString();\n          inbound_rtp_video.googJitterBufferMs = report.jitter.toString();\n          inbound_rtp_video.googNacksSent = report.nackCount.toString();\n          inbound_rtp_video.googPlisSent = report.pliCount.toString();\n          inbound_rtp_video.googFirsSent = report.firCount.toString();\n        }\n        if (report.id.indexOf('outbound_rtcp_video') !== -1) {\n          outbound_rtp_video.packetsLost = report.packetsLost.toString();\n        }\n      });\n      var filterList = [outbound_rtp_video, outbound_rtp_audio, inbound_rtp_audio, inbound_rtp_video];\n      filterList.push({\n        id: \"time\",\n        startTime: that.connectedTime,\n        timestamp: new Date(),\n      })\n      callback(filterList, originList);\n    }, function (error) {\n      Logger.error(error);\n    });\n  };\n\n  that.addStream = function (stream) {\n    hasStream = true;\n    that.peerConnection.addStream(stream);\n    that.markActionNeeded();\n  };\n\n  that.removeStream = function () {\n    that.markActionNeeded();\n  };\n\n  that.close = function () {\n    that.state = 'closed';\n    that.peerConnection.close();\n  };\n\n  that.markActionNeeded = function () {\n    that.actionNeeded = true;\n    that.doLater(function () {\n      that.onstablestate();\n    });\n  };\n\n  that.doLater = function (what) {\n    // Post an event to myself so that I get called a while later.\n    // (needs more JS/DOM info. Just call the processing function on a delay\n    // for now.)\n    window.setTimeout(what, 1);\n  };\n\n  /**\n   * Internal function called when a stable state\n   * is entered by the browser (to allow for multiple AddStream calls or\n   * other interesting actions).\n   * This function will generate an offer or answer, as needed, and send\n   * to the remote party using our onsignalingmessage function.\n   */\n  that.onstablestate = function () {\n    if (that.actionNeeded) {\n      if (that.state === 'new' || that.state === 'established') {\n        var onSuccess = function() {\n          that.peerConnection.createOffer(function (sessionDescription) {\n            sessionDescription.sdp = setMaxBW(sessionDescription.sdp);\n            sessionDescription.sdp = sessionDescription.sdp.replace(/a=extmap:1 http:\\/\\/www.webrtc.org\\/experiments\\/rtp-hdrext\\/abs-send-time/, \"a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\");\n            var newOffer = sessionDescription.sdp;\n            if (newOffer !== that.prevOffer) {\n              that.peerConnection.setLocalDescription(sessionDescription);\n\n              that.state = 'preparing-offer';\n              that.markActionNeeded();\n              return;\n            } else {\n              Logger.debug('Not sending a new offer');\n            }\n          }, function(error) {\n              Logger.debug(\"Ups! create offer failed \", error);\n          }, that.mediaConstraints);\n        };\n\n        if (hasStream) {\n          that.mediaConstraints = undefined;\n        }\n\n        onSuccess();\n      } else if (that.state === 'preparing-offer') {\n        // Don't do anything until we have the ICE candidates.\n        if (that.moreIceComing) {\n          return;\n        }\n\n        // Now able to send the offer we've already prepared.\n        that.prevOffer = that.peerConnection.localDescription.sdp;\n        //Logger.debug(\"Sending OFFER: \", that.prevOffer);\n        that.sendMessage('OFFER', that.prevOffer);\n        // Not done: Retransmission on non-response.\n        that.state = 'offer-sent';\n      } else if (that.state === 'offer-received') {\n        that.peerConnection.createAnswer(function (sessionDescription) {\n          that.peerConnection.setLocalDescription(sessionDescription);\n          that.state = 'offer-received-preparing-answer';\n\n          if (!that.iceStarted) {\n            var now = new Date();\n            Logger.debug(now.getTime() + ': Starting ICE in responder');\n            that.iceStarted = true;\n          } else {\n            that.markActionNeeded();\n            return;\n          }\n        }, function() {\n          Logger.debug(\"Ups! Something went wrong\");\n        });\n      } else if (that.state === 'offer-received-preparing-answer') {\n        if (that.moreIceComing) {\n          return;\n        }\n\n        var mySDP = that.peerConnection.localDescription.sdp;\n        that.sendMessage('ANSWER', mySDP);\n        that.state = 'established';\n      } else {\n        that.error('Dazed and confused in state ' + that.state + ', stopping here');\n      }\n      that.actionNeeded = false;\n    }\n  };\n\n  that.sendOK = function () {\n    that.sendMessage('OK');\n  };\n\n  /**\n   * Internal function to send a signalling message.\n   * @param {string} operation What operation to signal.\n   * @param {string} sdp SDP message body.\n   */\n  that.sendMessage = function (operation, sdp) {\n    var roapMessage = {};\n    roapMessage.messageType = operation;\n    roapMessage.sdp = sdp; // may be null or undefined\n    if (operation === 'OFFER') {\n      roapMessage.offererSessionId = that.sessionId;\n      roapMessage.answererSessionId = that.otherSessionId; // may be null\n      roapMessage.seq = (that.sequenceNumber += 1);\n      // The tiebreaker needs to be neither 0 nor 429496725.\n      roapMessage.tiebreaker = Math.floor(Math.random() * 429496723 + 1);\n    } else {\n      roapMessage.offererSessionId = that.incomingMessage.offererSessionId;\n      roapMessage.answererSessionId = that.sessionId;\n      roapMessage.seq = that.incomingMessage.seq;\n    }\n    that.onsignalingmessage(JSON.stringify(roapMessage));\n  };\n\n  that.error = function (text) {\n    throw 'Error in RoapOnJsep: ' + text;\n  };\n\n  that.sessionId = (that.roapSessionId += 1);\n  that.sequenceNumber = 0; // Number of last ROAP message sent. Starts at 1.\n  that.actionNeeded = false;\n  that.iceStarted = false;\n  that.moreIceComing = true;\n  that.iceCandidateCount = 0;\n  that.onsignalingmessage = spec.callback;\n\n  that.peerConnection.ontrack = function (stream) {\n    if (that.onaddstream) {\n      that.onaddstream(stream, \"ontrack\");\n    }\n  };\n\n  that.peerConnection.onremovestream = function (stream) {\n    if (that.onremovestream) {\n      that.onremovestream(stream);\n    }\n  };\n\n  that.peerConnection.oniceconnectionstatechange = function (e) {\n    if(e.currentTarget.iceConnectionState === \"connected\") {\n      that.connectedTime = new Date();\n    }\n\n    if (that.oniceconnectionstatechange) {\n      that.oniceconnectionstatechange(e.currentTarget.iceConnectionState);\n    }\n  };\n\n  var setMaxBW = function (sdp) {\n    if (spec.video && spec.maxVideoBW) {\n      var a = sdp.match(/m=video.*\\r\\n/);\n      if (a == null) {\n        a = sdp.match(/m=video.*\\n/);\n      }\n      if (a && (a.length > 0)) {\n        var r = a[0] + \"b=TIAS:\" + spec.maxVideoBW * 1000 + \"\\r\\n\";\n        sdp = sdp.replace(a[0], r);\n      }\n    }\n\n    if (spec.audio && spec.maxAudioBW) {\n      var a = sdp.match(/m=audio.*\\r\\n/);\n      if (a == null) {\n        a = sdp.match(/m=audio.*\\n/);\n      }\n      if (a && (a.length > 0)) {\n        var r = a[0] + \"b=TIAS:\" + spec.maxAudioBW * 1000 + \"\\r\\n\";\n        sdp = sdp.replace(a[0], r);\n      }\n    }\n\n    return sdp;\n  };\n\n  that.onaddstream = null;\n  that.onremovestream = null;\n  that.state = 'new';\n  // Auto-fire next events.\n  that.markActionNeeded();\n  return that;\n};\n\nexport default FirefoxStack\n\n\n\n// WEBPACK FOOTER //\n// ./src/webrtc-stacks/FirefoxStack.js","var publishStatsFilter = function(stats) {\n  var detection = {\n    audioSendBytes: \"0\",\n    audioSendPackets: \"0\",\n\n    videoSendBytes: \"0\",\n    videoSendPackets: \"0\",\n    videoSendPacketsLost: \"0\",\n    videoSendFrameRate: \"0\",\n    videoSendBandwidth: \"0\",\n    videoSendResolutionWidth: \"0\",\n    videoSendResolutionHeight: \"0\",\n\n    audioCodecName:\"\",\n    videoCodecName:\"\",\n\n    timestamp: \"\",\n    startTime: \"\",\n    duration: \"0\",\n  }\n\n  stats.forEach(function(stat) {\n    if(stat.type === \"VideoBwe\") {\n      detection.videoSendBandwidth = stat.googAvailableSendBandwidth;\n\n    } else if(stat.id.indexOf(\"send\") !== -1 || \n      stat.id.indexOf(\"outbound_rtp\") !== -1 ||\n      stat.id.indexOf(\"OutboundRTP\") !== -1 ) {\n\n      if(stat.mediaType === \"audio\") {\n        detection.audioSendBytes = stat.bytesSent;\n        detection.audioSendPackets = stat.packetsSent;\n        detection.audioCodecName = stat.googCodecName;\n      } else {\n        detection.videoSendBytes = stat.bytesSent;\n        detection.videoSendPackets = stat.packetsSent;\n        detection.videoSendPacketsLost = stat.packetsLost;\n        detection.videoSendFrameRate = stat.googFrameRateSent;\n        detection.videoSendResolutionWidth = stat.googFrameWidthSent;\n        detection.videoSendResolutionHeight = stat.googFrameHeightSent;\n        detection.videoCodecName = stat.googCodecName;\n      }\n\n    } else if(stat.id === \"time\") {\n      detection.timestamp = stat.timestamp;\n      detection.startTime = stat.startTime;\n    }\n  });\n  \n  if(detection.timestamp instanceof Date && detection.startTime instanceof Date) {\n    detection.duration = Math.floor((detection.timestamp.getTime() - detection.startTime.getTime()) / 1000) + \"\";\n  }\n\n  return detection;\n}\n\nvar subscribeStatsFilter = function(stats) {\n  var detection = {\n    audioReceiveBytes: \"0\",\n    audioReceivePackets: \"0\",\n    audioReceivePacketsLost: \"0\",\n\n    videoReceiveBytes: \"0\",\n    videoReceivePackets: \"0\",\n    videoReceivePacketsLost: \"0\",\n    videoReceiveFrameRate: \"0\",\n    videoReceiveDecodeFrameRate: \"0\",\n    videoReceiveBandwidth: \"0\",\n    videoReceivedResolutionWidth: \"0\",\n    videoReceivedResolutionHeight: \"0\",\n\n    timestamp: \"\",\n    startTime: \"\",\n    duration: \"0\",\n  }\n\n  stats.forEach(function(stat) {\n    if(stat.type === \"VideoBwe\") {\n      detection.videoReceiveBandwidth = stat.googAvailableReceiveBandwidth;\n\n    } else if(stat.id.indexOf(\"recv\") !== -1 || \n      stat.id.indexOf(\"inbound_rtp\") !== -1 ||\n      stat.id.indexOf(\"InboundRTP\") !== -1) {\n\n      if(stat.mediaType === \"audio\") {\n        detection.audioReceiveBytes = stat.bytesReceived;\n        detection.audioReceivePackets = stat.packetsReceived;\n        detection.audioReceivePacketsLost = stat.packetsLost;\n      } else {  \n        detection.videoReceiveBytes = stat.bytesReceived;\n        detection.videoReceivePacketsLost = stat.packetsLost;\n        detection.videoReceivePackets = stat.packetsReceived;\n        detection.videoReceiveFrameRate = stat.googFrameRateReceived;\n        detection.videoReceiveDecodeFrameRate = stat.googFrameRateDecoded;\n        detection.videoReceivedResolutionWidth = stat.googFrameWidthReceived;\n        detection.videoReceivedResolutionHeight = stat.googFrameHeightReceived;\n      }\n\n    } else if(stat.id === \"time\"){\n      detection.timestamp = stat.timestamp;\n      detection.startTime = stat.startTime;\n    }\n  });\n  if(detection.timestamp instanceof Date && detection.startTime instanceof Date) {\n    detection.duration = Math.floor((detection.timestamp.getTime() - detection.startTime.getTime()) / 1000) + \"\";\n  }\n\n  return detection;  \n}\n\nexport {\n  publishStatsFilter,\n  subscribeStatsFilter\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Stats.js","import GatewayClient from \"./GatewayClient\"\nimport Logger from \"./utils/Logger\"\nimport ErrorCodes from \"./utils/ErrorCodes\"\nimport {safeCall, generateSessionId} from \"./Helper\"\nimport {getGatewayList} from \"./Server\"\nimport {report} from \"./Report2\"\nimport {getBrowserOS} from \"./utils/Browser\"\nimport {simMap} from \"./SimMap\"\nimport {Stream, getDevices} from \"./Stream\"\n\nconst PUBLISHED = 0;\nconst PUBLISHING = 1;\nconst UNPUBLISHED = 2;\n\nvar Client = function (spec) {\n  \"use strict\";\n\n  var that = {};\n  that.key = undefined;\n\n  that.highStream = null;\n  that.lowStream = null;\n  that.isDualStream = false;\n  that.highStreamState = UNPUBLISHED;\n  that.lowStreamState = UNPUBLISHED;\n\n  that._getVideoCameraIdByLabel = function(label, onSuccess, onFailure) {\n    getDevices((devices) => {\n      for(let device of devices) {\n        if(device.label === label && device.kind === 'videoinput') {\n          return onSuccess(device.deviceId);\n        }\n      }\n      return onFailure();\n    }, onFailure);\n  } \n\n  that.init = function (appId, onSuccess, onFailure) {\n    Logger.info(\"Initializing AgoraRTC client\");\n    spec.appId = appId;\n    spec.sessionId = generateSessionId();\n    onSuccess();\n  };\n\n  that.configPublisher = function(config) {\n    that.gatewayClient.configPublisher(config);\n  };\n\n  that.enableDualStream = function(onSuccess, onFailure) {\n    if(getBrowserOS() === \"iOS\") {\n      report.streamSwitch(spec.sessionId, {\n        lts: new Date().getTime(),\n        isdual: true,\n        succ: false,\n      })\n      return onFailure && onFailure(ErrorCodes.IOS_NOT_SUPPORT);\n    }\n\n    report.streamSwitch(spec.sessionId, {\n      lts: new Date().getTime(),\n      isdual: true,\n      succ: true,\n    })\n\n    that.isDualStream = true;\n    if(that.highStreamState === PUBLISHED) {\n      that._publishLowStream(onSuccess, onFailure);\n    } else if(that.highStreamState === PUBLISHING) {\n      onFailure && onFailure(ErrorCodes.STILL_ON_PUBLISHING);\n    } else {\n      onSuccess && onSuccess();\n    }\n  }\n\n  that.disableDualStream = function(onSuccess, onFailure) {\n    report.streamSwitch(spec.sessionId, {\n      lts: new Date().getTime(),\n      isdual: false,\n      succ: true,\n    });\n\n    that.isDualStream = false;\n    if(that.highStreamState === PUBLISHED) {\n      that._unpublishLowStream(onSuccess, onFailure);\n    } else if(that.highStreamState === PUBLISHING) {\n      onFailure && onFailure(ErrorCodes.STILL_ON_PUBLISHING);\n    } else {\n      onSuccess && onSuccess();\n    }\n  }\n\n  that._createLowStream = function(onSuccess, onFailure) {\n    if(!that.highStream || !that.highStream.stream) {\n      return Logger.warning(\"Can't create low-stream without highStream\");\n    }\n\n    var spec = Object.assign({}, that.highStream.params);\n    spec.streamID += 1;\n    spec.audio = false;\n\n    if(!spec.video) {\n      return;\n    }\n    \n    var videoTrack = that.highStream.stream.getVideoTracks()[0];\n    if(!videoTrack) {\n      onFailure('can not get hight-stream video track');\n    }\n\n    that._getVideoCameraIdByLabel(videoTrack.label ,function(deviceId) {\n      spec.cameraId = deviceId;\n      var lowStream = new Stream(spec);\n\n      lowStream.setVideoProfileCustom(simMap(that.highStream.profile));\n      lowStream.init(() => {\n        that.highStream.lowStream = lowStream;\n        if(!videoTrack.enabled) {\n          lowStream.disableVideo();\n        }\n        onSuccess && onSuccess(lowStream);\n      }, () => onFailure('can not get hight-stream video track'));\n    }) \n  }\n\n  that._getLowStream = function(onSuccess, onFailure) {\n    if(that.lowStream) {\n      onSuccess(that.lowStream)\n    } else {\n      that._createLowStream(lowStream => {\n        that.lowStream = lowStream;\n        onSuccess(that.lowStream)\n      }, onFailure);\n    }\n  }\n\n  that._publishLowStream = function(onSuccess, onFailure) {\n    if(that.lowStreamState !== UNPUBLISHED) {\n      Logger.warning(\"Can't publish low-stream when low-stream already publish\");\n      return onFailure && onFailure();\n    }\n\n    if(that.highStream && that.highStream.hasScreen()) {\n      return onFailure && onFailure(ErrorCodes.SHARING_SCREEN_NOT_SUPPORT);\n    }\n\n    that._getLowStream(lowStream => {\n      that.lowStreamState = PUBLISHING;\n      that.gatewayClient.publish(lowStream, () => {\n        that.lowStreamState = PUBLISHED;\n        onSuccess && onSuccess();\n      }, (e) => {\n        Logger.debug(\"publish low stream failed\");\n        onFailure && onFailure(e);\n      });\n    }, onFailure)\n    \n  }\n\n  that._unpublishLowStream = function(onSuccess, onFailure) {\n    if(that.lowStreamState !== PUBLISHED) {\n      Logger.warning(\"Can't unpublish low-stream when low-stream not ever publish\");\n      return onFailure && onFailure();\n    }\n\n    if(that.lowStream) {\n      that.lowStreamState = PUBLISHING;\n      that.gatewayClient.unpublish(that.lowStream, () => {\n          that.lowStream.close();\n          that.lowStream = null;\n          that.lowStreamState = UNPUBLISHED;\n          onSuccess && onSuccess();\n        }, (e) => {\n          Logger.debug(\"unpublish low stream failed\");\n          onFailure && onFailure(e);\n        }\n      );\n    }\n\n  }\n\n  that.join = function(channelKey, channel, uid, onSuccess, onFailure) {\n    that.highStream = null;\n    that.lowStream = null;\n    that.isDualStream = false;\n    that.highStreamState = UNPUBLISHED;\n    that.lowStreamState = UNPUBLISHED;\n\n    var joinInfo = {\n      appId: spec.appId,\n      sid: spec.sessionId,\n      cname: channel,\n      uid: uid\n    }\n\n    // sessionInit event report\n    report.sessionInit(spec.sessionId, {\n      lts: new Date().getTime(),\n      cname: channel,\n      appid: spec.appId,\n      mode: spec.mode,\n      succ: true,\n    })\n    \n    getGatewayList(joinInfo, function(res) {\n      Logger.info(\"Joining channel: \" + channel);\n    \n      // TODO delete if useless\n      if (channelKey) {\n        that.key = channelKey;\n      } else {\n        that.key = spec.appId;\n      }\n\n      joinInfo.cid = res.cid;\n      joinInfo.uid = res.uid;\n      joinInfo.gatewayAddr = res.gateway_addr; \n\n      that.gatewayClient.join(joinInfo, that.key, function(uid) {\n        Logger.info(\"Join channal \" + channel + \" success\");\n        onSuccess(uid);\n      }, onFailure);\n    }, onFailure);\n  };\n\n  that.renewChannelKey = function(channelKey, onSuccess, onFailure) {\n    if (that.key === undefined) {\n      safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n      Logger.error(\"renewChannelKey should not be called before user join\");\n    }\n    that.key = channelKey;\n    safeCall(onSuccess);\n  };\n\n  that.leave = function(onSuccess, onFailure) {\n    Logger.info(\"Leaving channel\");\n    that.gatewayClient.leave(onSuccess, onFailure);\n  };\n\n  that.publish = function (stream, onFailure) {\n    if(that.highStreamState !== UNPUBLISHED) {\n      Logger.warning(\"Can't publish stream when stream already publish\", stream.getId());\n      return onFailure && onFailure(\"stream already publish\");\n    }\n\n    Logger.info(\"Publishing stream, uid: \" , stream.getId());\n    that.highStream = stream;\n    that.highStreamState = PUBLISHING;\n\n    that.gatewayClient.publish(stream, function() {\n      stream.sid = spec.sessionId;\n      that.highStreamState = PUBLISHED;\n      Logger.info(\"Publish success, uid:\", stream.getId());\n      if(that.isDualStream) {\n        that._publishLowStream(null, onFailure);\n      }\n    }, onFailure); \n\n  };\n\n  that.unpublish = function (stream, onFailure) {\n    if(that.highStreamState !== PUBLISHED) {\n      Logger.warning(\"Can't unpublish stream when stream not publish\");\n      return onFailure && onFailure(\"stream not publish\");\n    }\n\n    Logger.info(\"Unpublish stream, uid: \" , stream.getId());\n\n    if(that.isDualStream && that.lowStream) {\n      that._unpublishLowStream(() => {\n        that.highStreamState = PUBLISHING;\n        that.gatewayClient.unpublish(stream, () => {\n          that.highStreamState = UNPUBLISHED;\n          Logger.info(\"Unpublish stream success, uid:\", stream.getId());\n        }, onFailure);\n      }, onFailure)\n\n    } else {\n      that.highStreamState = PUBLISHING;\n      that.gatewayClient.unpublish(stream, () => {\n        that.highStreamState = UNPUBLISHED;\n        Logger.info(\"Unpublish stream success, uid:\", stream.getId());\n      }, onFailure);\n    }\n\n  };\n\n  that.subscribe = function (stream, onFailure) {\n    Logger.info(\"Subscribe stream, uid: \" , stream.getId());\n    that.gatewayClient.subscribe(stream, onFailure);\n  };\n\n  that.unsubscribe = function (stream, onFailure) {\n    Logger.info(\"Unsubscribe stream, uid: \" , stream.getId());\n    that.gatewayClient.unsubscribe(stream, onFailure);\n  };\n  \n  that.setRemoteVideoStreamType = function (stream, streamType) {\n    that.gatewayClient.setRemoteVideoStreamType(stream, streamType);\n  };\n\n  that.startLiveStreaming = function (url, transcodingEnabled) {\n    that.gatewayClient.startLiveStreaming(url, transcodingEnabled);\n  };\n\n  that.stopLiveStreaming = function (url) {\n    that.gatewayClient.stopLiveStreaming(url);\n  };\n\n  that.setLiveTranscoding = function (transcoding) {\n    Object.assign(LiveTranscoding, transcoding);\n    that.gatewayClient.setLiveTranscoding(LiveTranscoding);\n  };\n\n  that.gatewayClient = GatewayClient(spec);\n  that.on = that.gatewayClient.on;\n\n  that.on(\"rejoin\", () => {\n    // won't republish if preState = UNPUBLISHED, and PUBLISHING as PUBLISHED;\n    let preState = that.highStreamState === UNPUBLISHED ? UNPUBLISHED : PUBLISHED;\n    \n    if(that.highStream && preState === PUBLISHED) {\n      Logger.info(\"publish after rejoin\");\n      that.highStreamState = UNPUBLISHED;\n      that.lowStreamState = UNPUBLISHED;\n\n      that.publish(that.highStream, e => {\n        e && Logger.info(e);\n      });\n    }\n  })\n\n  return that;\n};\n\n// AUDIO_SAMPLE_RATE_TYPE\nvar AUDIO_SAMPLE_RATE_32000 = 32000;\nvar AUDIO_SAMPLE_RATE_44100 = 44100;\nvar AUDIO_SAMPLE_RATE_48000 = 48000;\n\n// VIDEO_CODEC_PROFILE_TYPE\nvar VIDEO_CODEC_PROFILE_BASELINE = 66;\nvar VIDEO_CODEC_PROFILE_MAIN = 77;\nvar VIDEO_CODEC_PROFILE_HIGH = 100;\n\nvar TranscodingUser = {\n  uid: 0,\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  zOrder: 0,\n  alpha: 1.0,\n};\n\nvar LiveTranscoding = {\n  width: 640,\n  height: 360,\n  videoBitrate: 400,\n  videoFramerate: 15,\n  lowLatency: false,\n  audioSampleRate: AUDIO_SAMPLE_RATE_48000,\n  audioBitrate: 48,\n  audioChannels: 1,\n  videoGop: 30,\n  videoCodecProfile: VIDEO_CODEC_PROFILE_HIGH,\n  userCount: 0,\n  userConfigExtraInfo: {},\n  backgroundColor: 0x000000,\n  transcodingUsers: [],\n};\n\nvar createClient = function(options) {\n  if (options && options.mode === \"interop\") {\n    Logger.info(\"Creating client , MODE : Interop\");\n    return Client({mode: \"live\"});\n  } else if (options && options.mode === \"h264_interop\") {\n    Logger.info(\"Creating client , MODE : h264_interop\");\n    return Client({mode: \"live\", codec: \"h264\"});\n  }\n  Logger.info(\"Creating client , MODE : web-only\");\n  return Client({mode: \"rtc\"});\n};\n\nvar createRtcClient = function() {\n  Logger.info(\"Creating client , MODE : rtc\");\n  Logger.warning(\"createRtcClient is deprecated.\");\n  return Client({mode: \"rtc\"});\n};\n\nvar createLiveClient = function(spec) {\n  var id = \"host\";\n  if (spec && spec.role === \"audience\") {\n    id = spec.role;\n  }\n  Logger.info(\"Creating client , MODE : live\");\n  Logger.warning(\"createLiveClient is deprecated.\");\n  return Client({mode: \"live\", role: id});\n};\n\nexport {\n  createClient,\n  createRtcClient,\n  createLiveClient,\n  AUDIO_SAMPLE_RATE_32000,\n  AUDIO_SAMPLE_RATE_44100,\n  AUDIO_SAMPLE_RATE_48000,\n  VIDEO_CODEC_PROFILE_BASELINE,\n  VIDEO_CODEC_PROFILE_MAIN,\n  VIDEO_CODEC_PROFILE_HIGH,\n  TranscodingUser,\n  LiveTranscoding\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Client.js","import {Stream} from \"./Stream\"\nimport Socket from \"./Websocket\"\nimport {Connection} from \"./Connection\"\nimport {EventDispatcher, StreamEvent, ClientEvent, LiveStreamingEvent} from \"./Events\"\nimport Logger from \"./utils/Logger\"\nimport ErrorCodes from \"./utils/ErrorCodes\"\nimport AgoraCall from \"./utils/AgoraCall\"\nimport {getGatewayList} from \"./Server\"\nimport {VERSION} from \"./Config\"\nimport {report} from \"./Report2\"\nimport {vsResHack} from \"./Helper\"\nimport { isFireFox } from \"./utils/Browser\";\n\nvar GatewayClient = function (spec) {\n    \"use strict\";\n\n    var isBanned = false;\n    var Ping = function () {\n        return {\"_type\":\"ping\"};\n    };\n    var Join = function() {\n        var join = {\n          \"key\": that.key,\n          \"channel\":that.joinInfo.cname,\n          \"uid\": that.uid,\n          \"version\": VERSION,\n          \"browser\": navigator.userAgent,\n          \"mode\": spec.mode,\n          \"role\": spec.role,\n          \"config\": that.config\n        };\n        return {\"_type\":\"join1\",\"message\":join};\n    };\n    var Leave = function () {\n      return {\"_type\":\"leave\"};\n    };\n    var Control = function (options) {\n      return {\"_type\":\"control\",\"message\":options};\n    };\n    var Token = function (spec) {\n      // \"spec\":{\"mode\":\"live\",\"version\":\"1.12.0\",\"host\":\"webgw-washington-na-1.agora.io:5866\"}\n      return {\"_type\":\"token\",\"message\":spec};\n    };\n    var P2PLost = function () {\n      return {\"_type\":\"p2p_lost\",\"message\":null};\n    };\n    var Unpublish = function (streamId) {\n      return {\"_type\":\"unpublish\",\"message\":streamId};\n    };\n    var Unsubscribe = function (streamId) {\n      return {\"_type\":\"unsubscribe\",\"message\":streamId};\n    };\n    var SwitchVideoStream = function (streamId, streamType) {\n      return {\"_type\":\"switchVideoStream\",\"message\":{id: streamId, type: streamType}};\n    };\n    var Publish = function (options, sdp) {\n      return {\"_type\":\"publish\",\"options\":options,\"sdp\":sdp};\n    };\n    var PublishStats = function (stats) {\n      return {\"_type\":\"publish_stats\",\"options\":{\"stats\":stats},\"sdp\":null};\n    };\n    var PublishStatsLow = function (stats) {\n      return {\"_type\":\"publish_stats_low\",\"options\":{\"stats\":stats},\"sdp\":null};\n    };\n    var Subscribe = function (options, sdp) {\n      return {\"_type\":\"subscribe\",\"options\":options,\"sdp\":sdp};\n    };\n    var SubscribeStats = function (streamId, stats) {\n      return {\"_type\":\"subscribe_stats\",\"options\":{id: streamId, stats: stats},\"sdp\":null};\n    };\n    var StartLiveStreaming = function (url, transcodingEnabled) {\n      return {\"_type\": \"start_live_streaming\", \"message\": {url: url, transcodingEnabled: transcodingEnabled}};\n    };\n    var StopLiveStreaming = function (url) {\n      return {\"_type\": \"stop_live_streaming\", \"message\": {url: url}};\n    };\n    var SetLiveTranscoding = function (transcoding) {\n      return {\"_type\": \"set_live_transcoding\", \"message\": {transcoding: transcoding}};\n    };\n\n    var DISCONNECTED = 0;\n    var CONNECTING = 1;\n    var CONNECTED = 2;\n\n    var that = EventDispatcher(spec);\n    that.socket = undefined;\n    that.state = DISCONNECTED;\n    that.mode = spec.mode;\n    that.role = spec.role;\n    that.codec = spec.codec;\n    that.config = {};\n    that.timers = {};\n    that.timer_counter = {};\n    that.localStreams = {};\n    that.remoteStreams = {};\n    that.attemps = 1;\n    that.p2p_attemps = 1;\n    that.audioLevel = {};\n    that.activeSpeaker = undefined;\n    that.firstFrameTimer = new Map();\n\n    that.liveStreams = new Map();\n\n    var safeCall = AgoraCall;\n\n    that.remoteVideoStreamTypes = {\n        REMOTE_VIDEO_STREAM_HIGH: 0,\n        REMOTE_VIDEO_STREAM_LOW: 1,\n        REMOTE_VIDEO_STREAM_MEDIUM: 2\n    };\n\n    that.configPublisher = function (config) {\n      that.config = config;\n    };\n\n    that.join = function(joinInfo, channelKey, onSuccess, onFailure) {\n        var lts = new Date().getTime();\n        var uid = joinInfo.uid;\n\n        if (that.state !== DISCONNECTED) {\n          onFailure && onFailure(ErrorCodes.INVALID_OPERATION);\n          report.joinGateway(joinInfo.sid, {\n            lts: lts,\n            succ: false,\n            ec: ErrorCodes.INVALID_OPERATION,\n            addr: null,\n          });\n          Logger.error(\"Server already in connecting/connected state\");\n          return;\n        }\n\n        if (uid !== null && uid !== undefined && parseInt(uid) !== uid) { //user specified uid MUST be integer\n          onFailure && onFailure(ErrorCodes.INVALID_PARAMETER);\n          report.joinGateway(joinInfo.sid, {\n            lts: lts,\n            succ: false,\n            ec: ErrorCodes.INVALID_PARAMETER,\n            addr: null,\n          });\n          Logger.error(\"Input uid is invalid\");\n          return;\n        }\n\n        that.joinInfo = joinInfo;\n        that.uid = uid;\n        that.key = channelKey;\n        // Connect to VosGateway\n        that.state = CONNECTING;\n        connectSocket(\n          joinInfo\n          , function (response) {\n            that.stunServerUrl = response.stunServerUrl;\n            that.turnServer = response.turnServer;\n            that.state = CONNECTED;\n            Logger.debug(\"Connected to gateway server\");\n\n            that.pingTimer = setInterval(\n              function() {\n                  sendMessage(\n                    Ping()\n                    , function () {}\n                    , function (e) {}\n                  );\n              }\n              , 3000);\n\n            sendMessage(\n              Join()\n              , function (message) {\n                report.joinGateway(joinInfo.sid, {\n                  lts: lts,\n                  succ: true,\n                  ec: null,\n                  vid: message.vid,\n                  addr: that.socket.getURL(),\n                })\n                onSuccess(that.uid);\n              }\n              , function (err) {\n                Logger.error(\"User join failed [\" + err + \"]\");\n                if (err === ErrorCodes.ERR_INVALID_VENDOR_KEY) {\n                  err = ErrorCodes.INVALID_KEY;\n                } else if (err === ErrorCodes.ERR_INVALID_DYNAMIC_KEY) {\n                  err = ErrorCodes.INVALID_DYNAMIC_KEY;\n                } else if (err === ErrorCodes.ERR_DYNAMIC_KEY_TIMEOUT) {\n                  err = ErrorCodes.DYNAMIC_KEY_TIMEOUT;\n                } else if (err === ErrorCodes.ERR_NO_VOCS_AVAILABLE) {\n                  err = ErrorCodes.NO_VOCS_AVAILABLE;\n                } else if (err === ErrorCodes.ERR_NO_VOS_AVAILABLE) {\n                  err = ErrorCodes.NO_VOS_AVAILABLE;\n                } else if (err === ErrorCodes.ERR_JOIN_CHANNEL_TIMEOUT) {\n                  err = ErrorCodes.JOIN_CHANNEL_TIMEOUT;\n                } else if (err === ErrorCodes.ERR_FAILED) {\n                  err = ErrorCodes.FAILED;\n                } else if (err === ErrorCodes.WARN_NO_AVAILABLE_CHANNEL) {\n                  err = ErrorCodes.NO_AVAILABLE_CHANNEL;\n                } else if (err === ErrorCodes.WARN_LOOKUP_CHANNEL_TIMEOUT) {\n                  err = ErrorCodes.LOOKUP_CHANNEL_TIMEOUT;\n                } else if (err === ErrorCodes.WARN_LOOKUP_CHANNEL_REJECTED) {\n                  err = ErrorCodes.LOOKUP_CHANNEL_REJECTED;\n                } else if (err === ErrorCodes.WARN_OPEN_CHANNEL_TIMEOUT) {\n                  err = ErrorCodes.OPEN_CHANNEL_TIMEOUT;\n                } else if (err === ErrorCodes.WARN_OPEN_CHANNEL_REJECTED) {\n                  err = ErrorCodes.OPEN_CHANNEL_REJECTED;\n                } else if (err === ErrorCodes.WARN_REQUEST_DEFERRED) {\n                  err = ErrorCodes.REQUEST_DEFERRED;\n                }\n\n                onFailure && onFailure(err);\n                report.joinGateway(joinInfo.sid, {\n                  lts: lts,\n                  succ: false,\n                  ec: err,\n                  addr: that.socket.getURL(),\n                });\n              });\n            }\n          , function (error) {\n            error = JSON.stringify(error);\n            Logger.error(\"User join failed [\" + error + \"]\");\n            onFailure && onFailure(error);\n            report.joinGateway(joinInfo.sid, {\n              lts: lts,\n              succ: false,\n              ec: error,\n              addr: that.socket.getURL(),\n            });\n        });\n    };\n\n  that.leave = function(onSuccess, onFailure) {\n    // Logger.debug(\"Leaving channel ts\", new Date().getTime());\n    if (that.state != CONNECTED) {\n      safeCall(onSuccess);\n      return ;\n    }\n\n    clearInterval(that.pingTimer);\n    for (var i in that.timers) {\n      if (that.timers.hasOwnProperty(i)) {\n        clearInterval(that.timers[i]);\n      }\n    }\n\n    sendMessage(Leave(), function (message) {\n      that.socket.close();\n      that.socket = undefined;\n      Logger.info(\"Leave channal success\");\n      onSuccess && onSuccess(message);\n    }, onFailure);\n\n    // Remove local streams\n    for (var i in that.localStreams) {\n      if (that.localStreams.hasOwnProperty(i)) {\n        var stream = that.localStreams[i];\n        delete that.localStreams[i];\n        if (stream.pc !== undefined) {\n          stream.pc.close();\n          stream.pc = undefined;\n        }\n      }\n    }\n\n    removeRemoteStreams();\n\n    that.state = DISCONNECTED;\n  };\n  \n  // It publishes the stream provided as argument.\n  that.publish = function (stream, onSuccess, onFailure) {\n    var lts = new Date().getTime();\n    //TODO rwrite - for the dtls failed can not raise event to report\n    stream.publishLTS = lts;\n\n    if (typeof stream !== \"object\" || stream === null) {\n      Logger.error(\"Invalid local stream\");\n      onFailure && onFailure(ErrorCodes.INVALID_LOCAL_STREAM);\n      report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: ErrorCodes.INVALID_LOCAL_STREAM,\n      });\n      return;\n    }\n    if (stream.stream === null && stream.url === undefined) {\n      Logger.error(\"Invalid local media stream\");\n      onFailure && onFailure(ErrorCodes.INVALID_LOCAL_STREAM);\n      report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: ErrorCodes.INVALID_LOCAL_STREAM,\n      });\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      Logger.error(\"User is not in the session\");\n      onFailure && onFailure(ErrorCodes.INVALID_OPERATION);\n      report.publish(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        ec: ErrorCodes.INVALID_OPERATION,\n      });\n      return;\n    }\n    var options = stream.getAttributes() || {};\n    // If the stream is not local we do nothing\n    if (stream.local && that.localStreams[stream.getId()] === undefined) {\n      // Publish media stream to VoS gateway\n      if (stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) {\n        if (stream.url !== undefined) {\n          // TODO: 暂时忽略，不会走入  --阿毛\n          sendSimpleSdp(\n            Publish({\n              state: \"url\", \n              audio: stream.hasAudio(), \n              video: stream.hasVideo(), \n              attributes: stream.getAttributes(), \n              mode: that.mode\n            }, stream.url), \n            function (answer, id) {\n              if (answer === \"success\") {\n                stream.getUserId = function () {\n                  return id;\n                };\n                that.localStreams[id] = stream;\n                stream.onClose = function () {\n                  that.unpublish(stream);\n                };\n              } else {\n                Logger.error(\"Publish local stream failed\", answer);\n              }\n            }\n          );\n        } else {\n          // Keep record of the local stream before sending publish message.\n          // We rely on this record to recover when reconnecting.\n          that.localStreams[stream.getId()] = stream;\n          stream.pc = Connection({\n            callback: function (offer) {\n              Logger.debug(\"SDP exchange in publish : send offer --  \", JSON.parse(offer));\n              sendSimpleSdp(\n                Publish({\n                  state: \"offer\", \n                  id: stream.getId(), \n                  audio: stream.hasAudio(), \n                  video: stream.hasVideo() || stream.hasScreen(), \n                  attributes: stream.getAttributes(), \n                  mode: that.mode, codec: that.codec\n                }, offer), \n                function (answer, info) {\n                  if (answer === \"error\") {\n                    Logger.error(\"Publish local stream failed\");\n                    onFailure && onFailure(ErrorCodes.PUBLISH_STREAM_FAILED);\n                    report.publish(that.joinInfo.sid, {\n                      lts: lts,\n                      succ: false,\n                      localSDP: offer,\n                      ec: ErrorCodes.PUBLISH_STREAM_FAILED,\n                    });\n                    return;\n                  }\n\n                  stream.pc.onsignalingmessage = function (ok) {\n                    stream.pc.onsignalingmessage = function () {};\n                    sendSimpleSdp(\n                      Publish({\n                        state: \"ok\", \n                        id: stream.getId(), \n                        audio: stream.hasAudio(), \n                        video: stream.hasVideo(), \n                        screen: stream.hasScreen(), \n                        attributes: stream.getAttributes(), \n                        mode: that.mode\n                      }, ok)\n                    );\n\n                    stream.getUserId = function () {\n                      return info.id;\n                    }\n                    Logger.info(\"Local stream published with uid\", info.id);\n                    stream.onClose = function () {\n                      that.unpublish(stream);\n                    }\n                    stream.unmuteAudio = function() {\n                      sendMessage(Control({\"action\": \"audio-out-on\", \"streamId\": stream.getId()}), function(){}, function(){});\n                    };\n                    stream.unmuteVideo = function() {\n                      sendMessage(Control({\"action\": \"video-out-on\", \"streamId\": stream.getId()}), function(){}, function(){});\n                    };\n                    stream.muteAudio = function() {\n                      sendMessage(Control({\"action\": \"audio-out-off\", \"streamId\": stream.getId()}), function(){}, function(){});\n                    };\n                    stream.muteVideo = function() {\n                      sendMessage(Control({\"action\": \"video-out-off\", \"streamId\": stream.getId()}), function(){}, function(){});\n                    };\n                  };\n\n                  stream.pc.oniceconnectionstatechange = function (state) {\n                    if (state === \"failed\") {\n                      if (that.timers[stream.getId()] != undefined) {\n                        clearInterval(that.timers[stream.getId()]);\n                      }\n                      sendMessage(P2PLost(), function () {}, function () {});\n                      that.socket.disconnect();\n                      Logger.error(\"Publisher connection is lost\");\n                      onFailure && onFailure(ErrorCodes.PEERCONNECTION_FAILED);\n                      report.publish(that.joinInfo.sid, {\n                        lts: lts,\n                        succ: false,\n                        ec: ErrorCodes.PEERCONNECTION_FAILED,\n                      });\n\n                    } else if (state === \"connected\") {\n                      onSuccess && onSuccess();\n                      // Logger.info(\"Publish success, uid:\", stream.getId());\n                      report.publish(that.joinInfo.sid, {\n                        lts: lts,\n                        succ: true,\n                        ec: null,\n                      });\n                    }\n                  };\n\n                  Logger.debug(\"SDP exchange in publish : receive answer --  \", JSON.parse(answer));\n                  stream.pc.processSignalingMessage(answer);\n                });\n            }, audio: stream.hasAudio(), \n            video: stream.hasVideo(), \n            screen: stream.hasScreen(), \n            isSubscriber: false, \n            iceServers: [], \n            stunServerUrl: that.stunServerUrl,\n            turnServer: that.turnServer, \n            maxAudioBW: options.maxAudioBW, \n            minVideoBW: options.minVideoBW, \n            maxVideoBW: options.maxVideoBW, \n            mode:that.mode, \n            codec:that.codec\n          });\n\n          stream.pc.addStream(stream.stream);\n          Logger.debug(\"PeerConnection add stream :\", stream.stream);\n          that.timers[stream.getId()] = setInterval(function() {\n            if (stream && stream.pc && stream.pc.getStats) {\n              stream.pc.getStatsRate(function(stats) {\n                stats.forEach(function(stat) {\n                  // Firefox and Safari get resolution from stream\n                  if ((stat.id.indexOf(\"outbound_rtp\") !== -1 ||\n                    stat.id.indexOf(\"OutboundRTP\") !== -1) && \n                    stat.mediaType === \"video\") {\n                      stat.googFrameWidthSent = stream.videoWidth + '';\n                      stat.googFrameHeightSent = stream.videoHeight + '';\n                  }\n\n                  // stream.getUserId wiil be undefined if pc dtls failed\n                  if(!stream.getUserId) return;\n                  \n                  if(stream.getId() === stream.getUserId()) {\n                    sendMessage(PublishStats(stat), null, null);\n                  } else {\n                    sendMessage(PublishStatsLow(stat), null, null);\n                  }\n                  \n                });\n              });\n            }\n          }, 3000);\n\n          if (stream.aux_stream !== undefined) {\n            stream.pc.addStream(stream.aux_stream);\n            Logger.debug(\"PeerConnection add stream :\", stream.aux_stream);\n          }\n        }\n      }\n    }\n  };\n\n  // It unpublishes the local stream,\n  // dispatching a StreamEvent(\"stream-removed\")\n  that.unpublish = function (stream, onSuccess, onFailure) {\n    // Logger.debug(\"Start unpublishing local stream\");\n    if (typeof stream !== \"object\" || stream === null) {\n      safeCall(onFailure, ErrorCodes.INVALID_LOCAL_STREAM);\n      Logger.error(\"Invalid local stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n      Logger.error(\"User not in the session\");\n      return;\n    }\n    if (that.timers[stream.getId()] != undefined) {\n      clearInterval(that.timers[stream.getId()]);\n    }\n    if (that.socket !== undefined) {\n      // Unpublish stream from VoS gateway\n      if (stream.local && that.localStreams[stream.getId()] !== undefined) {\n        delete that.localStreams[stream.getId()];\n        sendMessage(Unpublish(stream.getUserId()), function (answer) {\n          if (answer === \"error\") {\n            safeCall(onFailure, ErrorCodes.UNPUBLISH_STREAM_FAILED);\n            Logger.error(\"Unpublish stream failed\");\n            return;\n          }\n          if ((stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) && stream.url === undefined) {\n            if (stream.pc !== undefined) {\n              stream.pc.close();\n              stream.pc = undefined;\n            }\n          }\n          stream.onClose = undefined;\n          stream.unmuteAudio = undefined;\n          stream.muteAudio = undefined;\n          stream.unmuteVideo = undefined;\n          stream.muteVideo = undefined;\n          onSuccess && onSuccess();\n          // Logger.info(\"Unpublish stream success, uid:\", stream.getId());\n        }, onFailure);\n      } else {\n        safeCall(onFailure, ErrorCodes.INVALID_LOCAL_STREAM);\n        Logger.error(\"Invalid local stream\");\n      }\n    } else {\n      safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n      Logger.error(\"User not in the session\");\n    }\n  };\n\n  // It subscribes to a remote stream and draws it inside the HTML tag given\n  // by the ID=\"elementID\"\n  that.subscribe = function (stream, onFailure) {\n    var lts = new Date().getTime();\n    //TODO rwrite - for the dtls failed can not raise event to report\n    stream.subscribeLTS = lts;\n\n    if (typeof stream !== \"object\" || stream === null) {\n      onFailure && onFailure(ErrorCodes.INVALID_REMOTE_STREAM);\n      report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: ErrorCodes.INVALID_REMOTE_STREAM,\n      });\n      Logger.error(\"Invalid remote stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      onFailure && onFailure(ErrorCodes.INVALID_OPERATION);\n      report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: ErrorCodes.INVALID_OPERATION,\n      });\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n    if (!stream.local && that.remoteStreams.hasOwnProperty(stream.getId())) {\n      if (stream.hasAudio() || stream.hasVideo() || stream.hasScreen()) {\n        stream.pc = Connection({\n          callback: function (offer) {\n            Logger.debug(\"SDP exchange in subscribe : send offer --  \", JSON.parse(offer) );\n            sendSimpleSdp(Subscribe({\n              streamId: stream.getId(), \n              audio: true, video: true, \n              mode: that.mode, \n              codec: that.codec\n            }, offer), \n            function (answer) {\n              if (answer === \"error\") {\n                Logger.error(\"Subscribe remote stream failed, closing stream \", stream.getId())\n                stream.close();\n                return;\n              }\n              Logger.debug(\"SDP exchange in subscribe : receive answer --  \", JSON.parse(answer));\n              stream.pc.processSignalingMessage(answer);\n            });\n          }, \n          nop2p: true, \n          audio: true, \n          video: true, \n          screen: stream.hasScreen(), \n          isSubscriber: true,\n          iceServers: [], \n          stunServerUrl: that.stunServerUrl, \n          turnServer: that.turnServer\n        });\n\n        stream.pc.onaddstream = function (evt, type) {\n          // Draw on html\n          if ((type === \"ontrack\" && evt.track.kind === \"video\") || type === \"onaddstream\") {\n            Logger.info(\"Remote stream subscribed with uid \" , stream.getId());\n            if (type === \"onaddstream\") {\n              that.remoteStreams[stream.getId()].stream = evt.stream;\n            } else {\n              that.remoteStreams[stream.getId()].stream = evt.streams[0];\n            }\n            if (!that.remoteStreams[stream.getId()].hasVideo()) {\n              that.remoteStreams[stream.getId()].disableVideo();\n            } else {\n              if(isFireFox()) {\n                let st = that.remoteStreams[stream.getId()].stream;\n                vsResHack(st, (videoWidth, videoHeight) => {\n                  stream.videoWidth = videoWidth;\n                  stream.videoHeight = videoHeight;\n                }, e => Logger.warning('vsResHack failed:' + e));\n              }\n            }\n            var subscribeEvt = StreamEvent({\n              type: \"stream-subscribed\", stream: that.remoteStreams[stream.getId()]});\n            that.dispatchEvent(subscribeEvt);\n          }\n          stream.unmuteAudio = function () {\n            sendMessage(Control({\"action\": \"audio-in-on\", \"streamId\": stream.getId()}), function(){}, function(){});\n          };\n          stream.muteAudio = function () {\n            sendMessage(Control({\"action\": \"audio-in-off\", \"streamId\": stream.getId()}), function(){}, function(){});\n          };\n          stream.unmuteVideo = function () {\n            sendMessage(Control({\"action\": \"video-in-on\", \"streamId\": stream.getId()}), function(){}, function(){});\n          };\n          stream.muteVideo = function () {\n            sendMessage(Control({\"action\": \"video-in-off\", \"streamId\": stream.getId()}), function(){}, function(){});\n          };\n        };\n\n        // for argus\n        that.timers[stream.getId()] = setInterval(function() {\n          if (stream && stream.pc && stream.pc.getStats) {\n            stream.pc.getStatsRate(function(stats) {\n              stats.forEach(function(stat) {\n                // Firefox get resolution from stream\n                if(stat.id.indexOf(\"inbound_rtp\") !== -1 &&\n                  stat.mediaType === \"video\" ) {\n                    stat.googFrameWidthReceived = stream.videoWidth + '';\n                    stat.googFrameHeightReceived = stream.videoHeight + '';\n                }\n                sendSimpleSdp(SubscribeStats(stream.getId(), stat), null, null);\n              })\n            });\n          }\n        }, 3000);\n        \n        // find active-speaker\n        that.audioLevel[stream.getId()] = 0;\n        that.timers[stream.getId()+\"audio\"] = setInterval(function() {\n          if (stream && stream.pc && stream.pc.getStats) {\n            stream.pc.getStats(function(stats) {\n              stats.forEach(function(stat) {\n                if (stat.mediaType === \"audio\") {\n                  //Logger.info(\"[zzz] uid:\"+stream.getId()+\" output level\"+stat.audioOutputLevel);\n                  if (stat.audioOutputLevel > 5000) {\n                    if (that.audioLevel[stream.getId()] < 20) {\n                      that.audioLevel[stream.getId()] += 1;\n                      //Logger.info(\"[xxx] user:\"+stream.getId()+\" counter:\"+that.audioLevel[stream.getId()]);\n                    }\n                    for (var i in that.audioLevel) {\n                      if (parseInt(i) !== stream.getId() && that.audioLevel[i] > 0) {\n                        that.audioLevel[i] -= 1;\n                        //Logger.info(\"[yyy] user:\"+i+\" counter:\"+that.audioLevel[i]+\" stream:\"+stream.getId());\n                      }\n                    }\n                  }\n                  var unsortedKeys = Object.keys(that.audioLevel);\n                  var sortedUids = unsortedKeys.sort(function(uid1, uid2) {\n                    return that.audioLevel[uid2] - that.audioLevel[uid1];\n                  });\n                  if (that.activeSpeaker !== sortedUids[0]) {\n                    var evt = ClientEvent({type: \"active-speaker\", uid: sortedUids[0]});\n                    that.dispatchEvent(evt);\n                    that.activeSpeaker = sortedUids[0];\n                    Logger.debug(\"Update active speaker:\" + that.activeSpeaker);\n                  }\n                }\n              });\n            });\n          }\n        }, 50);\n        \n        stream.pc.oniceconnectionstatechange = function (state) {\n          if (state === \"failed\") {\n            if (that.timers[stream.getId()] != undefined) {\n              clearInterval(that.timers[stream.getId()]);\n              clearInterval(that.timers[stream.getId()]+\"audio\");\n            }\n            sendMessage(P2PLost(), function () {}, function () {});\n            that.socket.disconnect();\n            Logger.error(\"Subscriber connection is lost\", stream.getId());\n            onFailure && onFailure(ErrorCodes.PEERCONNECTION_FAILED);\n            report.subscribe(that.joinInfo.sid, {\n              lts: lts,\n              succ: false,\n              peerid: stream.getId() + \"\",\n              ec: ErrorCodes.PEERCONNECTION_FAILED,\n            });\n            \n          } else if (state === \"connected\") {\n            report.subscribe(that.joinInfo.sid, {\n              lts: lts,\n              succ: true,\n              peerid: stream.getId() + \"\",\n              ec: null,\n            });\n            // Report first frame\n            that.firstFrameTimer.set(stream.getId(), setInterval(function() {\n              if(stream.pc) {\n                stream.pc.getStats(function(stats) {\n                  stats.forEach(function(stat) {\n                    if(stat.id.indexOf(\"recv\") !== -1 || \n                    stat.id.indexOf(\"inbound_rtp\") !== -1 ||\n                    stat.id.indexOf(\"InboundRTP\") !== -1) {\n                      if(stat.mediaType === \"video\") {\n                        if(stat.framesDecoded > 0 || stat.googFramesDecoded > 0) {\n                          clearInterval(that.firstFrameTimer.get(stream.getId()));\n                          that.firstFrameTimer.delete(stream.getId());\n                          report.firstRemoteFrame(that.joinInfo.sid, {\n                            lts: new Date().getTime(),\n                            peerid: stream.getId() + \"\",\n                            succ: true,\n                            width: +stat.googFrameWidthReceived,\n                            height: +stat.googFrameHeightReceived\n                          });\n                        }\n                      }\n                    }\n                  })\n                });\n              } else {\n                clearInterval(that.firstFrameTimer.get(stream.getId()));\n                that.firstFrameTimer.delete(stream.getId());\n              }\n            }, 100));\n\n          }\n        };\n      } else {\n        onFailure && onFailure(ErrorCodes.INVALID_REMOTE_STREAM);\n        report.subscribe(that.joinInfo.sid, {\n          lts: lts,\n          succ: false,\n          peerid: stream.getId() + \"\",\n          ec: ErrorCodes.INVALID_REMOTE_STREAM,\n        });\n        Logger.error(\"Invalid remote stream\");\n      }\n    } else {\n      onFailure && onFailure(ErrorCodes.INVALID_REMOTE_STREAM);\n      report.subscribe(that.joinInfo.sid, {\n        lts: lts,\n        succ: false,\n        peerid: stream.getId() + \"\",\n        ec: ErrorCodes.INVALID_REMOTE_STREAM,\n      });\n      Logger.error(\"Invalid remote stream\");\n    }\n  };\n\n  // It unsubscribes from the stream, removing the HTML element\n  that.unsubscribe = function (stream, onFailure) {\n    // Logger.debug(\"Start unsubscribing remote stream with uid\", stream.getId());\n    if (typeof stream !== \"object\" || stream === null) {\n      safeCall(onFailure, ErrorCodes.INVALID_REMOTE_STREAM);\n      Logger.error(\"Invalid remote stream\");\n      return;\n    }\n\n    if (that.state !== CONNECTED) {\n      safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n\n    if (that.timers[stream.getId()] != undefined) {\n        clearInterval(that.timers[stream.getId()]);\n        clearInterval(that.timers[stream.getId()] + \"audio\");\n    }\n\n    if (that.audioLevel[stream.getId()] != undefined) {\n      delete(that.audioLevel[stream.getId()]);\n    }\n\n    if (that.timer_counter[stream.getId()] != undefined) {\n      delete(that.timer_counter[stream.getId()]);\n    }\n\n    if (! that.remoteStreams.hasOwnProperty(stream.getId())) {\n      safeCall(onFailure, ErrorCodes.NO_SUCH_REMOTE_STREAM);\n      return;\n    }\n    if (!that.socket) {\n      safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n\n    if (stream.local) {\n      safeCall(onFailure, ErrorCodes.INVALID_REMOTE_STREAM);\n      Logger.error(\"Invalid remote stream\");\n      return ;\n    }\n\n    stream.close();\n    delete that.remoteStreams[stream.getId()];\n\n    sendMessage(Unsubscribe(stream.getId()), function (answer) {\n      if (answer === \"error\") {\n        safeCall(onFailure, ErrorCodes.UNSUBSCRIBE_STREAM_FAILED);\n        Logger.error(\"Unsubscribe remote stream failed\", stream.getId());\n        return;\n      }\n      Logger.info(\"Unsubscrib stream success\");\n    }, onFailure);\n  };\n\n  that.setRemoteVideoStreamType = function (stream, streamType) {\n    Logger.debug(\"Switching remote video stream \" + stream.getId() + \" to \" + streamType);\n    if (typeof stream !== \"object\" || stream === null) {\n      Logger.error(\"Invalid remote stream\");\n      return;\n    }\n    if (that.state !== CONNECTED) {\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n    if (!stream.local) {\n      switch (streamType) {\n      case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_HIGH:\n      case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_LOW:\n      case that.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_MEDIUM:\n        break;\n      default:\n        //safeCall(onFailure, ErrorCodes.INVALID_OPERATION);\n        return;\n      }\n      sendMessage(SwitchVideoStream(stream.getId(), streamType), null, null);\n    } else {\n      //safeCall(onFailure, ErrorCodes.INVALID_REMOTE_STREAM);\n    }\n  };\n\n  that.startLiveStreaming = function (url, transcodingEnabled) {\n    that.liveStreams.set(url, transcodingEnabled);\n    Logger.debug(\"Start live streaming \" + url + \" transcodingEnabled \" + transcodingEnabled);\n    if (that.state !== CONNECTED) {\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n    sendMessage(StartLiveStreaming(url, transcodingEnabled), null, null);\n  };\n\n  that.stopLiveStreaming = function (url) {\n    Logger.debug(\"Stop live streaming \" + url);\n    if (that.state !== CONNECTED) {\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n    that.liveStreams.delete(url);\n    sendMessage(StopLiveStreaming(url), null, null);\n  };\n\n  that.setLiveTranscoding = function (transcoding) {\n    that.transcoding = transcoding;\n    Logger.debug(\"Set live transcoding \" + transcoding);\n    if (that.state !== CONNECTED) {\n      Logger.error(\"User is not in the session\");\n      return;\n    }\n    sendMessage(SetLiveTranscoding(transcoding), null, null);\n  };\n\n  var generateInterval = function(k) {\n    return Math.min(30, (Math.pow(2, k) - 1)) * 1000;\n  };\n\n  var recover = function() {\n    if (that.key) {\n      Logger.info(\"Re-joining to channel \" + that.joinInfo.cname);\n      that.join(that.joinInfo, that.key, function (uid) {\n        Logger.info(\"User \" + uid + \" is re-joined to \" + that.joinInfo.cname);\n        //TODO rewrite\n        for (var streamId in that.localStreams) {\n          if (that.localStreams[streamId] !== undefined) {\n            var stream = that.localStreams[streamId];\n            delete that.localStreams[streamId];\n            if (stream.pc !== undefined) {\n              stream.pc.close();\n              stream.pc = undefined;\n            }\n          }\n        }\n        that.dispatchEvent(ClientEvent({type: \"rejoin\"}));\n        // Logger.info(\"Publish the old local stream again\");\n        // that.publish(stream, function (err) {\n        //   Logger.error(\"Publish the old stream failed\");\n        // });\n        if(that.liveStreams && that.liveStreams.size) {\n          that.liveStreams.forEach((value, key) => {\n            if(value) {\n              that.setLiveTranscoding(that.transcoding);\n            }\n            that.startLiveStreaming(key, value);\n          });\n        }\n\n      }, function (err) {\n        Logger.error(\"Re-join to channel failed [\" + err + \"]\");\n        if (err === ErrorCodes.ERR_INVALID_VENDOR_KEY) {\n          var evt = StreamEvent({type: \"error\", reason: ErrorCodes.INVALID_KEY});\n          that.dispatchEvent(evt);\n        } else if (err === ErrorCodes.ERR_INVALID_DYNAMIC_KEY) {\n          var evt = StreamEvent({type: \"error\", reason: ErrorCodes.INVALID_DYNAMIC_KEY});\n          that.dispatchEvent(evt);\n        } else if (err === ErrorCodes.ERR_DYNAMIC_KEY_TIMEOUT) {\n          var evt = StreamEvent({type: \"error\", reason: ErrorCodes.DYNAMIC_KEY_TIMEOUT});\n          that.dispatchEvent(evt);\n          var time = generateInterval(that.attemps);\n          Logger.error(\"Connect to server failed [Channel key timeout], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n          var timer = setTimeout(function () {\n            that.attemps++;\n            if (that.socket !== undefined) {\n              that.socket.disconnect();\n            }\n          }, time);\n        }\n      });\n    } else {\n      Logger.error(\"Connection recover failed [Invalid channel key]\");\n    }\n  };\n\n  var createSocket = function (host) {\n    that.socket = Socket(host, {sid: that.joinInfo.sid});\n  };\n\n    var connectSocket = function (joinInfo, callback, error) {\n      // Once we have connected\n      var max_connect_attempts = 10;\n      var connect_timeout_attempt = 0;\n      // Deal with transport close\n      // Sometimes socket.io will disconnect immediately after connected,\n      // we need some strategy to deal with this case.\n\n      // This handles reconnection.\n      // If we try to re-initialize \"that.socket\" each time when connecting,\n      // reconnecting after disconnected from gateway could not result in sucess.\n      // However, we could simply reuse previous created \"that.socket\" to\n      // re-establish the connection between client and gateway, by calling\n      // \"that.socket.socket.connect()\". And we don\"t delete \"that.socket\"\n      // when \"client-disconnect\" event triggered.\n      if (that.socket !== undefined) {\n        that.socket.socket.connect();\n      } else {\n        // Create socket connection.\n        createSocket(joinInfo.gatewayAddr);\n\n        that.socket.on(\"onUplinkStats\", function (args) {\n          if(that.localStreams[that.uid]) {\n            that.localStreams[that.uid].uplinkStats = args;\n          }\n        });\n\n        // Add connect event listener.\n        that.socket.on(\"connect\", function () {\n          that.attemps = 1;\n          sendMessage(Token(joinInfo), callback, error);\n        });\n\n        that.socket.on(\"reconnect\", function () {\n          Logger.debug(\"Try to reconnect choose server and get gateway list again \");\n          getGatewayList(that.joinInfo, function(res) {\n            that.socket.reconnect(res.gateway_addr);\n          })\n        });\n\n        // Add connect_error event listener.\n        that.socket.on(\"connect_error\", function (err) {\n          // Clear peer connection stats timers\n          for (var i in that.timers) {\n            if (that.timers.hasOwnProperty(i)) {\n              clearInterval(that.timers[i]);\n            }\n          }\n\n          for (var i in that.remoteStreams) {\n            if (that.remoteStreams.hasOwnProperty(i)) {\n              var stream = that.remoteStreams[i];\n              // Dispatch peer leave event\n              var evt = ClientEvent({type: \"stream-removed\", uid: stream.getId(), stream: stream});\n              that.dispatchEvent(evt);\n            }\n          }\n\n          removeRemoteStreams();\n          if(isBanned == true) return;\n\n          clearInterval(that.pingTimer);\n          that.state = DISCONNECTED;\n          that.socket = undefined;\n          var evt = StreamEvent({type: \"error\", reason: ErrorCodes.SOCKET_ERROR});\n          that.dispatchEvent(evt);\n\n          var time = generateInterval(that.attemps);\n          Logger.error(\"Connect to server error [\" + JSON.stringify(err) + \"], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n          var timer = setTimeout(function () {\n            // We\"ve tried to reconnect so increase the attempts by 1\n            that.attemps++;\n            recover();\n          }, time);\n        });\n\n        that.socket.on(\"disconnect\", function (reason) {\n          if (that.state === DISCONNECTED) return;\n          that.state = DISCONNECTED;\n\n          // Clear peer connection stats timers\n          for (var i in that.timers) {\n            if (that.timers.hasOwnProperty(i)) {\n              clearInterval(that.timers[i]);\n            }\n          }\n\n          for (var i in that.remoteStreams) {\n            if (that.remoteStreams.hasOwnProperty(i)) {\n              var stream = that.remoteStreams[i];\n              // Dispatch peer leave event\n              var evt = ClientEvent({type: \"stream-removed\", uid: stream.getId(), stream: stream});\n              that.dispatchEvent(evt);\n            }\n          }\n\n          removeRemoteStreams();\n          if(isBanned == true) return;\n          clearInterval(that.pingTimer);\n          that.socket = undefined;\n          //safeCall(error, ErrorCodes.SOCKET_DISCONNECTED);\n          var evt = StreamEvent({type: \"error\", reason: ErrorCodes.SOCKET_DISCONNECTED});\n          that.dispatchEvent(evt);\n\n          var time = generateInterval(that.attemps);\n          Logger.error(\"Disconnect from server [\" + reason + \"], attempt to recover [#\" + that.attemps + \"] after \" + time / 1000 + \" seconds\");\n          var timer = setTimeout(function () {\n            // We\"ve tried to reconnect so increment the attempts by 1\n            that.attemps++;\n            recover();\n          }, time);\n        });\n\n        // We receive an event with a new stream.\n        // type can be \"media\" or \"data\"\n        that.socket.on(\"onAddAudioStream\", function (arg) {\n          if (that.remoteStreams[arg.id] === undefined) {\n            var stream = Stream({\n              streamID: arg.id, local: false, audio: arg.audio, video: arg.video,\n              screen: arg.screen, attributes: arg.attributes});\n            that.remoteStreams[arg.id] = stream;\n            var evt = StreamEvent({type: \"stream-added\", stream: stream});\n            that.dispatchEvent(evt);\n          }\n        });\n\n        that.socket.on(\"onAddVideoStream\", function (arg) {\n          Logger.info(\"Newly added remote stream with uid\", arg.id);\n          if (that.remoteStreams[arg.id] === undefined) {\n            var stream = Stream({\n              streamID: arg.id, local: false, audio: arg.audio, video: arg.video,\n              screen: arg.screen, attributes: arg.attributes});\n            that.remoteStreams[arg.id] = stream;\n            var evt = StreamEvent({type: \"stream-added\", stream: stream});\n            that.dispatchEvent(evt);\n          } else {\n            if (that.remoteStreams[arg.id].stream !== undefined) {\n              that.remoteStreams[arg.id].video = true;\n              that.remoteStreams[arg.id].enableVideo();\n              Logger.info(\"Stream changed: enable video \" + arg.id);\n              var st = that.remoteStreams[arg.id];\n              var element = st.player.elementID;\n              st.stop();\n              st.play(element);\n            } else {\n              var stream = Stream({\n                streamID: arg.id, local: false, audio: true, video: true,\n                screen: false, attributes: arg.attributes});\n              that.remoteStreams[arg.id] = stream;\n              Logger.info(\"Stream changed: modify video \" + arg.id);\n            }\n          }\n        });\n\n        // We receive an event of a stream removed\n        that.socket.on(\"onRemoveStream\", function (arg) {\n          var stream = that.remoteStreams[arg.id];\n          if (!stream) {\n            console.log(\"ERROR stream \", arg.id, \" not found onRemoveStream \", arg);\n            return;\n          }\n          delete that.remoteStreams[arg.id];\n          var evt = StreamEvent({type: \"stream-removed\", stream: stream});\n          that.dispatchEvent(evt);\n          stream.close();\n          if (stream.pc !== undefined) {\n            stream.pc.close();\n            stream.pc = undefined;\n          }\n        });\n\n        // We receive an event of local stream published\n        that.socket.on(\"onPublishStream\", function (arg) {\n          var stream = that.localStreams[arg.id];\n          var evt = StreamEvent({type: \"stream-published\", stream: stream});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"mute_audio\", function (arg) {\n          Logger.info(\"rcv peer mute audio\");     \n          var evt = ClientEvent({type: \"mute-audio\", uid: arg.peerid});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"unmute_audio\", function (arg) {\n          Logger.info(\"rcv peer unmute audio\");  \n          var evt = ClientEvent({type: \"unmute-audio\", uid: arg.peerid});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"mute_video\", function (arg) {\n          Logger.info(\"rcv peer mute video\");   \n          var evt = ClientEvent({type: \"mute-video\", uid: arg.peerid});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"unmute_video\", function (arg) {\n          Logger.info(\"rcv peer unmute video\");   \n          var evt = ClientEvent({type: \"unmute-video\", uid: arg.peerid});\n          that.dispatchEvent(evt);\n        }); \n\t\t\n        that.socket.on(\"user_banned\", function (arg) {\n          Logger.info(\"user banned uid:\"+ arg.id+\"error:\"+arg.errcode); \n          var evt = ClientEvent({type: \"client-banned\", uid: arg.id, attr:arg.errcode});\n          that.dispatchEvent(evt);\n          isBanned = true;\n          leave();\n        });\n\n        that.socket.on(\"onP2PLost\", function (arg) {\n          Logger.debug(\"p2plost:\", arg);\n          if(arg.event === 'publish') {\n            let stream = that.localStreams[arg.uid];\n            stream && report.publish(that.joinInfo.sid, {\n              lts: stream.publishLTS,\n              succ: false,\n              ec: 'DTLS failed',\n            });\n          }\n\n          if(arg.event === 'subscribe') {\n            let stream = that.remoteStreams[arg.uid];\n            stream && report.subscribe(that.joinInfo.sid, {\n              lts: stream.subscribeLTS,\n              succ: false,\n              peerid: arg.uid + '',\n              ec: 'DTLS failed',\n            });\n          }\n\n          that.socket.disconnect();\n          // var time = generateInterval(that.p2p_attemps) + generateInterval(that.attemps);\n          // Logger.error(\"p2p connection lost, attempt to recover [#\" + that.p2p_attemps + \"] after \" + time / 1000 + \" seconds\");\n          // var timer = setTimeout(function () {\n          //   that.p2p_attemps++;\n          //   if (that.socket !== undefined) {\n          //     that.socket.disconnect();\n          //   }\n          // }, time);\n        });\n\n        // We receive an event of a client leaved\n        that.socket.on(\"onPeerLeave\", function (arg) {\n          var evt = ClientEvent({type: \"peer-leave\", uid: arg.id});\n          if (that.remoteStreams.hasOwnProperty(arg.id)) {\n            evt.stream = that.remoteStreams[arg.id];\n          }\n          that.dispatchEvent(evt);\n\n          if (that.remoteStreams.hasOwnProperty(arg.id)) {\n            Logger.info(\"closing stream on peer leave\", arg.id);\n            var stream = that.remoteStreams[arg.id];\n            stream.close();\n            delete that.remoteStreams[arg.id];\n            if (stream.pc !== undefined) {\n              stream.pc.close();\n              stream.pc = undefined;\n            }\n          }\n\n          if (that.timers.hasOwnProperty(arg.id)) {\n            clearInterval(that.timers[arg.id]);\n            delete that.timers[arg.id];\n          }\n\n          if (that.audioLevel[arg.id] != undefined) {\n            delete(that.audioLevel[arg.id]);\n          }\n\n          if (that.timer_counter[arg.id] != undefined) {\n            delete(that.timer_counter[arg.id]);\n          }\n        });\n\n        that.socket.on(\"onUplinkStats\", function (args) {\n        });\n\n        that.socket.on(\"liveStreamingStarted\", function (args) {\n          var evt = LiveStreamingEvent({type: \"liveStreamingStarted\", url: args.url});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"liveStreamingFailed\", function (args) {\n          var evt = LiveStreamingEvent({type: \"liveStreamingFailed\", url: args.url});\n          that.dispatchEvent(evt);\n        });\n\n        that.socket.on(\"liveStreamingStopped\", function (args) {\n          var evt = LiveStreamingEvent({type: \"liveStreamingStopped\", url: args.url});\n          that.dispatchEvent(evt);\n        });\n        that.socket.on(\"liveTranscodingUpdated\", function (args) {\n          var evt = LiveStreamingEvent({type: \"liveTranscodingUpdated\", reason: args.reason});\n          that.dispatchEvent(evt);\n        });\n      }\n    };\n\n    var sendMessage = function (message, callback, error) {\n      if (that.socket === undefined) {\n        safeCall(error, ErrorCodes.INVALID_OPERATION);\n        Logger.error(\"No socket available\");\n        return;\n      }\n      try {\n        that.socket.emitSimpleMessage(message, function (respType, result) {\n          if (respType === \"success\") {\n            if (typeof callback === \"function\") {\n              callback(result);\n            }\n          } else {\n            if (typeof error === \"function\") {\n              error(result);\n            }\n          }\n        });\n      } catch (err) {\n        safeCall(error, ErrorCodes.SOCKET_ERROR);\n        Logger.error(\"Socket emit message failed\" + JSON.stringify(message));\n        Logger.error(err);\n      }\n    };\n\n    // It sends a SDP message to the server using socket.io\n    var sendSimpleSdp = function (message, callback) {\n      if (that.socket === undefined) {\n        Logger.error(\"Error in sendSimpleSdp [socket not ready]\");\n        return;\n      }\n      try {\n        that.socket.emitSimpleMessage(message, function (response, respCallback) {\n          if (callback !== undefined) {\n            callback(response, respCallback);\n          }\n        });\n      } catch (err) {\n        Logger.error(\"Error in sendSimpleSdp [\" + err + \"]\");\n      }\n    };\n\n    function removeRemoteStreams() {\n      for (var i in that.remoteStreams) {\n        if (that.remoteStreams.hasOwnProperty(i)) {\n          var stream = that.remoteStreams[i];\n          stream.stop();\n          stream.close();\n          delete that.remoteStreams[i];\n          if (stream.pc !== undefined) {\n            stream.pc.close();\n            stream.pc = undefined;\n          }\n        }\n      }\n    }\n\n    return that;\n};\n\nexport default GatewayClient\n\n\n\n// WEBPACK FOOTER //\n// ./src/GatewayClient.js","/*\n\nAPI used in Client.js\n\nthat.socket = io.connect(host, {timeout: 10000, reconnection: false, secure: true, transports:['websocket'], upgrade: false});\nthat.socket = io.connect(host, {timeout: 10000, reconnection: false, secure: false, transports:['websocket'], upgrade: false});\n\nthat.socket.connect();          // --> that.socket.socket.connect();\nthat.socket.disconnect();\nthat.socket.disconnect();\n\nthat.socket.on('connect', function () {                         ☑️\nthat.socket.on('connect_error', function (err) {\nthat.socket.on('disconnect', function (reason) {\nthat.socket.on('onAddAudioStream', function (arg) {\nthat.socket.on('onAddVideoStream', function (arg) {\nthat.socket.on('onRemoveStream', function (arg) {\nthat.socket.on('onPublishStream', function (arg) {\nthat.socket.on('onP2PLost', function (arg) {\nthat.socket.on('onPeerLeave', function (arg) {\n\nthat.socket.emit(type, msg, function (respType, msg) {\n    //      sendMessageSocket('token', token, callback, error);\n            sendMessageSocket = function (type, msg, callback, error) {\n            sendMessageSocket('customMessage', msg, function (uid) {\n            sendMessageSocket('customMessage', {\"type\": \"leave\"}, onSuccess, onFailure);\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket('p2p_lost', undefined, function () {}, function () {});\n            sendMessageSocket('unpublish', stream.getId(), function (answer) {\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket(\n            sendMessageSocket('p2p_lost', undefined, function () {}, function () {});\n            sendMessageSocket('unsubscribe', stream.getId(), function (answer) {\n            sendMessageSocket('switchVideoStream', {id: stream.getId(), type: streamType}, null, null);\n\n\nthat.socket.emit(type, options, sdp, function (response, respCallback) {\n    //      sendSDPSocket('publish', {...}, stream.url, function (answer, id) {\n            sendSDPSocket('publish', {...}, offer, function (answer, info) {\n            sendSDPSocket('publish', {...}, ok);\n            sendSDPSocket('publish_stats', {stats: stats}, null, null);\n            sendSDPSocket('subscribe', {...}, offer, function (answer) {\n            sendSDPSocket('subscribe_stats', {...}, null, null);\n\n\n*/\nimport Signal from './Signal'\nimport {MediaEvent} from './Events'\n\nvar Socket = function (host, spec) {\n\n    var that = {};\n\n    that.connect = function() {\n        spec.host = host;\n        that.signal = Signal(spec);\n        that.on = that.signal.on;\n        that.dispatchEvent = that.signal.dispatchEvent;\n\n        that.signal.on('onopen', function (e) {\n            that.signal.onEvent = function (e) {\n                that.dispatchEvent(MediaEvent({type: e.event, msg: e}));\n            };\n\n            that.dispatchEvent(MediaEvent({type: 'connect', msg: e}));\n        });\n\n        that.signal.on('onError', function (ev) {\n            var m = ev.msg;\n            onError(m.code, 'error');\n        });\n    };\n\n    that.disconnect = function() {\n        that.signal.disconnect();\n    };\n\n    that.close = function() {\n        that.signal.close();\n    };\n\n    that.getURL = function() {\n        return that.signal.getURL();\n    };\n\n    that.reconnect = function(host) {\n        that.signal.creatConnection(host);\n    };\n\n    that.emitSimpleMessage = function(message, callback) {\n        that.signal.sendSignalCommand(message, callback);\n    };\n\n    that.connect();\n    return that;\n};\n\nexport default Socket\n\n\n\n// WEBPACK FOOTER //\n// ./src/Websocket.js","import {EventDispatcher, MediaEvent} from './Events'\nimport AgoraCall from './utils/AgoraCall'\nimport Logger from \"./utils/Logger\"\nimport { report } from './Report2';\n\nvar Signal = function (spec) {\n  var that = EventDispatcher(spec);\n  that.needReconnect = true;\n  that.isTimeout = false;\n  that.isInit = true;\n\n  // test\n  // spec.host = [\n  //   \"webgw-shaoxing-cucc-1111.agora.io:5867\",\n  //   \"gw.agora.io:5688\",\n  //   \"webgw-shaoxing-cucc-1.agora.io:5867\"\n  // ];\n\n  that.hostIndex = 0;\n  that.requestID = 0;\n  if(spec.host instanceof Array) {\n    that.host = spec.host;\n  } else {\n    that.host = [spec.host];\n  }\n\n  that.Reconnection = function(host) {\n    that.host = host || that.host;\n    that.hostIndex = 0;\n    that.creatConnection();\n  }\n\n  that.getURL = function(){\n    return that.connection.url;\n  }\n\n  that.creatConnection = function() {\n    if(that.hostIndex >= that.host.length) {\n      that.hostIndex = 0;\n      that.dispatchEvent(MediaEvent({type: \"reconnect\"}));\n      return; \n    }\n    Logger.debug(\"start connect:\" +that.host[that.hostIndex]);\n    that.lts =  new Date().getTime();\n\n    //agora daily build\n    // that.connection = new WebSocket(\"wss://\" + that.host[that.hostIndex++]);\n    that.connection = new WebSocket(\"wss://webgw-test-5.agora.io:5866\");that.hostIndex++;\n\n    //onopen\n    that.connection.onopen = function (e) {\n      Logger.debug(\"websockect opened\");\n      that.isTimeout = false;\n      that.isInit = false;\n      clearTimeout(that.timeoutCheck);\n      that.dispatchEvent(MediaEvent({type: 'onopen', event: e, socket: that}));\n    };\n\n    //onmessage\n    that.connection.onmessage = function (e) {\n      // Logger.debug(\"websockect onmessage:\", e);\n      var m = JSON.parse(e.data);\n      if (m.hasOwnProperty(\"_id\")) {\n        that.dispatchEvent(MediaEvent({type: m._id, msg: m}));\n      } else if (m.hasOwnProperty(\"_type\")) {\n        that.dispatchSocketEvent(MediaEvent({type: m._type, msg: m.message}));\n      }\n    };\n\n    //onclose\n    that.connection.onclose = function (e) { \n      if (!that.needReconnect) {\n          Logger.debug(\"websockect closeed\");\n          AgoraCall(spec.onFailure, e);\n          clearTimeout(that.timeoutCheck);\n          that.dispatchEvent(MediaEvent({type: 'close', event: e}));\n          that.connection.onopen = undefined;\n          that.connection.onclose = undefined;\n          that.connection.onerror = undefined;\n          that.connection.onmessage = undefined;\n          that.connection = undefined;\n      } else {\n        if(!that.isTimeout && !that.isInit) {\n          that.dispatchEvent(MediaEvent({type: 'disconnect', event: e}));\n        } else {\n          Logger.debug(\"websockect connect timeout\");\n          report.joinGateway(spec.sid, {\n            lts: that.lts,\n            succ: false,\n            ec: \"timeout\",\n            addr: that.connection.url,\n          });\n          that.creatConnection();\n        }\n      }\n    };\n  \n    //onerror : \n    // it's very weird that invoke socket.close will triger onerror, \n    // and this callback just return \"error\" but nothing useful details.\n    that.connection.onerror = function (e) {\n      // if (!that.needReconnect) {\n      //   console.log(e);\n      //   AgoraCall(spec.onFailure, e);\n      //   that.dispatchEvent(MediaEvent({type: 'connect_error', event: e}));\n      //   that.connection.onopen = undefined;\n      //   that.connection.onclose = undefined;\n      //   that.connection.onerror = undefined;\n      //   that.connection.onmessage = undefined;\n      //   that.connection = undefined;\n      // }\n    };\n\n    // timeout check\n    var timeoutCheck = setTimeout(function() {\n      if(that.connection && that.connection.readyState != WebSocket.OPEN) {\n        that.isTimeout = true;\n        that.connection.close();\n      }\n    }, 5000); \n  }\n  that.creatConnection();\n  \n  that.sendMessage = function (obj, onError) {\n    if (that.connection && that.connection.readyState == WebSocket.OPEN) {\n      that.connection.send(JSON.stringify(obj));\n    } else {\n      // console.log('Connection to gateway lost while sending ' + obj);\n      // console.log('signal connection state ' + that.connection.readyState);\n      onError({error: 'Gateway not connected'});\n    }\n  };\n\n  that.disconnect = function () {\n    that.needReconnect = true;\n    that.connection.close();\n  };\n\n  that.close = function () {\n    that.needReconnect = false;\n    that.connection.close();\n  };\n\n  that.sendSignalCommand = function (message, callback) {\n      message._id = \"_request_\" + that.requestID;\n      that.requestID += 1;\n      if (!(message._type === 'publish_stats' || message._type === 'subscribe_stats' || message._type === 'publish_stats_low')) {\n        that.on(message._id, function (e) {\n            callback && callback(e.msg._result, e.msg.message);\n            delete that.dispatcher.eventListeners[message._id];\n        });\n      }\n      that.sendMessage(message, function (e) {\n        e.reason = 'NOT_CONNECTED';\n        callback && callback(e.reason, e);\n      });\n  };\n\n  return that;\n};\n\nexport default Signal\n\n\n\n// WEBPACK FOOTER //\n// ./src/Signal.js","import {isChrome, isFireFox, isSafari} from './utils/Browser'\n\nvar simMap = function(profile) {\n  var resolution;\n\n  switch (profile) {\n    case \"120p\":\n    case \"120p_1\":\n      resolution = [\"120p_1\", \"120p_1\", \"120p_1\"];\n      break;\n\n    case \"120p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"120p_3\"];\n      break;\n\n    case \"180p\":\n    case \"180p_1\":\n      resolution = [\"90p_1\", \"90p_1\", \"180p_1\"];\n      break;\n\n    case \"180p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"180p_3\"];\n      break;\n\n    case \"180p_4\":\n      resolution = [\"120p_1\", \"120p_1\", \"180p_4\"];\n      break;\n\n    case \"240p\":\n    case \"240p_1\":\n      resolution = [\"120p_1\", \"120p_1\", \"240p_1\"];\n      break;\n    \n    case \"240p_3\":\n      resolution = [\"120p_3\", \"120p_3\", \"240p_3\"];\n      break;\n\n    case \"240p_4\":\n      resolution = [\"120p_4\", \"120p_4\", \"240p_4\"];\n      break;\n\n    case \"360p\":\n    case \"360p_1\":\n    case \"360p_4\":\n    case \"360p_9\":\n    case \"360p_10\":\n    case \"360p_11\":\n      resolution = [\"90p_1\", \"90p_1\", \"360p_1\"];\n      break;\n\n    case \"360p_3\":\n    case \"360p_6\":\n      resolution = [\"120p_3\", \"120p_3\", \"360p_3\"];\n      break;\n    \n    case \"360p_7\":\n    case \"360p_8\":\n      resolution = [\"120p_1\", \"120p_1\", \"360p_7\"];\n      break;\n\n    case \"480p\":\n    case \"480p_1\":\n    case \"480p_2\":\n    case \"480p_4\":\n    case \"480p_10\":\n      resolution = [\"120p_1\", \"120p_1\", \"480p_1\"];\n      break;\n\n    case \"480p_3\":\n    case \"480p_6\":\n      resolution = [\"120p_3\", \"120p_3\", \"480p_3\"];\n      break;\n\n    case \"480p_8\":\n    case \"480p_9\":\n      resolution = [\"120p_4\", \"120p_4\", \"480p_8\"]; \n      break;\n      \n    case \"720p\":\n    case \"720p_1\":\n    case \"720p_2\":\n    case \"720p_3\":\n      resolution = [\"90p_1\", \"90p_1\", \"720p_1\"]; \n      break;\n\n    case \"720p_5\":\n    case \"720p_6\":\n      resolution = [\"120p_1\", \"120p_1\", \"720p_5\"]; \n      break;\n\n    case \"1080p\":\n    case \"1080p_1\":\n    case \"1080p_2\":\n    case \"1080p_3\":\n    case \"1080p_5\":\n      resolution = [\"90p_1\", \"90p_1\", \"1080p_1\"]; \n      break;\n\n    case \"1440p\":\n    case \"1440p_1\":\n    case \"1440p_2\":\n      resolution = [\"90p_1\", \"90p_1\", \"1440p_1\"]; \n      break;\n    \n    case \"4k\":\n    case \"4k_1\":\n    case \"4k_3\":\n      resolution = [\"90p_1\", \"90p_1\", \"4k_1\"];\n      break;\n\n    default:\n      resolution = [\"120p_1\", \"120p_1\", \"360p_7\"];\n  }\n  \n  if(isFireFox()) {\n    return [resolution[1], 30, 100];\n  } else if(isSafari()) {\n    return [resolution[2], 15, 100];\n  } else {\n    return [resolution[0], 15, 100];\n  }\n}\n\nexport {\n  simMap\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/SimMap.js","import {createClient,\n        AUDIO_SAMPLE_RATE_32000,\n        AUDIO_SAMPLE_RATE_44100,\n        AUDIO_SAMPLE_RATE_48000,\n        VIDEO_CODEC_PROFILE_BASELINE,\n        VIDEO_CODEC_PROFILE_MAIN,\n        VIDEO_CODEC_PROFILE_HIGH,\n        TranscodingUser,\n        LiveTranscoding} from './Client'\nimport {createStream, getDevices} from './Stream'\nimport {checkSystemRequirements} from './Helper'\nimport Logger from './utils/Logger'\n\nexport {\n\n    AUDIO_SAMPLE_RATE_32000,\n\n    AUDIO_SAMPLE_RATE_44100,\n\n    AUDIO_SAMPLE_RATE_48000,\n\n    VIDEO_CODEC_PROFILE_BASELINE,\n\n    VIDEO_CODEC_PROFILE_MAIN,\n\n    VIDEO_CODEC_PROFILE_HIGH,\n\n    TranscodingUser,\n\n    LiveTranscoding,\n\n    createClient,\n\n    createStream,\n\n    getDevices,\n\n    checkSystemRequirements,\n\n    Logger\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Entry.production.js","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/uuid/v4.js\n// module id = 35\n// module chunks = 0 1","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/uuid/lib/rng-browser.js\n// module id = 36\n// module chunks = 0 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 37\n// module chunks = 0 1","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/uuid/lib/bytesToUuid.js\n// module id = 38\n// module chunks = 0 1"],"sourceRoot":""}